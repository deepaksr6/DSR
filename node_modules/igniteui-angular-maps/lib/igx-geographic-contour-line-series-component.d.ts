import { Type, EventEmitter } from '@angular/core';
import { IgxValueBrushScaleComponent } from "igniteui-angular-charts";
import { IgxContourValueResolverComponent } from "igniteui-angular-charts";
import { IgxTriangulationStatusEventArgs } from "igniteui-angular-core";
import { IgxGeographicXYTriangulatingSeriesComponent } from "./igx-geographic-xy-triangulating-series-component";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicContourLineSeries } from "./GeographicContourLineSeries";
/**
 * Represents a class for Geographic Contour Series displayed on a map.
*/
export declare const IgxGeographicContourLineSeriesComponent_PROVIDERS: ({
    provide: typeof IgxGeographicMapSeriesHostComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxGeographicContourLineSeriesComponent extends IgxGeographicXYTriangulatingSeriesComponent {
    protected createImplementation(): GeographicContourLineSeries;
    /**
                                 * @hidden
                                 */
    readonly i: GeographicContourLineSeries;
    constructor();
    /**
     * The name of the property from which to retrieve the numeric values from the ItemsSource items.
    */
    valueMemberPath: string;
    /**
     * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
    */
    fillScale: IgxValueBrushScaleComponent;
    /**
     * The ContourValueResolver used to determine the numeric values of contours.
    */
    valueResolver: IgxContourValueResolverComponent;
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
    private _triangulationStatusChanged;
    /**
     * Raised when the status of an ongoing Triangulation has changed.
    */
    readonly triangulationStatusChanged: EventEmitter<{
        sender: any;
        args: IgxTriangulationStatusEventArgs;
    }>;
}
