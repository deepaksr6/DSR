import { ShapeSeriesBase } from "igniteui-angular-charts";
import { IMapRenderDeferralHandler } from "igniteui-angular-core";
import { GeographicMapImagery } from "./GeographicMapImagery";
import { EventArgs, Type } from "igniteui-angular-core";
import { SeriesView } from "igniteui-angular-charts";
import { Rect } from "igniteui-angular-core";
import { DependencyObject } from "igniteui-angular-core";
import { RenderSurface } from "igniteui-angular-charts";
import { FrameworkElement } from "igniteui-angular-core";
import { ShapeSeriesViewBase } from "igniteui-angular-charts";
import { RenderingContext } from "igniteui-angular-core";
import { PathGeometry } from "igniteui-angular-core";
import { List$1 } from "igniteui-angular-core";
import { PointCollection } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {
    static $t: Type;
    protected bf(): SeriesView;
    iv(a: SeriesView): void;
    protected get_mi(): boolean;
    protected nc: TileSeriesView;
    ng: GeographicMapImagery;
    private ne;
    private nd;
    protected nf: GeographicMapImagery;
    protected i0(a: any, b: string, c: any, d: any): void;
    private nl;
    imageTilesReady: (sender: any, e: EventArgs) => void;
    private nm;
    private nh;
    register(a: DependencyObject, b: (arg1: boolean) => void): void;
    unRegister(a: DependencyObject): void;
    deferredRefresh(): void;
    deferAction(a: () => void): void;
    protected jt(a: Rect, b: Rect): void;
    private ni;
    jf(a: boolean): void;
    protected nn(a: boolean, b: SeriesView): void;
    jd(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void;
    private no;
    hw(a: boolean, b: SeriesView): void;
}
/**
 * @hidden
 */
export declare class TileSeriesView extends ShapeSeriesViewBase {
    static $t: Type;
    constructor(a: TileSeries);
    protected cy: TileSeries;
    protected ca(a: FrameworkElement, b: PathGeometry): void;
    protected cu(a: number, b: List$1<PointCollection>): PathGeometry;
    protected ct(a: number, b: any): FrameworkElement;
    protected ce(a: FrameworkElement): void;
    protected cc(a: FrameworkElement, b: any): void;
    private c9;
    cj(): void;
    ci(): void;
    c1(a: Rect): void;
    private c0;
    private cz;
    c4(a: GeographicMapImagery, b: GeographicMapImagery): void;
    private c3;
    c5(a: GeographicMapImagery, b: GeographicMapImagery): void;
    c7(): void;
    protected a3(a: RenderingContext, b: boolean): void;
    c6(): void;
    c2(): void;
    c8(a: Rect): void;
}
