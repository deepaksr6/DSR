import { Type, EventEmitter } from '@angular/core';
import { IgDataTemplate } from "igniteui-angular-core";
import { MarkerType } from "igniteui-angular-charts";
import { CollisionAvoidanceType } from "igniteui-angular-charts";
import { IgxStyleShapeEventArgs } from "igniteui-angular-charts";
import { IgxGeographicShapeSeriesBaseComponent } from "./igx-geographic-shape-series-base-component";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicShapeSeries } from "./GeographicShapeSeries";
/**
 * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.
*/
export declare const IgxGeographicShapeSeriesComponent_PROVIDERS: ({
    provide: typeof IgxGeographicMapSeriesHostComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxGeographicShapeSeriesComponent extends IgxGeographicShapeSeriesBaseComponent {
    protected createImplementation(): GeographicShapeSeries;
    /**
                                 * @hidden
                                 */
    readonly i: GeographicShapeSeries;
    constructor();
    /**
     * Gets or sets the fill brush.
    */
    shapeFill: string;
    /**
     * Gets or sets the stroke brush.
    */
    shapeStroke: string;
    /**
     * Gets or sets the stroke thickness.
    */
    shapeStrokeThickness: number;
    /**
     * Gets or sets the opacity.
    */
    shapeOpacity: number;
    ensureShapeStyle(): void;
    /**
     * Gets or sets the marker type for the current series object.
     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
    */
    markerType: MarkerType;
    /**
     * Gets or sets the MarkerTemplate for the current series object.
    */
    markerTemplate: IgDataTemplate;
    /**
     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.
    */
    markerBrush: string;
    /**
     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.
    */
    markerOutline: string;
    /**
     * Gets or sets thickness of the marker outline
    */
    markerThickness: number;
    /**
     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
    */
    markerCollisionAvoidance: CollisionAvoidanceType;
    private _styleShape;
    readonly styleShape: EventEmitter<{
        sender: any;
        args: IgxStyleShapeEventArgs;
    }>;
}
