import * as tslib_1 from "tslib";
import { EventEmitter, Output, Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { delegateCombine } from "igniteui-angular-core";
import { MarkerType, MarkerType_$type } from "igniteui-angular-charts";
import { CollisionAvoidanceType, CollisionAvoidanceType_$type } from "igniteui-angular-charts";
import { IgxStyleShapeEventArgs } from "igniteui-angular-charts";
import { IgxGeographicShapeSeriesBaseComponent } from "./igx-geographic-shape-series-base-component";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicShapeSeries } from "./GeographicShapeSeries";
import { Style } from "igniteui-angular-core";
import { ensureEnum, brushToString, stringToBrush } from "igniteui-angular-core";
/**
 * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.
*/
export var IgxGeographicShapeSeriesComponent_PROVIDERS = [{ provide: IgxGeographicShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxGeographicShapeSeriesComponent; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicShapeSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicShapeSeriesComponent; }) }];
var IgxGeographicShapeSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxGeographicShapeSeriesComponent, _super);
    function IgxGeographicShapeSeriesComponent() {
        var _this = _super.call(this) || this;
        _this._styleShape = null;
        return _this;
    }
    IgxGeographicShapeSeriesComponent_1 = IgxGeographicShapeSeriesComponent;
    IgxGeographicShapeSeriesComponent.prototype.createImplementation = function () {
        return new GeographicShapeSeries();
    };
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "shapeFill", {
        /**
         * Gets or sets the fill brush.
        */
        get: function () {
            return this.i.nh ? this.i.nh.fill : null;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.nh.fill = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "shapeStroke", {
        /**
         * Gets or sets the stroke brush.
        */
        get: function () {
            return this.i.nh ? this.i.nh.stroke : null;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.nh.stroke = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "shapeStrokeThickness", {
        /**
         * Gets or sets the stroke thickness.
        */
        get: function () {
            return this.i.nh ? this.i.nh.strokeThickness : NaN;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.nh.strokeThickness = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "shapeOpacity", {
        /**
         * Gets or sets the opacity.
        */
        get: function () {
            return this.i.nh ? this.i.nh.opacity : NaN;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.nh.opacity = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgxGeographicShapeSeriesComponent.prototype.ensureShapeStyle = function () {
        if (this.i.nh) {
            return;
        }
        this.i.nh = new Style();
    };
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "markerType", {
        /**
         * Gets or sets the marker type for the current series object.
         * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
        */
        get: function () {
            return this.i.mp;
        },
        set: function (v) {
            this.i.mp = ensureEnum(MarkerType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "markerTemplate", {
        /**
         * Gets or sets the MarkerTemplate for the current series object.
        */
        get: function () {
            return this.i.m4;
        },
        set: function (v) {
            this.i.m4 = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "markerBrush", {
        /**
         * Gets or sets the brush that specifies how the current series object's marker interiors are painted.
        */
        get: function () {
            return brushToString(this.i.ne);
        },
        set: function (v) {
            this.i.ne = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "markerOutline", {
        /**
         * Gets or sets the brush that specifies how the current series object's marker outlines are painted.
        */
        get: function () {
            return brushToString(this.i.nf);
        },
        set: function (v) {
            this.i.nf = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "markerThickness", {
        /**
         * Gets or sets thickness of the marker outline
        */
        get: function () {
            return this.i.ms;
        },
        set: function (v) {
            this.i.ms = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "markerCollisionAvoidance", {
        /**
         * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
        */
        get: function () {
            return this.i.mo;
        },
        set: function (v) {
            this.i.mo = ensureEnum(CollisionAvoidanceType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicShapeSeriesComponent.prototype, "styleShape", {
        get: function () {
            var _this = this;
            if (this._styleShape == null) {
                this._styleShape = new EventEmitter();
                this.i.styleShape = delegateCombine(this.i.styleShape, function (o, e) {
                    _this._runInZone(function () {
                        var outerArgs = new IgxStyleShapeEventArgs();
                        outerArgs._provideImplementation(e);
                        if (_this.beforeStyleShape) {
                            _this.beforeStyleShape(_this, outerArgs);
                        }
                        _this._styleShape.emit({
                            sender: _this,
                            args: outerArgs
                        });
                    });
                });
            }
            return this._styleShape;
        },
        enumerable: true,
        configurable: true
    });
    var IgxGeographicShapeSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicShapeSeriesComponent.prototype, "shapeFill", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicShapeSeriesComponent.prototype, "shapeStroke", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicShapeSeriesComponent.prototype, "shapeStrokeThickness", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicShapeSeriesComponent.prototype, "shapeOpacity", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicShapeSeriesComponent.prototype, "markerType", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], IgxGeographicShapeSeriesComponent.prototype, "markerTemplate", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicShapeSeriesComponent.prototype, "markerBrush", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicShapeSeriesComponent.prototype, "markerOutline", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicShapeSeriesComponent.prototype, "markerThickness", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicShapeSeriesComponent.prototype, "markerCollisionAvoidance", null);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicShapeSeriesComponent.prototype, "styleShape", null);
    IgxGeographicShapeSeriesComponent = IgxGeographicShapeSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-geographic-shape-series',
            template: "",
            providers: [{ provide: IgxGeographicShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxGeographicShapeSeriesComponent_1; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicShapeSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicShapeSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicShapeSeriesComponent);
    return IgxGeographicShapeSeriesComponent;
}(IgxGeographicShapeSeriesBaseComponent));
export { IgxGeographicShapeSeriesComponent };
//# sourceMappingURL=igx-geographic-shape-series-component.js.map