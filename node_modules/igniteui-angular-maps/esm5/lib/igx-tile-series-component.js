import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxGeographicMapImagery } from "./igx-geographic-map-imagery";
import { IgxShapeSeriesBaseComponent } from "igniteui-angular-charts";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { TileSeries } from "./TileSeries";
/**
 * Represents a tile series class that can render imagery tiles
*/
export var IgxTileSeriesComponent_PROVIDERS = [{ provide: IgxShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxTileSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxTileSeriesComponent; }) }];
var IgxTileSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxTileSeriesComponent, _super);
    function IgxTileSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxTileSeriesComponent_1 = IgxTileSeriesComponent;
    IgxTileSeriesComponent.prototype.createImplementation = function () {
        return new TileSeries();
    };
    Object.defineProperty(IgxTileSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTileSeriesComponent.prototype, "tileImagery", {
        /**
         * The MapImagery which is used to provide the tiles for display.
        */
        get: function () {
            if (this.i.ng == null) {
                return null;
            }
            return this.i.ng.externalObject;
        },
        set: function (v) {
            v == null ? this.i.ng = null : this.i.ng = v.i;
        },
        enumerable: true,
        configurable: true
    });
    IgxTileSeriesComponent.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.tileImagery && this.tileImagery.name && this.tileImagery.name == name) {
            return this.tileImagery;
        }
        return null;
    };
    /**
     * Defers rendering of the series
    
    */
    IgxTileSeriesComponent.prototype.deferredRefresh = function () {
        this.i.deferredRefresh();
    };
    var IgxTileSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", IgxGeographicMapImagery),
        tslib_1.__metadata("design:paramtypes", [IgxGeographicMapImagery])
    ], IgxTileSeriesComponent.prototype, "tileImagery", null);
    IgxTileSeriesComponent = IgxTileSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-tile-series',
            template: "",
            providers: [{ provide: IgxShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxTileSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxTileSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxTileSeriesComponent);
    return IgxTileSeriesComponent;
}(IgxShapeSeriesBaseComponent));
export { IgxTileSeriesComponent };
//# sourceMappingURL=igx-tile-series-component.js.map