import * as tslib_1 from "tslib";
import { EventEmitter, Output, Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { delegateCombine } from "igniteui-angular-core";
import { IgxProgressiveLoadStatusEventArgs } from "igniteui-angular-charts";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicHighDensityScatterSeries } from "./GeographicHighDensityScatterSeries";
import { ensureBool, colorToString, stringToColor } from "igniteui-angular-core";
/**
 * Series class for a geographic map with points marked at given locations.
 * This is the geographic equivalent of a HighDensityScatterSeries.
*/
export var IgxGeographicHighDensityScatterSeriesComponent_PROVIDERS = [{ provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicHighDensityScatterSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicHighDensityScatterSeriesComponent; }) }];
var IgxGeographicHighDensityScatterSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxGeographicHighDensityScatterSeriesComponent, _super);
    function IgxGeographicHighDensityScatterSeriesComponent() {
        var _this = _super.call(this) || this;
        _this._progressiveLoadStatusChanged = null;
        return _this;
    }
    IgxGeographicHighDensityScatterSeriesComponent_1 = IgxGeographicHighDensityScatterSeriesComponent;
    IgxGeographicHighDensityScatterSeriesComponent.prototype.createImplementation = function () {
        return new GeographicHighDensityScatterSeries();
    };
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "latitudeMemberPath", {
        /**
         * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
        */
        get: function () {
            return this.i.mq;
        },
        set: function (v) {
            this.i.mq = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "longitudeMemberPath", {
        /**
         * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
        */
        get: function () {
            return this.i.ms;
        },
        set: function (v) {
            this.i.ms = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "useBruteForce", {
        /**
         * Gets or sets the whether to use use brute force mode.
        */
        get: function () {
            return this.i.mf;
        },
        set: function (v) {
            this.i.mf = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "progressiveLoad", {
        /**
         * Gets or sets the whether to progressively load the data into the chart.
        */
        get: function () {
            return this.i.me;
        },
        set: function (v) {
            this.i.me = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "mouseOverEnabled", {
        /**
         * Gets or sets the whether the chart reacts to mouse move events.
        */
        get: function () {
            return this.i.md;
        },
        set: function (v) {
            this.i.md = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMinimum", {
        /**
         * Gets or sets the density value that maps to the minimum heat color.
        */
        get: function () {
            return this.i.mh;
        },
        set: function (v) {
            this.i.mh = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMaximum", {
        /**
         * Gets or sets the value that maps to the maximum heat color.
        */
        get: function () {
            return this.i.mg;
        },
        set: function (v) {
            this.i.mg = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMinimumColor", {
        /**
         * Gets or sets the color to use for the minimum end of the scale.
        */
        get: function () {
            return colorToString(this.i.na);
        },
        set: function (v) {
            this.i.na = stringToColor(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMaximumColor", {
        /**
         * Gets or sets the color to use for the maximum end of the scale.
        */
        get: function () {
            return colorToString(this.i.m9);
        },
        set: function (v) {
            this.i.m9 = stringToColor(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "pointExtent", {
        /**
         * Gets or sets the the pixel extent of the square data points that are rendered.
        */
        get: function () {
            return this.i.mk;
        },
        set: function (v) {
            this.i.mk = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "progressiveStatus", {
        /**
         * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.
        */
        get: function () {
            return this.i.ml;
        },
        set: function (v) {
            this.i.ml = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicHighDensityScatterSeriesComponent.prototype, "progressiveLoadStatusChanged", {
        /**
         * Raised when the progressive loading state of the series has changed.
        */
        get: function () {
            var _this = this;
            if (this._progressiveLoadStatusChanged == null) {
                this._progressiveLoadStatusChanged = new EventEmitter();
                this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, function (o, e) {
                    _this._runInZone(function () {
                        var outerArgs = new IgxProgressiveLoadStatusEventArgs();
                        outerArgs._provideImplementation(e);
                        if (_this.beforeProgressiveLoadStatusChanged) {
                            _this.beforeProgressiveLoadStatusChanged(_this, outerArgs);
                        }
                        _this._progressiveLoadStatusChanged.emit({
                            sender: _this,
                            args: outerArgs
                        });
                    });
                });
            }
            return this._progressiveLoadStatusChanged;
        },
        enumerable: true,
        configurable: true
    });
    var IgxGeographicHighDensityScatterSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "latitudeMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "longitudeMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "useBruteForce", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "progressiveLoad", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "mouseOverEnabled", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMinimum", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMaximum", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMinimumColor", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "heatMaximumColor", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "pointExtent", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "progressiveStatus", null);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicHighDensityScatterSeriesComponent.prototype, "progressiveLoadStatusChanged", null);
    IgxGeographicHighDensityScatterSeriesComponent = IgxGeographicHighDensityScatterSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-geographic-high-density-scatter-series',
            template: "",
            providers: [{ provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicHighDensityScatterSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicHighDensityScatterSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicHighDensityScatterSeriesComponent);
    return IgxGeographicHighDensityScatterSeriesComponent;
}(IgxGeographicMapSeriesHostComponent));
export { IgxGeographicHighDensityScatterSeriesComponent };
//# sourceMappingURL=igx-geographic-high-density-scatter-series-component.js.map