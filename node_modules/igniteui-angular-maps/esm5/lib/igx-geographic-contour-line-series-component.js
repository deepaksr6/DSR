import * as tslib_1 from "tslib";
import { EventEmitter, Output, Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { delegateCombine } from "igniteui-angular-core";
import { IgxValueBrushScaleComponent } from "igniteui-angular-charts";
import { IgxContourValueResolverComponent } from "igniteui-angular-charts";
import { IgxTriangulationStatusEventArgs } from "igniteui-angular-core";
import { IgxGeographicXYTriangulatingSeriesComponent } from "./igx-geographic-xy-triangulating-series-component";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicContourLineSeries } from "./GeographicContourLineSeries";
/**
 * Represents a class for Geographic Contour Series displayed on a map.
*/
export var IgxGeographicContourLineSeriesComponent_PROVIDERS = [{ provide: IgxGeographicXYTriangulatingSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicContourLineSeriesComponent; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicContourLineSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicContourLineSeriesComponent; }) }];
var IgxGeographicContourLineSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxGeographicContourLineSeriesComponent, _super);
    function IgxGeographicContourLineSeriesComponent() {
        var _this = _super.call(this) || this;
        _this._triangulationStatusChanged = null;
        return _this;
    }
    IgxGeographicContourLineSeriesComponent_1 = IgxGeographicContourLineSeriesComponent;
    IgxGeographicContourLineSeriesComponent.prototype.createImplementation = function () {
        return new GeographicContourLineSeries();
    };
    Object.defineProperty(IgxGeographicContourLineSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicContourLineSeriesComponent.prototype, "valueMemberPath", {
        /**
         * The name of the property from which to retrieve the numeric values from the ItemsSource items.
        */
        get: function () {
            return this.i.m0;
        },
        set: function (v) {
            this.i.m0 = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicContourLineSeriesComponent.prototype, "fillScale", {
        /**
         * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
        */
        get: function () {
            if (this.i.mx == null) {
                return null;
            }
            if (!this.i.mx.externalObject) {
                var e = IgxValueBrushScaleComponent._createFromInternal(this.i.mx);
                if (e) {
                    e._implementation = this.i.mx;
                }
                this.i.mx.externalObject = e;
            }
            return this.i.mx.externalObject;
        },
        set: function (v) {
            if (v != null && this._stylingContainer && v._styling)
                v._styling(this._stylingContainer, this, this);
            v == null ? this.i.mx = null : this.i.mx = v.i;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicContourLineSeriesComponent.prototype, "valueResolver", {
        /**
         * The ContourValueResolver used to determine the numeric values of contours.
        */
        get: function () {
            if (this.i.mu == null) {
                return null;
            }
            if (!this.i.mu.externalObject) {
                var e = IgxContourValueResolverComponent._createFromInternal(this.i.mu);
                if (e) {
                    e._implementation = this.i.mu;
                }
                this.i.mu.externalObject = e;
            }
            return this.i.mu.externalObject;
        },
        set: function (v) {
            if (v != null && this._stylingContainer && v._styling)
                v._styling(this._stylingContainer, this, this);
            v == null ? this.i.mu = null : this.i.mu = v.i;
        },
        enumerable: true,
        configurable: true
    });
    IgxGeographicContourLineSeriesComponent.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.fillScale && this.fillScale.name && this.fillScale.name == name) {
            return this.fillScale;
        }
        if (this.valueResolver && this.valueResolver.name && this.valueResolver.name == name) {
            return this.valueResolver;
        }
        return null;
    };
    IgxGeographicContourLineSeriesComponent.prototype._styling = function (container, component, parent) {
        _super.prototype._styling.call(this, container, component, parent);
        this._inStyling = true;
        if (this.fillScale && this.fillScale._styling) {
            this.fillScale._styling(container, component, this);
        }
        if (this.valueResolver && this.valueResolver._styling) {
            this.valueResolver._styling(container, component, this);
        }
        this._inStyling = false;
    };
    Object.defineProperty(IgxGeographicContourLineSeriesComponent.prototype, "triangulationStatusChanged", {
        /**
         * Raised when the status of an ongoing Triangulation has changed.
        */
        get: function () {
            var _this = this;
            if (this._triangulationStatusChanged == null) {
                this._triangulationStatusChanged = new EventEmitter();
                this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, function (o, e) {
                    _this._runInZone(function () {
                        var outerArgs = new IgxTriangulationStatusEventArgs();
                        outerArgs._provideImplementation(e);
                        if (_this.beforeTriangulationStatusChanged) {
                            _this.beforeTriangulationStatusChanged(_this, outerArgs);
                        }
                        _this._triangulationStatusChanged.emit({
                            sender: _this,
                            args: outerArgs
                        });
                    });
                });
            }
            return this._triangulationStatusChanged;
        },
        enumerable: true,
        configurable: true
    });
    var IgxGeographicContourLineSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicContourLineSeriesComponent.prototype, "valueMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", IgxValueBrushScaleComponent),
        tslib_1.__metadata("design:paramtypes", [IgxValueBrushScaleComponent])
    ], IgxGeographicContourLineSeriesComponent.prototype, "fillScale", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", IgxContourValueResolverComponent),
        tslib_1.__metadata("design:paramtypes", [IgxContourValueResolverComponent])
    ], IgxGeographicContourLineSeriesComponent.prototype, "valueResolver", null);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicContourLineSeriesComponent.prototype, "triangulationStatusChanged", null);
    IgxGeographicContourLineSeriesComponent = IgxGeographicContourLineSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-geographic-contour-line-series',
            template: "",
            providers: [{ provide: IgxGeographicXYTriangulatingSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicContourLineSeriesComponent_1; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicContourLineSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicContourLineSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicContourLineSeriesComponent);
    return IgxGeographicContourLineSeriesComponent;
}(IgxGeographicXYTriangulatingSeriesComponent));
export { IgxGeographicContourLineSeriesComponent };
//# sourceMappingURL=igx-geographic-contour-line-series-component.js.map