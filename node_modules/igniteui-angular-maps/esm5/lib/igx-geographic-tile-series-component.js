import * as tslib_1 from "tslib";
import { EventEmitter, Output, Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { delegateCombine } from "igniteui-angular-core";
import { IgxGeographicMapImagery } from "./igx-geographic-map-imagery";
import { IgxImageTilesReadyEventArgs } from "./igx-image-tiles-ready-event-args";
import { IgxGeographicShapeSeriesBaseComponent } from "./igx-geographic-shape-series-base-component";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicTileSeries } from "./GeographicTileSeries";
/**
 * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.
*/
export var IgxGeographicTileSeriesComponent_PROVIDERS = [{ provide: IgxGeographicShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxGeographicTileSeriesComponent; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicTileSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicTileSeriesComponent; }) }];
var IgxGeographicTileSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxGeographicTileSeriesComponent, _super);
    function IgxGeographicTileSeriesComponent() {
        var _this = _super.call(this) || this;
        _this._imageTilesReady = null;
        return _this;
    }
    IgxGeographicTileSeriesComponent_1 = IgxGeographicTileSeriesComponent;
    IgxGeographicTileSeriesComponent.prototype.createImplementation = function () {
        return new GeographicTileSeries();
    };
    Object.defineProperty(IgxGeographicTileSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicTileSeriesComponent.prototype, "tileImagery", {
        /**
         * The MapImagery which is used to provide the tiles for display.
        */
        get: function () {
            if (this.i.mq == null) {
                return null;
            }
            return this.i.mq.externalObject;
        },
        set: function (v) {
            v == null ? this.i.mq = null : this.i.mq = v.i;
        },
        enumerable: true,
        configurable: true
    });
    IgxGeographicTileSeriesComponent.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.tileImagery && this.tileImagery.name && this.tileImagery.name == name) {
            return this.tileImagery;
        }
        return null;
    };
    /**
     * Removes all cached tile Imagery from the
    
    */
    IgxGeographicTileSeriesComponent.prototype.clearTileCache = function () {
        this.i.mu();
    };
    Object.defineProperty(IgxGeographicTileSeriesComponent.prototype, "imageTilesReady", {
        /**
         * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.
        */
        get: function () {
            var _this = this;
            if (this._imageTilesReady == null) {
                this._imageTilesReady = new EventEmitter();
                this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, function (o, e) {
                    _this._runInZone(function () {
                        var outerArgs = new IgxImageTilesReadyEventArgs();
                        outerArgs._provideImplementation(e);
                        if (_this.beforeImageTilesReady) {
                            _this.beforeImageTilesReady(_this, outerArgs);
                        }
                        _this._imageTilesReady.emit({
                            sender: _this,
                            args: outerArgs
                        });
                    });
                });
            }
            return this._imageTilesReady;
        },
        enumerable: true,
        configurable: true
    });
    var IgxGeographicTileSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", IgxGeographicMapImagery),
        tslib_1.__metadata("design:paramtypes", [IgxGeographicMapImagery])
    ], IgxGeographicTileSeriesComponent.prototype, "tileImagery", null);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicTileSeriesComponent.prototype, "imageTilesReady", null);
    IgxGeographicTileSeriesComponent = IgxGeographicTileSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-geographic-tile-series',
            template: "",
            providers: [{ provide: IgxGeographicShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxGeographicTileSeriesComponent_1; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicTileSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicTileSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicTileSeriesComponent);
    return IgxGeographicTileSeriesComponent;
}(IgxGeographicShapeSeriesBaseComponent));
export { IgxGeographicTileSeriesComponent };
//# sourceMappingURL=igx-geographic-tile-series-component.js.map