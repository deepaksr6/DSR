import * as tslib_1 from "tslib";
import { EventEmitter, Output, Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { delegateCombine } from "igniteui-angular-core";
import { IgxColorScaleComponent } from "igniteui-angular-charts";
import { IgxTriangulationStatusEventArgs } from "igniteui-angular-core";
import { IgxGeographicXYTriangulatingSeriesComponent } from "./igx-geographic-xy-triangulating-series-component";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicScatterAreaSeries } from "./GeographicScatterAreaSeries";
/**
 * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.
*/
export var IgxGeographicScatterAreaSeriesComponent_PROVIDERS = [{ provide: IgxGeographicXYTriangulatingSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicScatterAreaSeriesComponent; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicScatterAreaSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicScatterAreaSeriesComponent; }) }];
var IgxGeographicScatterAreaSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxGeographicScatterAreaSeriesComponent, _super);
    function IgxGeographicScatterAreaSeriesComponent() {
        var _this = _super.call(this) || this;
        _this._triangulationStatusChanged = null;
        return _this;
    }
    IgxGeographicScatterAreaSeriesComponent_1 = IgxGeographicScatterAreaSeriesComponent;
    IgxGeographicScatterAreaSeriesComponent.prototype.createImplementation = function () {
        return new GeographicScatterAreaSeries();
    };
    Object.defineProperty(IgxGeographicScatterAreaSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicScatterAreaSeriesComponent.prototype, "colorMemberPath", {
        /**
         * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
        */
        get: function () {
            return this.i.mz;
        },
        set: function (v) {
            this.i.mz = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicScatterAreaSeriesComponent.prototype, "colorScale", {
        /**
         * The ColorScale used to resolve the color values of points in the series.
        */
        get: function () {
            if (this.i.mv == null) {
                return null;
            }
            if (!this.i.mv.externalObject) {
                var e = IgxColorScaleComponent._createFromInternal(this.i.mv);
                if (e) {
                    e._implementation = this.i.mv;
                }
                this.i.mv.externalObject = e;
            }
            return this.i.mv.externalObject;
        },
        set: function (v) {
            if (v != null && this._stylingContainer && v._styling)
                v._styling(this._stylingContainer, this, this);
            v == null ? this.i.mv = null : this.i.mv = v.i;
        },
        enumerable: true,
        configurable: true
    });
    IgxGeographicScatterAreaSeriesComponent.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.colorScale && this.colorScale.name && this.colorScale.name == name) {
            return this.colorScale;
        }
        return null;
    };
    IgxGeographicScatterAreaSeriesComponent.prototype._styling = function (container, component, parent) {
        _super.prototype._styling.call(this, container, component, parent);
        this._inStyling = true;
        if (this.colorScale && this.colorScale._styling) {
            this.colorScale._styling(container, component, this);
        }
        this._inStyling = false;
    };
    Object.defineProperty(IgxGeographicScatterAreaSeriesComponent.prototype, "triangulationStatusChanged", {
        /**
         * Raised when the status of an ongoing Triangulation has changed.
        */
        get: function () {
            var _this = this;
            if (this._triangulationStatusChanged == null) {
                this._triangulationStatusChanged = new EventEmitter();
                this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, function (o, e) {
                    _this._runInZone(function () {
                        var outerArgs = new IgxTriangulationStatusEventArgs();
                        outerArgs._provideImplementation(e);
                        if (_this.beforeTriangulationStatusChanged) {
                            _this.beforeTriangulationStatusChanged(_this, outerArgs);
                        }
                        _this._triangulationStatusChanged.emit({
                            sender: _this,
                            args: outerArgs
                        });
                    });
                });
            }
            return this._triangulationStatusChanged;
        },
        enumerable: true,
        configurable: true
    });
    var IgxGeographicScatterAreaSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicScatterAreaSeriesComponent.prototype, "colorMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", IgxColorScaleComponent),
        tslib_1.__metadata("design:paramtypes", [IgxColorScaleComponent])
    ], IgxGeographicScatterAreaSeriesComponent.prototype, "colorScale", null);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicScatterAreaSeriesComponent.prototype, "triangulationStatusChanged", null);
    IgxGeographicScatterAreaSeriesComponent = IgxGeographicScatterAreaSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-geographic-scatter-area-series',
            template: "",
            providers: [{ provide: IgxGeographicXYTriangulatingSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicScatterAreaSeriesComponent_1; }) }, { provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicScatterAreaSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicScatterAreaSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicScatterAreaSeriesComponent);
    return IgxGeographicScatterAreaSeriesComponent;
}(IgxGeographicXYTriangulatingSeriesComponent));
export { IgxGeographicScatterAreaSeriesComponent };
//# sourceMappingURL=igx-geographic-scatter-area-series-component.js.map