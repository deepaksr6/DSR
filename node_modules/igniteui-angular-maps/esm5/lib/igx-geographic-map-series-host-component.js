import * as tslib_1 from "tslib";
import { forwardRef, Input } from '@angular/core';
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { toPoint } from "igniteui-angular-core";
/**
 * Base class for hosting chart series in a IgxGeographicMap.Component
*/
export var IgxGeographicMapSeriesHostComponent_PROVIDERS = [{ provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicMapSeriesHostComponent; }) }];
var IgxGeographicMapSeriesHostComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxGeographicMapSeriesHostComponent, _super);
    function IgxGeographicMapSeriesHostComponent() {
        return _super.call(this) || this;
    }
    Object.defineProperty(IgxGeographicMapSeriesHostComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicMapSeriesHostComponent.prototype, "isGeographic", {
        /**
         * Checks if this control is geographic coordinate system
        */
        get: function () {
            return this.i.ct;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicMapSeriesHostComponent.prototype, "visibleFromScale", {
        /**
         * The minimum scale at which this series becomes visible.
         * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.
        */
        get: function () {
            return this.i.l5;
        },
        set: function (v) {
            this.i.l5 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicMapSeriesHostComponent.prototype, "coercionMethods", {
        /**
         * Gets or sets the coercion methods to use when loading data from data sources.
         * Should be specified before setting any member paths, if being used. Setting it later
         * will not cause data to be reimported into the chart.
        */
        get: function () {
            return this.i.coercionMethods;
        },
        set: function (v) {
            this.i.coercionMethods = v;
        },
        enumerable: true,
        configurable: true
    });
    IgxGeographicMapSeriesHostComponent.prototype.getItemValue = function (item, memberPathName) {
        var iv = this.i.fs(item, memberPathName);
        return (iv);
    };
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    IgxGeographicMapSeriesHostComponent.prototype.getItem = function (world) {
        var iv = this.i.fp(toPoint(world));
        return (iv);
    };
    /**
     * Renders the series.
    
    * @param animate  * True if the change should be animated.
    */
    IgxGeographicMapSeriesHostComponent.prototype.renderSeries = function (animate) {
        this.i.je(animate);
    };
    /**
     * Called when this series' Style is updated.
    
    */
    IgxGeographicMapSeriesHostComponent.prototype.styleUpdated = function () {
        this.i.jn();
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicMapSeriesHostComponent.prototype, "visibleFromScale", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], IgxGeographicMapSeriesHostComponent.prototype, "coercionMethods", null);
    return IgxGeographicMapSeriesHostComponent;
}(IgxSeriesComponent));
export { IgxGeographicMapSeriesHostComponent };
//# sourceMappingURL=igx-geographic-map-series-host-component.js.map