import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { MarkerType, MarkerType_$type } from "igniteui-angular-charts";
import { CollisionAvoidanceType, CollisionAvoidanceType_$type } from "igniteui-angular-charts";
import { IgxGeographicMapSeriesHostComponent } from "./igx-geographic-map-series-host-component";
import { IgxSeriesComponent } from "igniteui-angular-charts";
import { GeographicSymbolSeries } from "./GeographicSymbolSeries";
import { ensureEnum, brushToString, stringToBrush } from "igniteui-angular-core";
/**
 * Series class for a geographic map with points marked at given locations.
 * This is the geographic equivalent of a ScatterSeries.
*/
export var IgxGeographicSymbolSeriesComponent_PROVIDERS = [{ provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicSymbolSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicSymbolSeriesComponent; }) }];
var IgxGeographicSymbolSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxGeographicSymbolSeriesComponent, _super);
    function IgxGeographicSymbolSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxGeographicSymbolSeriesComponent_1 = IgxGeographicSymbolSeriesComponent;
    IgxGeographicSymbolSeriesComponent.prototype.createImplementation = function () {
        return new GeographicSymbolSeries();
    };
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "latitudeMemberPath", {
        /**
         * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
        */
        get: function () {
            return this.i.mi;
        },
        set: function (v) {
            this.i.mi = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "longitudeMemberPath", {
        /**
         * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
        */
        get: function () {
            return this.i.mk;
        },
        set: function (v) {
            this.i.mk = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "markerType", {
        /**
         * Gets or sets the marker type for the current series object.
         * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
        */
        get: function () {
            return this.i.mc;
        },
        set: function (v) {
            this.i.mc = ensureEnum(MarkerType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "markerCollisionAvoidance", {
        /**
         * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
        */
        get: function () {
            return this.i.mb;
        },
        set: function (v) {
            this.i.mb = ensureEnum(CollisionAvoidanceType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "markerTemplate", {
        /**
         * Gets or sets the MarkerTemplate for the current series object.
        */
        get: function () {
            return this.i.mu;
        },
        set: function (v) {
            this.i.mu = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "markerBrush", {
        /**
         * Gets or sets the brush that specifies how the current series object's marker interiors are painted.
        */
        get: function () {
            return brushToString(this.i.m5);
        },
        set: function (v) {
            this.i.m5 = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "markerOutline", {
        /**
         * Gets or sets the brush that specifies how the current series object's marker outlines are painted.
        */
        get: function () {
            return brushToString(this.i.m6);
        },
        set: function (v) {
            this.i.m6 = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "maximumMarkers", {
        /**
         * Gets or sets the maximum number of markerItems displayed by the current series.
         * If more than the specified number of markerItems are visible, the series will automatically
         * choose a representative set.
        */
        get: function () {
            return this.i.mh;
        },
        set: function (v) {
            this.i.mh = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxGeographicSymbolSeriesComponent.prototype, "markerThickness", {
        /**
         * Gets or sets thickness of the marker outline
        */
        get: function () {
            return this.i.mg;
        },
        set: function (v) {
            this.i.mg = +v;
        },
        enumerable: true,
        configurable: true
    });
    var IgxGeographicSymbolSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicSymbolSeriesComponent.prototype, "latitudeMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicSymbolSeriesComponent.prototype, "longitudeMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicSymbolSeriesComponent.prototype, "markerType", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicSymbolSeriesComponent.prototype, "markerCollisionAvoidance", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], IgxGeographicSymbolSeriesComponent.prototype, "markerTemplate", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicSymbolSeriesComponent.prototype, "markerBrush", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxGeographicSymbolSeriesComponent.prototype, "markerOutline", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicSymbolSeriesComponent.prototype, "maximumMarkers", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxGeographicSymbolSeriesComponent.prototype, "markerThickness", null);
    IgxGeographicSymbolSeriesComponent = IgxGeographicSymbolSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-geographic-symbol-series',
            template: "",
            providers: [{ provide: IgxGeographicMapSeriesHostComponent, useExisting: forwardRef(function () { return IgxGeographicSymbolSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxGeographicSymbolSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxGeographicSymbolSeriesComponent);
    return IgxGeographicSymbolSeriesComponent;
}(IgxGeographicMapSeriesHostComponent));
export { IgxGeographicSymbolSeriesComponent };
//# sourceMappingURL=igx-geographic-symbol-series-component.js.map