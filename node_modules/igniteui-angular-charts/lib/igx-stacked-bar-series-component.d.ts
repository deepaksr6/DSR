import { Type } from '@angular/core';
import { IgPoint } from "igniteui-angular-core";
import { IgxVerticalStackedSeriesBaseComponent } from "./igx-vertical-stacked-series-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { StackedBarSeries } from "./StackedBarSeries";
/**
 * Represents a IgxDataChartComponent stacked bar series.
*/
export declare const IgxStackedBarSeriesComponent_PROVIDERS: ({
    provide: typeof IgxMarkerSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxStackedBarSeriesComponent extends IgxVerticalStackedSeriesBaseComponent {
    protected createImplementation(): StackedBarSeries;
    /**
                                 * @hidden
                                 */
    readonly i: StackedBarSeries;
    constructor();
    /**
     * Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.
    */
    radiusX: number;
    /**
     * Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.
    */
    radiusY: number;
    /**
     * Scrolls the series to display the item for the specified data item.
     * The series is scrolled by the minimum amount required to place the specified data item within
     * the central 80% of the visible axis.
    
    * @param item  * The data item (item) to scroll to.
    */
    scrollIntoView(item: any): boolean;
    /**
     * Gets the index of the item that resides at the provided world coordinates.
    
    * @param world  * The world coordinates of the requested item.
    */
    getItemIndex(world: IgPoint): number;
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    getItem(world: IgPoint): any;
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    getItemSpan(): number;
}
