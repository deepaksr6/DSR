import { Type } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { WilliamsPercentRIndicator } from "./WilliamsPercentRIndicator";
/**
 * Represents a IgxDataChartComponent Williams %R indicator series.
 * Default required members: High, Low, Close
*
* The `IgxWilliamsPercentRIndicatorComponent` scale ranges from 0 to -100. It is useful for identifying overbought and oversold securities.
* The `IgxWilliamsPercentRIndicatorComponent` is calculated by dividing the difference between the highest high for the period and the current close by the highest high minus the lowest low for the period.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis #xAxis
*         label="label">
*     </igx-category-x-axis>
*     <igx-numeric-y-axis #yAxis>
*     </igx-numeric-y-axis>
*     <igx-williams-percent-r-indicator
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
*         openMemberPath="open"
*         highMemberPath="high"
*         lowMemberPath="low"
*         closeMemberPath="close">
*     </igx-williams-percent-r-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxWilliamsPercentRIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export declare const IgxWilliamsPercentRIndicatorComponent_PROVIDERS: ({
    provide: typeof IgxFinancialSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxWilliamsPercentRIndicatorComponent extends IgxStrategyBasedIndicatorComponent {
    protected createImplementation(): WilliamsPercentRIndicator;
    /**
                                 * @hidden
                                 */
    readonly i: WilliamsPercentRIndicator;
    constructor();
    /**
     * Gets or sets the moving average period for the current StandardDeviationIndicator object.
     * The typical, and initial, value for Williams %R periods is 14.
    *
    * Gets or sets the `period` for the moving average period.
    *
    * The typical, and initial, value for Williams %R periods is 14.
    *
    * ```html
    * <igx-data-chart
    *     [dataSource]="data" >
    *     <igx-category-x-axis #xAxis
    *         label="label">
    *     </igx-category-x-axis>
    *     <igx-numeric-y-axis #yAxis>
    *     </igx-numeric-y-axis>
    *     <igx-williams-percent-r-indicator
    *         #series
    *         [xAxis]="xAxis"
    *         [yAxis]="yAxis"
    *         openMemberPath="open"
    *         highMemberPath="high"
    *         lowMemberPath="low"
    *         closeMemberPath="close"
    *         period="30">
    *     </igx-williams-percent-r-indicator>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * this.series.period = 30;
    * ```
    */
    period: number;
}
