import { Type } from '@angular/core';
import { IgxCategoryAxisBaseComponent } from "./igx-category-axis-base-component";
import { IgxNumericYAxisComponent } from "./igx-numeric-y-axis-component";
import { IgxStackedSeriesBaseComponent } from "./igx-stacked-series-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { HorizontalStackedSeriesBase } from "./HorizontalStackedSeriesBase";
/**
 * Base class for stacked series with a category x-axis and a numeric y-axis.
*/
export declare const IgxHorizontalStackedSeriesBaseComponent_PROVIDERS: ({
    provide: typeof IgxMarkerSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare abstract class IgxHorizontalStackedSeriesBaseComponent extends IgxStackedSeriesBaseComponent {
    /**
                                 * @hidden
                                 */
    readonly i: HorizontalStackedSeriesBase;
    constructor();
    /**
     * Gets or sets the effective x-axis for this series.
    */
    xAxis: IgxCategoryAxisBaseComponent;
    /**
     * Gets or sets the effective y-axis for this series.
    */
    yAxis: IgxNumericYAxisComponent;
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
    /**
     * Returns the offset value for this series if grouped on a category axis.
    
    */
    getOffsetValue(): number;
    /**
     * Returns the width of the category grouping this series is in.
    
    */
    getCategoryWidth(): number;
    /**
     * Determine if object can be used as YAxis
    
    * @param axis  * The object to check
    */
    canUseAsYAxis(axis: any): boolean;
    /**
     * Determine if object can be used as XAxis
    
    * @param axis  * The object to check
    */
    canUseAsXAxis(axis: any): boolean;
}
