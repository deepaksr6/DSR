import { Type } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { EaseOfMovementIndicator } from "./EaseOfMovementIndicator";
/**
 * Represents a IgxDataChartComponent Ease of Movement indicator series.
 * The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to
 * its volume. Normally smoothed with a moving average.
 * Default required members: Low, High, Volume
*
* The ease of movment indicator is used to analyze relationships between a price changes and volume. One would usually plot this in a separate chart below the main price chart. It can be added to a chart like this:
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-ordinal-time-x-axis
*     dateTimeMemberPath="TimeStamp"
*     #xAxis
*     >
*     </igx-ordinal-time-x-axis>
*     <igx-numeric-y-axis
*     #yAxis>
*     </igx-numeric-y-axis>
*
*     <igx-ease-of-movement-indicator
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     highMemberPath="High"
*     lowMemberPath="Low"
*     volumeMemberPath="Volume">
*     </igx-ease-of-movement-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxEaseOfMovementIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.highMemberPath = "High";
* series.lowMemberPath = "Low";
* series.volumeMemberPath = "Volume";
* series.dataSource = this.data;
* this.chart.series.add(series);
* ```
*/
export declare const IgxEaseOfMovementIndicatorComponent_PROVIDERS: ({
    provide: typeof IgxFinancialSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxEaseOfMovementIndicatorComponent extends IgxStrategyBasedIndicatorComponent {
    protected createImplementation(): EaseOfMovementIndicator;
    /**
                                 * @hidden
                                 */
    readonly i: EaseOfMovementIndicator;
    constructor();
}
