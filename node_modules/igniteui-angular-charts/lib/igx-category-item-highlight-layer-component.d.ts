import { Type } from '@angular/core';
import { IgDataTemplate } from "igniteui-angular-core";
import { IgxSeriesComponent } from "./igx-series-component";
import { CategoryItemHighlightType } from "./CategoryItemHighlightType";
import { IgxAnnotationLayerComponent } from "./igx-annotation-layer-component";
import { CategoryItemHighlightLayer } from "./CategoryItemHighlightLayer";
/**
 * Represents an annotation layer that highlights items in a series that use a category axis
 * either by drawing a banded shape at their position, or by rendering a marker at their position.
 * Depending on the type of series, the default highlight will be affected. To override
 * the type of highlight used, you can set the HighlightType property.
*/
export declare const IgxCategoryItemHighlightLayerComponent_PROVIDERS: ({
    provide: typeof IgxAnnotationLayerComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxCategoryItemHighlightLayerComponent extends IgxAnnotationLayerComponent {
    protected createImplementation(): CategoryItemHighlightLayer;
    /**
                                 * @hidden
                                 */
    readonly i: CategoryItemHighlightLayer;
    constructor();
    /**
     * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
    */
    targetSeries: IgxSeriesComponent;
    /**
     * Gets or sets whether to use value interpolation when drawing a line through the best value for the pointer position.
    */
    useInterpolation: boolean;
    /**
     * Gets or sets which type of highlight shape to use when highlighting items.
    */
    highlightType: CategoryItemHighlightType;
    /**
     * Gets or sets the template to use for marker visuals for the current series object.
    */
    markerTemplate: IgDataTemplate;
    /**
     * Gets or sets the width to use for the highlight region if highlighting items in a grid aligned series (line, spline, etc), with a banded shape.
    */
    bandHighlightWidth: number;
    /**
     * Gets or sets whether to skip unknown values when searching for series values.
    */
    skipUnknownValues: boolean;
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
}
