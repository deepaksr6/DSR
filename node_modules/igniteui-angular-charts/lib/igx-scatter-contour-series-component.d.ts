import { Type } from '@angular/core';
import { IgxValueBrushScaleComponent } from "./igx-value-brush-scale-component";
import { IgxContourValueResolverComponent } from "./igx-contour-value-resolver-component";
import { IgxScatterTriangulationSeriesComponent } from "./igx-scatter-triangulation-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ScatterContourSeries } from "./ScatterContourSeries";
/**
 * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.
*/
export declare const IgxScatterContourSeriesComponent_PROVIDERS: ({
    provide: typeof IgxScatterTriangulationSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxScatterContourSeriesComponent extends IgxScatterTriangulationSeriesComponent {
    protected createImplementation(): ScatterContourSeries;
    /**
                                 * @hidden
                                 */
    readonly i: ScatterContourSeries;
    constructor();
    /**
     * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.
    */
    valueMemberPath: string;
    /**
     * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
    */
    fillScale: IgxValueBrushScaleComponent;
    /**
     * Gets or set the ContourValueResolver used to determine the numeric values of contours.
    */
    valueResolver: IgxContourValueResolverComponent;
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
    getItemValue(item: any, memberPathName: string): any;
}
