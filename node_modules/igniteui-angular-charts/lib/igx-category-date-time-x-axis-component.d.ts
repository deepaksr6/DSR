import { Type, EventEmitter } from '@angular/core';
import { TimeAxisDisplayType } from "./TimeAxisDisplayType";
import { IgxTimeAxisBaseComponent } from "./igx-time-axis-base-component";
import { IgxAxisComponent } from "./igx-axis-component";
import { CategoryDateTimeXAxis } from "./CategoryDateTimeXAxis";
/**
 * Represents a category-based horizontal X axis that uses a DateTime scale.
*
* `IgxCategoryDateTimeXAxisComponent` class represents a category-based horizontal X axis that uses a DateTime scale.
*
* ```html
* <igx-data-chart
*     [dataSource]="data">
*     <igx-time-x-axis
* 		dateTimeMemberPath="date"
* 		#xAxis>
*     </igx-time-x-axis>
* </igx-data-chart>
* ```
*
* ```ts
* let xAxis = new IgxTimeXAxisComponent();
* xAxis.dataTimeMemberPath="date";
* this.chart.axes.add(xAxis);
* ```
*/
export declare const IgxCategoryDateTimeXAxisComponent_PROVIDERS: {
    provide: typeof IgxAxisComponent;
    useExisting: Type<any>;
}[];
export declare class IgxCategoryDateTimeXAxisComponent extends IgxTimeAxisBaseComponent {
    protected createImplementation(): CategoryDateTimeXAxis;
    /**
                                 * @hidden
                                 */
    readonly i: CategoryDateTimeXAxis;
    constructor();
    /**
     * Gets if the current axis is a continuous rather than a discrete scale
    */
    readonly isContinuous: boolean;
    /**
     * Gets or sets the axis display type.
     * Continuous display type divides the axis into even intervals, where labels will not necessarily be aligned with data points.
     * Discrete display type will not use a constant interval, but will align each label with its data point.
    *
    * `displayType` property is used for axis display type.
    *
    * Continuous display type divides the axis into even intervals, where labels will not necessarily be aligned with data points. Discrete display type will not use a constant interval, but will align each label with its data point.
    *
    * ```html
    * <igx-data-chart
    *     [dataSource]="data">
    *     <igx-time-x-axis
    * 		dateTimeMemberPath="date"
    * 		displayType ="continuous"
    * 		#xAxis>
    *     </igx-time-x-axis>
    * </igx-data-chart>
    * ```
    */
    displayType: TimeAxisDisplayType;
    /**
     * Gets or sets the X axis time interval.
    *
    * `interval` property is used to get/sets the frequency of displayed labels.
    *
    * ```html
    * <igx-data-chart
    *     [dataSource]="data">
    *     <igx-time-x-axis
    * 		dateTimeMemberPath="date"
    * 		interval=2
    * 		#xAxis>
    *     </igx-time-x-axis>
    * </igx-data-chart>
    * ```
    */
    interval: number;
    /**
     * Gets the effective value for the current Interval.
    */
    actualInterval: number;
    /**
     * Gets or sets the frequency of displayed minor lines.
     * The set value is a factor that determines how the minor lines will be displayed.
    */
    minorInterval: number;
    /**
     * Gets the effective value for the current MinorInterval.
    */
    actualMinorInterval: number;
    /**
     * Gets if the current axis is of category date time axis type
    */
    readonly isCategoryDateTime: boolean;
    scrollIntoView(minimum: Date, maximum: Date): void;
    private _actualIntervalChange;
    readonly actualIntervalChange: EventEmitter<number>;
    private _actualMinorIntervalChange;
    readonly actualMinorIntervalChange: EventEmitter<number>;
}
