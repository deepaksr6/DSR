import { HighlightingState } from "./HighlightingState";
import { IgxSeriesComponent } from "./igx-series-component";
import { HighlightingInfo as HighlightingInfo_internal } from "./HighlightingInfo";
/**
 * Contains contextual information about a highlighting.
*/
export declare class IgxHighlightingInfo {
    protected createImplementation(): HighlightingInfo_internal;
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: HighlightingInfo_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * The index of the first highlighted item.
    *
    * You can use `startIndex` to get or set the first highlighted item for the series.
    *
    * ```html
    * <igx-column-series
    *         #series
    *         [xAxis]="xAxis"
    *         [yAxis]="yAxis"
    *         valueMemberPath="value"
    *         isHighlightingEnabled="true" isCustomCategoryStyleAllowed="true" (assigningCategoryStyle)="assigningSeries($event)"   >
    * </igx-column-series>
    * ```
    */
    startIndex: number;
    /**
     * The index of the last highlighted item.
    *
    * You can use the `endIndex` to get or set the last highlighted item for the series.
    *
    * ```html
    * <igx-column-series
    *         #series
    *         [xAxis]="xAxis"
    *         [yAxis]="yAxis"
    *         valueMemberPath="value"
    *         isHighlightingEnabled="true" isCustomCategoryStyleAllowed="true"  (assigningCategoryStyle)="assigningSeries($event)"   >
    *       </igx-column-series>
    * ```
    */
    endIndex: number;
    /**
     * The state of the highlighting.
    *
    * You can use the `state` to get or set the transitioning state of the highlighting, between In, Out, or Static.
    */
    state: HighlightingState;
    /**
     * A number between 0 and 1 representing the progress of the highlighting.
    *
    * You can use the `progress` property to set a number between 0 and 1 representing the progress of the highlighting.
    *
    * ```html
    * <igx-column-series
    *         #series
    *         [xAxis]="xAxis"
    *         [yAxis]="yAxis"
    *         valueMemberPath="value"
    *         isHighlightingEnabled="true" isCustomCategoryStyleAllowed="true"  (assigningCategoryStyle)="assigningSeries($event)"   >
    *       </igx-column-series>
    * ```
    */
    progress: number;
    /**
     * True if this HighlightingInfo represents a marker highlighting.
    *
    * You can set the `isMarker` to True if the HighlightingInfo represents a marker highlighting. Otherwise set to false.
    *
    * ```html
    * <igx-column-series
    *         #series
    *         [xAxis]="xAxis"
    *         [yAxis]="yAxis"
    *         valueMemberPath="value"
    *         isHighlightingEnabled="true" isCustomCategoryStyleAllowed="true"  (assigningCategoryStyle)="assigningSeries($event)"   >
    *       </igx-column-series>
    * ```
    */
    isMarker: boolean;
    /**
     * The series in context.
    *
    * You can use the `series` property to get the series in context.
    *
    * ```html
    * <igx-column-series
    *         #series
    *         [xAxis]="xAxis"
    *         [yAxis]="yAxis"
    *         valueMemberPath="value"
    *         isHighlightingEnabled="true" isCustomCategoryStyleAllowed="true"  (assigningCategoryStyle)="assigningSeries($event)"   >
    *       </igx-column-series>
    * ```
    */
    series: IgxSeriesComponent;
    findByName(name: string): any;
}
