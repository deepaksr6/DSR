import { Type } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ChaikinOscillatorIndicator } from "./ChaikinOscillatorIndicator";
/**
 * Represents the IgxDataChartComponent Chaikin Oscillator indicator series.
 * Default required members: Close, Low, High, Volume
*
* `IgxChaikinOscillatorIndicatorComponent` class specify the series as Chaikin Oscillator Indicator series.
*
* ```html
* <igx-data-chart [dataSource]="data">
*   <igx-category-x-axis #xAxis
*     label="time">
*   </igx-category-x-axis>
*   <igx-numeric-y-axis #yAxis>
*   </igx-numeric-y-axis>
*   <igx-chaikin-oscillator-indicator
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     openMemberPath="open"
*     highMemberPath="high"
*     lowMemberPath="low"
*     closeMemberPath="close"
*     volumeMemberPath="volume"
*     longPeriod="30">
*   </igx-chaikin-oscillator-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxChaikinOscillatorIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export declare const IgxChaikinOscillatorIndicatorComponent_PROVIDERS: ({
    provide: typeof IgxFinancialSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxChaikinOscillatorIndicatorComponent extends IgxStrategyBasedIndicatorComponent {
    protected createImplementation(): ChaikinOscillatorIndicator;
    /**
                                 * @hidden
                                 */
    readonly i: ChaikinOscillatorIndicator;
    constructor();
    /**
     * Gets or sets the short moving average period for the current ChaikinOscillatorIndicator object.
     * The typical, and initial, value for short CHO periods is 3.
    *
    * Set the `shortPeriod` property if you wish to change the short moving average period for the indicator.
    *
    * ```html
    * <igx-data-chart [dataSource]="data">
    *   <igx-category-x-axis #xAxis
    *     label="time">
    *   </igx-category-x-axis>
    *   <igx-numeric-y-axis #yAxis>
    *   </igx-numeric-y-axis>
    *
    *   <igx-chaikin-oscillator-indicator
    *     [xAxis]="xAxis"
    *     [yAxis]="yAxis"
    *     openMemberPath="open"
    *     highMemberPath="high"
    *     lowMemberPath="low"
    *     closeMemberPath="close"
    *     volumeMemberPath="volume"
    *     shortPeriod="5">
    *   </igx-chaikin-oscillator-indicator>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * this.series.shortPeriod = 30;
    * ```
    */
    shortPeriod: number;
    /**
     * Gets or sets the long moving average period for the current ChaikinOscillatorIndicator object.
     * The typical, and initial, value for long CHO periods is 10.
    *
    * Set the `longPeriod` property if you wish to change the long moving average period for the indicator.
    *
    * ```html
    * <igx-data-chart [dataSource]="data">
    *   <igx-category-x-axis #xAxis
    *     label="time">
    *   </igx-category-x-axis>
    *   <igx-numeric-y-axis #yAxis>
    *   </igx-numeric-y-axis>
    *
    *   <igx-chaikin-oscillator-indicator
    *     [xAxis]="xAxis"
    *     [yAxis]="yAxis"
    *     openMemberPath="open"
    *     highMemberPath="high"
    *     lowMemberPath="low"
    *     closeMemberPath="close"
    *     volumeMemberPath="volume"
    *     longPeriod="30" >
    *   </igx-chaikin-oscillator-indicator>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * this.series.longPeriod = 30;
    * ```
    */
    longPeriod: number;
}
