import { Type } from '@angular/core';
import { HorizontalAlignment } from "igniteui-angular-core";
import { VerticalAlignment } from "igniteui-angular-core";
import { Visibility } from "igniteui-angular-core";
import { AxisLabelsLocation } from "./AxisLabelsLocation";
import { IgxDomainChartComponent } from "./igx-domain-chart-component";
import { XYChart } from "./XYChart";
/**
 * Represents a base class for domain charts with X/Y axes
*/
export declare const IgxXYChartComponent_PROVIDERS: {
    provide: typeof IgxDomainChartComponent;
    useExisting: Type<any>;
}[];
export declare abstract class IgxXYChartComponent extends IgxDomainChartComponent {
    /**
                                 * @hidden
                                 */
    readonly i: XYChart;
    constructor();
    /**
     * Gets or sets function which takes an context object and returns a formatted label for the X-axis.
    *
    * To customize the text of the x-axis label, set `xAxisFormatLabel` to a single-parameter function.  The argument passed to that function will be your data item.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     [xAxisFormatLabel]="formatX"
    *     xAxisExtent="250">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * formatX(item: any): string {
    *     return "[ " + item.label + "! ]";
    * }
    * ```
    */
    xAxisFormatLabel: (item: any) => string;
    /**
     * Gets or sets function which takes a context object and returns a formatted label for the Y-axis.
    *
    * To customize the text of the y-axis label, set `yAxisFormatLabel` to a single-parameter function.  The argument passed to that function will be the numeric value corresponding to a position on the y-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     [yAxisFormatLabel]="formatY">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * formatY(value: any): string {
    *     return "[ " + value+ "! ]";
    * }
    * ```
    */
    yAxisFormatLabel: (item: any) => string;
    /**
     * Gets or sets the left margin of labels on the X-axis
    *
    * Use the `xAxisLabelLeftMargin` property to apply a margin left of the x-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisLabelLeftMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelLeftMargin ="100";
    * ```
    */
    xAxisLabelLeftMargin: number;
    /**
     * Gets or sets the top margin of labels on the X-axis
    *
    * Use the `xAxisLabelTopMargin` property to apply a margin above the x-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleTopMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleTopMargin="250";
    * ```
    */
    xAxisLabelTopMargin: number;
    /**
     * Gets or sets the right margin of labels on the X-axis
    *
    * Use the `xAxisLabelRightMargin` property to apply a margin right of the x-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisLabelRightMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelRightMargin="100";
    * ```
    */
    xAxisLabelRightMargin: number;
    /**
     * Gets or sets the bottom margin of labels on the X-axis
    *
    * Use the `xAxisLabelBottomMargin` property to apply a margin below the x-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisLabelBottomMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelBottomMargin ="100";
    * ```
    */
    xAxisLabelBottomMargin: number;
    /**
     * Gets or sets the left margin of labels on the Y-axis
    *
    * Use the `yAxisLabelLeftMargin` property to apply a margin left of the y-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelLeftMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart. yAxisLabelLeftMargin="250";
    * ```
    */
    yAxisLabelLeftMargin: number;
    /**
     * Gets or sets the top margin of labels on the Y-axis
    *
    * Use the `yAxisLabelTopMargin` property to apply a margin above the y-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelTopMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisLabelTopMargin="250";
    * ```
    */
    yAxisLabelTopMargin: number;
    /**
     * Gets or sets the right margin of labels on the Y-axis
    *
    * Use the `yAxisLabelRightMargin` property to apply a margin right of the y-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelRightMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisLabelRightMargin="250";
    * ```
    */
    yAxisLabelRightMargin: number;
    /**
     * Gets or sets the bottom margin of labels on the Y-axis
    *
    * Use the `yAxisLabelBottomMargin` property to apply a margin below the y-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelBottomMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisLabelBottomMargin="250";
    * ```
    */
    yAxisLabelBottomMargin: number;
    /**
     * Gets or sets color of labels on the X-axis
    *
    * To change the color of x-axis labels, set the `xAxisLabelTextColor` property to a color string.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisLabelTextColor="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelTextColor="green";
    * ```
    */
    xAxisLabelTextColor: string;
    /**
     * Gets or sets color of labels on the Y-axis
    *
    * To change the color of y-axis labels, set the `yAxisLabelTextColor` property to a color string.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelTextColor="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisLabelTextColor="green";
    * ```
    */
    yAxisLabelTextColor: string;
    /**
     * Gets or sets the margin around a title on the X-axis
    *
    * Use the `xAxisTitleMargin` property to set a margin around the y-axis title.
    */
    xAxisTitleMargin: number;
    /**
     * Gets or sets the margin around a title on the Y-axis
    *
    * Use the `yAxisTitleMargin` property to set a margin around the y-axis title.
    */
    yAxisTitleMargin: number;
    /**
     * Gets or sets the left margin of a title on the X-axis
    *
    * Use the `xAxisTitleLeftMargin` property to apply a margin left of the x-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleAlignment="left"
    *     xAxisTitleLeftMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleLeftMargin="150";
    * ```
    */
    xAxisTitleLeftMargin: number;
    /**
     * Gets or sets the left margin of a title on the Y-axis
    *
    * Use the `yAxisTitleLeftMargin` property to apply a margin left of the y-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis"
    *     yAxisTitleLeftMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleLeftMargin="150";
    * ```
    */
    yAxisTitleLeftMargin: number;
    /**
     * Gets or sets the top margin of a title on the X-axis
    *
    * Use the `xAxisTitleTopMargin` property to apply a margin above the x-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleTopMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleTopMargin="150";
    * ```
    */
    xAxisTitleTopMargin: number;
    /**
     * Gets or sets the top margin of a title on the Y-axis
    *
    * Use the `yAxisTitleTopMargin` property to apply a margin above the y-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis"
    *     yAxisTitleAlignment="top"
    *     yAxisTitleTopMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleTopMargin="150";
    * ```
    */
    yAxisTitleTopMargin: number;
    /**
     * Gets or sets the right margin of a title on the X-axis
    *
    * Use the `xAxisTitleRightMargin` property to apply a margin right of the x-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleAlignment="right"
    *     xAxisTitleRightMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleRightMargin="100";
    * ```
    */
    xAxisTitleRightMargin: number;
    /**
     * Gets or sets the right margin of a title on the Y-axis
    *
    * Use the `yAxisTitleRightMargin` property to apply a margin right of the y-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis"
    *     yAxisTitleRightMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleRightMargin="150";
    * ```
    */
    yAxisTitleRightMargin: number;
    /**
     * Gets or sets the bottom margin of a title on the X-axis
    *
    * Use the `xAxisTitleBottomMargin` property to apply a margin below the x-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleBottomMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleBottomMargin="150";
    * ```
    */
    xAxisTitleBottomMargin: number;
    /**
     * Gets or sets the bottom margin of a title on the Y-axis
    *
    * Use the `yAxisTitleBottomMargin` property to apply a margin below the y-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis"
    *     yAxisTitleAlignment="bottom"
    *     yAxisTitleBottomMargin="100">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleBottomMargin="150";
    * ```
    */
    yAxisTitleBottomMargin: number;
    /**
     * Gets or sets color of title on the X-axis
    *
    * To change the color of the x-axis title, set the `xAxisTitleTextColor` property to a color string.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleTextColor="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleTextColor="green";
    * ```
    */
    xAxisTitleTextColor: string;
    /**
     * Gets or sets color of title on the Y-axis
    *
    * To change the color of the y-axis title, set the `yAxisTitleTextColor` property to a color string.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis"
    *     yAxisTitleTextColor="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleTextColor="green";
    * ```
    */
    yAxisTitleTextColor: string;
    /**
     * Gets or sets CSS font property for labels on X-axis
    *
    * To change the font of x-axis labels, set the `xAxisLabelTextStyle` property.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisLabelTextStyle="italic 15px arial, sans-serif">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelTextStyle="italic 15px arial, sans-serif";
    * ```
    */
    xAxisLabelTextStyle: string;
    /**
     * Gets or sets CSS font property for labels on Y-axis
    *
    * To change the font of x-axis labels, set the `yAxisLabelTextStyle` property.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelTextStyle="italic 15px arial, sans-serif">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart. yAxisLabelTextStyle="italic 15px arial, sans-serif";
    * ```
    */
    yAxisLabelTextStyle: string;
    /**
     * Gets or sets CSS font property for title on X-axis
    *
    * To change the font of the x-axis title, set the `xAxisTitleTextStyle` property.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleTextStyle="italic 15px arial, sans-serif">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleTextStyle="italic 15px arial, sans-serif";
    * ```
    */
    xAxisTitleTextStyle: string;
    /**
     * Gets or sets CSS font property for title on Y-axis
    *
    * To change the font of the x-axis title, set the `yAxisTitleTextStyle` property.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="y axis"
    *     yAxisTitleTextStyle="italic 15px arial, sans-serif">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleTextStyle="italic 15px arial, sans-serif";
    * ```
    */
    yAxisTitleTextStyle: string;
    /**
     * Gets or sets the format for labels along the X-axis.
    */
    xAxisLabel: any;
    /**
     * Gets or sets the property or string from which the labels are derived.
    */
    yAxisLabel: any;
    /**
     * Gets or sets the color to apply to major gridlines along the X-axis.
    *
    * Set `xAxisMajorStroke` to control the color of major gridlines extending vertically from the x-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisMajorStroke="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisMajorStroke="green";
    * ```
    */
    xAxisMajorStroke: string;
    /**
     * Gets or sets the color to apply to major gridlines along the Y-axis.
    *
    * Set `yAxisMajorStroke` to control the color of major gridlines extending horizontally from the y-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisMajorStroke="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisMajorStroke="green";
    * ```
    */
    yAxisMajorStroke: string;
    /**
     * Gets or sets the thickness to apply to major gridlines along the X-axis.
    *
    * Set `xAxisMajorStrokeThickness` to control the thickness of major gridlines extending vertically from the x-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisMajorStroke="green"
    *     xAxisMajorStrokeThickness="3">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisMajorStrokeThickness="3" ;
    * ```
    */
    xAxisMajorStrokeThickness: number;
    /**
     * Gets or sets the thickness to apply to major gridlines along the Y-axis.
    *
    * Set `yAxisMajorStrokeThickness` to control the thickness of major gridlines extending horizontally from the y-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisMajorStrokeThickness="3">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisMajorStrokeThickness="2";
    * ```
    */
    yAxisMajorStrokeThickness: number;
    /**
     * Gets or sets the thickness to apply to minor gridlines along the X-axis.
    *
    * Set `xAxisMinorStrokeThickness` to control the thickness of minor gridlines extending vertically from the x-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisMinorStroke="green"
    *     xAxisMinorStrokeThickness="3">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisMinorStrokeThickness="3";
    * ```
    */
    xAxisMinorStrokeThickness: number;
    /**
     * Gets or sets the thickness to apply to minor gridlines along the Y-axis.
    *
    * Set `yAxisMinorStrokeThickness` to control the thickness of minor gridlines extending horizontally from the y-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisMinorStroke="green"
    *     yAxisMinorStrokeThickness="3">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisMinorStrokeThickness="3";
    * ```
    */
    yAxisMinorStrokeThickness: number;
    /**
     * Gets or sets the color to apply to stripes along the X-axis.
    *
    * Set `xAxisStrip` to control the alternating color of stripes extending vertically from the x-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisStrip="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisStrip="green";
    * ```
    */
    xAxisStrip: string;
    /**
     * Gets or sets the color to apply to stripes along the Y-axis.
    *
    * Set `yAxisStrip` to control the alternating color of stripes extending horizontally from the y-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisStrip="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisStrip="green";
    * ```
    */
    yAxisStrip: string;
    /**
     * Gets or sets the color to apply to the X-axis line.
    *
    * Set `xAxisStroke` to control the color of the x-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisStroke="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisStroke="green"";
    * ```
    */
    xAxisStroke: string;
    /**
     * Gets or sets the color to apply to the Y-axis line.
    *
    * Set `yAxisStroke` to control the color of the y-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisStroke="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisStroke="green";
    * ```
    */
    yAxisStroke: string;
    /**
     * Gets or sets the thickness to apply to the X-axis line.
    *
    * Set `xAxisStrokeThickness` to control the thickness of the x-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisStrokeThickness="3">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisStrokeThickness="2";
    * ```
    */
    xAxisStrokeThickness: number;
    /**
     * Gets or sets the thickness to apply to the Y-axis line.
    *
    * Set `yAxisStrokeThickness` to control the thickness of the y-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisStroke="green"
    *     yAxisStrokeThickness="3">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart. yAxisStrokeThickness="2";
    * ```
    */
    yAxisStrokeThickness: number;
    /**
     * Gets or sets the length of tickmarks along the X-axis.
    *
    * Set `xAxisTickLength` to control the length of tickmarks extending vertically from the x-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTickLength="23">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTickLength="25";
    * ```
    */
    xAxisTickLength: number;
    /**
     * Gets or sets the length of tickmarks along the Y-axis.
    *
    * Set `yAxisTickLength` to control the length of tickmarks extending horizontally from the y-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTickLength="23">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTickLength="25";
    * ```
    */
    yAxisTickLength: number;
    /**
     * Gets or sets the color to apply to tickmarks along the X-axis.
    *
    * Set `xAxisTickStroke` to control the color of tickmarks extending vertically from the x-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTickStroke="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart. xAxisTickStroke="green";
    * ```
    */
    xAxisTickStroke: string;
    /**
     * Gets or sets the color to apply to tickmarks along the Y-axis.
    *
    * Set `yAxisTickStroke` to control the color of tickmarks extending horizontally from the y-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTickLength="5"
    *     yAxisTickStroke="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTickStroke="green";
    * ```
    */
    yAxisTickStroke: string;
    /**
     * Gets or sets the thickness to apply to tickmarks along the X-axis.
    *
    * Set `xAxisTickStrokeThickness` to control the thickness of tickmarks extending vertically from the x-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTickStrokeThickness="10">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTickStrokeThickness="20";
    * ```
    */
    xAxisTickStrokeThickness: number;
    /**
     * Gets or sets the thickness to apply to tickmarks along the Y-axis.
    *
    * Set `yAxisTickStrokeThickness` to control the thickness of tickmarks extending vertically from the y-axis line.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTickLength="5"
    *     yAxisTickStrokeThickness="10">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTickStrokeThickness="25";
    * ```
    */
    yAxisTickStrokeThickness: number;
    /**
     * Gets or sets the Text to display below the X-axis.
    *
    * Set `xAxisTitle` to display a label adjacent to the x-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart. xAxisTitle="x axis";
    * ```
    */
    xAxisTitle: string;
    /**
     * Gets or sets the Text to display to the left of the Y-axis.
    *
    * Set `yAxisTitle` to display a label adjacent to the y-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitle="y axis";
    * ```
    */
    yAxisTitle: string;
    /**
     * Gets or sets the color to apply to minor gridlines along the X-axis.
    *
    * Set `xAxisMinorStroke` to control the color of minor gridlines extending vertically from the x-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisMinorStroke="green">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisExtent="250";
    * ```
    */
    xAxisMinorStroke: string;
    /**
     * Gets or sets the color to apply to minor gridlines along the Y-axis.
    *
    * Set `yAxisMinorStroke` to control the color of minor gridlines extending horizontally from the y-axis.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisMinorStroke="green"
    *     yAxisMinorStrokeThickness="1">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisMinorStroke="green";
    * ```
    */
    yAxisMinorStroke: string;
    /**
     * Gets or sets the angle of rotation for labels along the X-axis.
    *
    * To control the rotation of labels on the x-axis, set the `xAxisLabelAngle` property to a number of rotational degrees.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisLabelAngle="45">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelAngle="45";
    * ```
    */
    xAxisLabelAngle: number;
    /**
     * Gets or sets the angle of rotation for labels along the Y-axis.
    *
    * To control the rotation of labels on the y-axis, set the `yAxisLabelAngle` property to a number of rotational degrees.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelAngle="45">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisLabelAngle="25";
    * ```
    */
    yAxisLabelAngle: number;
    /**
     * Gets or sets the distance between the X-axis and the bottom of the chart.
    *
    * To allocate space between the x-axis and the edge of the chart, set the `xAxisExtent` property.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisExtent="250">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisExtent="250";
    * ```
    */
    xAxisExtent: number;
    /**
     * Gets or sets the distance between the Y-axis and the left edge of the chart.
    *
    * To allocate space between the x-axis and the edge of the chart, set the `xAxisExtent` property.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisExtent="250">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisExtent="250";
    * ```
    */
    yAxisExtent: number;
    /**
     * Gets or sets the angle of rotation for the X-axis title.
    *
    * Set `xAxisTitleAngle` to control the rotation of the x-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleAngle="45">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleAngle="50";
    * ```
    */
    xAxisTitleAngle: number;
    /**
     * Gets or sets the angle of rotation for the Y-axis title.
    *
    * Set `yAxisTitleAngle` to control the rotation of the y-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis"
    *     yAxisTitleAngle="45">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleAngle="25";
    * ```
    */
    yAxisTitleAngle: number;
    /**
     * Gets or sets whether to invert the direction of the X-axis by placing the first data items on the right side of the chart.
    *
    * To reverse the direction of items along the x-axis, set the `xAxisInverted` property to true.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisInverted="true">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.XAxisInverted="True";
    * ```
    */
    xAxisInverted: boolean;
    /**
     * Gets or sets whether to invert the direction of the Y-axis by placing the minimum numeric value at the top of the chart.
    *
    * You can use `yAxisInverted` to invert the scale of the y axis like this:
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisInverted="true"
    * >
    *
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisInverted="true";
    * ```
    *
    * The default value of `yAxisInverted` is false.
    */
    yAxisInverted: boolean;
    /**
     * Gets or sets Horizontal alignment of the X-axis title.
    *
    * Set `xAxisTitleAlignment` to control the horizontal alignment of the x-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisTitle="x axis"
    *     xAxisTitleAlignment="right">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisTitleAlignment="right";
    * ```
    */
    xAxisTitleAlignment: HorizontalAlignment;
    /**
     * Gets or sets Vertical alignment of the Y-axis title.
    *
    * Set `yAxisTitleAlignment` to control the vertical alignment of the x-axis title.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisTitle="y axis"
    *     yAxisTitleAlignment="bottom">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisTitleAlignment="bottom";
    * ```
    */
    yAxisTitleAlignment: VerticalAlignment;
    /**
     * Gets or sets Horizontal alignment of X-axis labels.
    */
    xAxisLabelHorizontalAlignment: HorizontalAlignment;
    /**
     * Gets or sets Horizontal alignment of Y-axis labels.
    *
    * Set the `yAxisLabelHorizontalAlignment` property to change the horizontal alignment of y-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisExtent="250"
    *     yAxisLabelHorizontalAlignment="left">
    * </igx-category-chart>
    * ```
    */
    yAxisLabelHorizontalAlignment: HorizontalAlignment;
    /**
     * Gets or sets Vertical alignment of X-axis labels.
    *
    * Use the `xAxisLabelVerticalAlignment` property to change the vertical position of x-axis labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisExtent="250"
    *     xAxisLabelVerticalAlignment="bottom">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelVerticalAlignment="bottom";
    * ```
    */
    xAxisLabelVerticalAlignment: VerticalAlignment;
    /**
     * Gets or sets Vertical alignment of Y-axis labels.
    */
    yAxisLabelVerticalAlignment: VerticalAlignment;
    /**
     * Gets or sets Visibility of X-axis labels.
    *
    * To hide the x-axis labels, set `xAxisLabelVisibility` to collapsed.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     xAxisLabelVisibility="collapsed">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.xAxisLabelVisibility="collapsed";
    * ```
    */
    xAxisLabelVisibility: Visibility;
    /**
     * Gets or sets Visibility of Y-axis labels.
    *
    * To hide the y-axis labels, set `yAxisLabelVisibility` to collapsed.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelVisibility="collapsed">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisLabelVisibility="collapsed"";
    * ```
    */
    yAxisLabelVisibility: Visibility;
    /**
     * The location of Y-axis labels, relative to the plot area.
    *
    * Set the `yAxisLabelLocation` property to change the location of the y-axis and its labels.
    *
    * ```html
    * <igx-category-chart
    *     [dataSource]="data"
    *     yAxisLabelLocation="outsideRight">
    * </igx-category-chart>
    * ```
    *
    * ```ts
    * this.chart.yAxisLabelLocation="outsideRight";
    * ```
    */
    yAxisLabelLocation: AxisLabelsLocation;
    /**
     * Gets or sets the format string for the X axis label.
    */
    xAxisLabelFormat: string;
    /**
     * Gets or sets the format specifiers to use with the XAxisLabelFormat string.
    */
    xAxisLabelFormatSpecifiers: any[];
    /**
     * Gets or sets the format string for the Y axis label.
    */
    yAxisLabelFormat: string;
    /**
     * Gets or sets the format specifiers to use with the YAxisLabelFormat string.
    */
    yAxisLabelFormatSpecifiers: any[];
    findByName(name: string): any;
    /**
     * Called by the UI framework to provide a UI container for rendering this control.
    
    * @param container  * The UI container element.
    */
    provideContainer(container: any): void;
    /**
     * Converts the given visual location to a data value.
    
    * @param unscaledValue  * The x-coordinate of the location to scale.
    */
    getScaledValueX(unscaledValue: number): number;
    /**
     * Converts the given data value to a visual location.
    
    * @param scaledValue  * The data value to un-scale.
    */
    getUnscaledValueX(scaledValue: number): number;
    /**
     * Converts the given visual location to a data value.
    
    * @param unscaledValue  * The y-coordinate of the location to scale.
    */
    getScaledValueY(unscaledValue: number): number;
    /**
     * Converts the given data value to a visual location.
    
    * @param scaledValue  * The data value to un-scale.
    */
    getUnscaledValueY(scaledValue: number): number;
}
