import { Type } from '@angular/core';
import { IgDataTemplate } from "igniteui-angular-core";
import { IgxStyle } from "igniteui-angular-core";
import { MarkerType } from "./MarkerType";
import { CollisionAvoidanceType } from "./CollisionAvoidanceType";
import { IgxShapeSeriesBaseComponent } from "./igx-shape-series-base-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ScatterPolygonSeries } from "./ScatterPolygonSeries";
/**
 * Series class which renders polygons as Paths based on lists of points in the ItemsSource.
*/
export declare const IgxScatterPolygonSeriesComponent_PROVIDERS: ({
    provide: typeof IgxShapeSeriesBaseComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxScatterPolygonSeriesComponent extends IgxShapeSeriesBaseComponent {
    protected createImplementation(): ScatterPolygonSeries;
    /**
                                 * @hidden
                                 */
    readonly i: ScatterPolygonSeries;
    constructor();
    /**
     * Returns whether the current series supports visual markers.
    */
    readonly hasMarkers: boolean;
    /**
     * The default style to apply to all Shapes in the series.
    */
    shapeStyle: IgxStyle;
    /**
     * Gets or sets the marker type for the current series object.
     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
    */
    markerType: MarkerType;
    /**
     * Gets or sets the MarkerTemplate for the current series object.
    */
    markerTemplate: IgDataTemplate;
    /**
     * Gets or sets thickness of the marker outline
    */
    markerThickness: number;
    /**
     * Gets the effective marker template for the current series object.
    */
    actualMarkerTemplate: IgDataTemplate;
    /**
     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.
    */
    markerBrush: string;
    /**
     * Gets the effective marker brush for the current series object.
    */
    actualMarkerBrush: string;
    /**
     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.
    */
    markerOutline: string;
    /**
     * Gets the effective marker outline for the current series object.
    */
    actualMarkerOutline: string;
    /**
     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
    */
    markerCollisionAvoidance: CollisionAvoidanceType;
    findByName(name: string): any;
}
