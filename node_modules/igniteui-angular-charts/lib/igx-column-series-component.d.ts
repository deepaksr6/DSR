import { Type } from '@angular/core';
import { IgRect } from "igniteui-angular-core";
import { IgPoint } from "igniteui-angular-core";
import { ConsolidatedItemsPosition } from "./ConsolidatedItemsPosition";
import { IgxHorizontalAnchoredCategorySeriesComponent } from "./igx-horizontal-anchored-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ColumnSeries } from "./ColumnSeries";
/**
 * Represents a IgxDataChartComponent column series.
 * Compare values across categories by using vertical rectangles.Use it when the order of categories is not important or for displaying
 * item counts such as a histogram.
*
* ```html
*     <igx-data-chart [dataSource]="data" >
*       <igx-category-x-axis
*         label="label"
*         #xAxis>
*       </igx-category-x-axis>
*       <igx-numeric-y-axis #yAxis>
*       </igx-numeric-y-axis>
*       <igx-column-series
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
*         valueMemberPath="value" >
*       </igx-column-series>
*     </igx-data-chart>
* ```
*/
export declare const IgxColumnSeriesComponent_PROVIDERS: ({
    provide: typeof IgxMarkerSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxColumnSeriesComponent extends IgxHorizontalAnchoredCategorySeriesComponent {
    protected createImplementation(): ColumnSeries;
    /**
                                 * @hidden
                                 */
    readonly i: ColumnSeries;
    constructor();
    /**
     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
    */
    radiusX: number;
    /**
     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
    */
    radiusY: number;
    /**
     * The positioning logic to use for columns which have been consolidated into a single visual element.
    */
    consolidatedColumnVerticalPosition: ConsolidatedItemsPosition;
    /**
     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.
    
    * @param world  * The world coordinate for which to get a value bounding box for
    */
    getSeriesValueBoundingBox(world: IgPoint): IgRect;
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    getItemSpan(): number;
}
