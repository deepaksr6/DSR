import { Type } from '@angular/core';
import { IgRect } from "igniteui-angular-core";
import { IgPoint } from "igniteui-angular-core";
import { IgxHorizontalRangeCategorySeriesComponent } from "./igx-horizontal-range-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { RangeColumnSeries } from "./RangeColumnSeries";
/**
 * Represents a IgxDataChartComponent range column series.
*
* The `IgxRangeColumnSeriesComponent` class represents range column series of the IgxDataChartComponent.
*
* ```html
* <igx-data-chart  #chart
*     [dataSource]="data">
*     <igx-category-x-axis
*     label="label"
*     #xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
*     minimumValue="0"
*     #yAxis>
*     </igx-numeric-y-axis>
*     <igx-range-column-series
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     highMemberPath="high"
*     lowMemberPath="low">
* </igx-range-column-series>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxRangeColumnSeriesComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* this.chart.series.add(series);
* ```
*/
export declare const IgxRangeColumnSeriesComponent_PROVIDERS: ({
    provide: typeof IgxMarkerSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxRangeColumnSeriesComponent extends IgxHorizontalRangeCategorySeriesComponent {
    protected createImplementation(): RangeColumnSeries;
    /**
                                 * @hidden
                                 */
    readonly i: RangeColumnSeries;
    constructor();
    /**
     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
    *
    * Use the `radiusX` property to round the corners of the column.
    *
    * ```html
    * <igx-data-chart  #chart
    *     [dataSource]="data"
    *     >
    *     <igx-category-x-axis
    *     label="label"
    *     #xAxis
    *     >
    *     </igx-category-x-axis>
    *     <igx-numeric-y-axis
    *     minimumValue="0"
    *     #yAxis>
    *     </igx-numeric-y-axis>
    *     <igx-range-column-series
    *     [xAxis]="xAxis"
    *     [yAxis]="yAxis"
    *     highMemberPath="high"
    *     lowMemberPath="low"
    *     radiusX="10">
    * </igx-range-column-series>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * series.radiusX=10;
    * ```
    */
    radiusX: number;
    /**
     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
    *
    * Use the `radiusY` property for the y-radius of the ellipse that is used to round the corners of the column.
    *
    * ```html
    * <igx-data-chart  #chart
    *     [dataSource]="data"
    *     >
    *     <igx-category-x-axis
    *     label="label"
    *     #xAxis
    *     >
    *     </igx-category-x-axis>
    *     <igx-numeric-y-axis
    *     minimumValue="0"
    *     #yAxis>
    *     </igx-numeric-y-axis>
    *     <igx-range-column-series
    *
    *     [xAxis]="xAxis"
    *     [yAxis]="yAxis"
    *     highMemberPath="high"
    *     lowMemberPath="low"
    *     radiusY= "10">
    * </igx-range-column-series>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * series.radiusY=10;
    * ```
    */
    radiusY: number;
    /**
     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.
    
    * @param world  * The world coordinate for which to get a value bounding box for
    *
    * The `getSeriesValueBoundingBox` method return the best available value of the bounding box within the series.
    *
    * ```ts
    * series.getSeriesValueBoundingBox(world :IgxPoint) : IgxRect
    * ```
    */
    getSeriesValueBoundingBox(world: IgPoint): IgRect;
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    *
    * The `getItemSpan` method returns the current width of the items within the categories.
    *
    * ```ts
    * var x =series.getItemSpan();
    * ```
    */
    getItemSpan(): number;
}
