import { Type } from '@angular/core';
import { IgPoint } from "igniteui-angular-core";
import { IgxFinancialOverlayComponent } from "./igx-financial-overlay-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { PriceChannelOverlay } from "./PriceChannelOverlay";
/**
 * Represents a IgxDataChartComponent Financial Price Channel Overlay series.
 * Default required members: High, Low
*
* You can use the `IgxPriceChannelOverlayComponent` to display price volatility.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
*     <igx-price-channel-overlay
* 		[xAxis]="xAxis"
* 		[yAxis]="yAxis"
* 		openMemberPath="open"
* 		highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close">
*     </igx-price-channel-overlay>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxPriceChannelOverlayComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export declare const IgxPriceChannelOverlayComponent_PROVIDERS: ({
    provide: typeof IgxFinancialSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxPriceChannelOverlayComponent extends IgxFinancialOverlayComponent {
    protected createImplementation(): PriceChannelOverlay;
    /**
                                 * @hidden
                                 */
    readonly i: PriceChannelOverlay;
    constructor();
    /**
     * Gets or sets the moving average period for the current PriceChannelOverlay object.
     * The typical, and initial, value for Bollinger band periods is 14.
    *
    * You can use the `period` to set the moving average.
    *
    * ```html
    * <igx-data-chart
    *     [dataSource]="data" >
    *     <igx-category-x-axis
    * 		label="label"
    * 		#xAxis>
    *     </igx-category-x-axis>
    *     <igx-numeric-y-axis
    * 		#yAxis>
    *     </igx-numeric-y-axis>
    *     <igx-price-channel-overlay
    * 		#series
    * 		[xAxis]="xAxis"
    * 		[yAxis]="yAxis"
    * 		openMemberPath="open"
    * 		highMemberPath="high"
    * 		lowMemberPath="low"
    * 		closeMemberPath="close"
    * 		period="14">
    *     </igx-price-channel-overlay>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * this.series.period = 14;
    * ```
    */
    period: number;
    getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean): number;
    getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean): number;
    getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean): number;
}
