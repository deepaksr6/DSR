import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { RateOfChangeAndMomentumIndicator } from "./RateOfChangeAndMomentumIndicator";
/**
 * Represents a IgxDataChartComponent Rate of Change and Momentum indicator series.
 * Default required members: Close
*
* `IgxRateOfChangeAndMomentumIndicatorComponent` class represents a Rate of Change and Momentum indicator series for the IgxDataChartComponent.
*
* ```html
* <igx-data-chart  #chart
*     [dataSource]="data">
*     <igx-category-x-axis
*     label="label"
*     #xAxis
*     >
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
*     minimumValue="0"
*     #yAxis>
*     </igx-numeric-y-axis>
*     <igx-rate-of-change-and-momentum-indicator
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     openMemberPath="open"
*     highMemberPath="high"
*     lowMemberPath="low"
*     closeMemberPath="close"
*     >
* </igx-rate-of-change-and-momentum-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxRateOfChangeAndMomentumIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export var IgxRateOfChangeAndMomentumIndicatorComponent_PROVIDERS = [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent; }) }];
var IgxRateOfChangeAndMomentumIndicatorComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxRateOfChangeAndMomentumIndicatorComponent, _super);
    function IgxRateOfChangeAndMomentumIndicatorComponent() {
        return _super.call(this) || this;
    }
    IgxRateOfChangeAndMomentumIndicatorComponent_1 = IgxRateOfChangeAndMomentumIndicatorComponent;
    IgxRateOfChangeAndMomentumIndicatorComponent.prototype.createImplementation = function () {
        return new RateOfChangeAndMomentumIndicator();
    };
    Object.defineProperty(IgxRateOfChangeAndMomentumIndicatorComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRateOfChangeAndMomentumIndicatorComponent.prototype, "period", {
        /**
         * Gets or sets the moving average period for the current AverageTrueRangeSeries object.
         * The typical, and initial, value for AverageTrueRange periods is 14.
        *
        * You can use the `period` property for the current AverageTrueRangeSeries object.
        *
        * The typical, and initial, value for AverageTrueRange periods is 14.
        *
        * ```html
        * <igx-data-chart  #chart
        *     [dataSource]="data">
        *     <igx-category-x-axis
        *     label="label"
        *     #xAxis
        *     >
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        *     minimumValue="0"
        *     #yAxis>
        *     </igx-numeric-y-axis>
        *     <igx-rate-of-change-and-momentum-indicator
        *     [xAxis]="xAxis"
        *     [yAxis]="yAxis"
        *     openMemberPath="open"
        *     highMemberPath="high"
        *     lowMemberPath="low"
        *     closeMemberPath="close"
        * 	period="30">
        * </igx-rate-of-change-and-momentum-indicator>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * this.series.period = 30;
        * ```
        */
        get: function () {
            return this.i.qy;
        },
        set: function (v) {
            this.i.qy = +v;
        },
        enumerable: true,
        configurable: true
    });
    var IgxRateOfChangeAndMomentumIndicatorComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRateOfChangeAndMomentumIndicatorComponent.prototype, "period", null);
    IgxRateOfChangeAndMomentumIndicatorComponent = IgxRateOfChangeAndMomentumIndicatorComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-rate-of-change-and-momentum-indicator',
            template: "",
            providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent_1; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent_1; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxRateOfChangeAndMomentumIndicatorComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxRateOfChangeAndMomentumIndicatorComponent);
    return IgxRateOfChangeAndMomentumIndicatorComponent;
}(IgxStrategyBasedIndicatorComponent));
export { IgxRateOfChangeAndMomentumIndicatorComponent };
//# sourceMappingURL=igx-rate-of-change-and-momentum-indicator-component.js.map