import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxAnchoredRadialSeriesComponent } from "./igx-anchored-radial-series-component";
import { IgxRadialBaseComponent } from "./igx-radial-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { RadialColumnSeries } from "./RadialColumnSeries";
/**
 * Represents a IgxDataChartComponent radial column series.
 * Compare values across categories by using radial rectangles.
*/
export var IgxRadialColumnSeriesComponent_PROVIDERS = [{ provide: IgxAnchoredRadialSeriesComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent; }) }, { provide: IgxRadialBaseComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent; }) }];
var IgxRadialColumnSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxRadialColumnSeriesComponent, _super);
    function IgxRadialColumnSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxRadialColumnSeriesComponent_1 = IgxRadialColumnSeriesComponent;
    IgxRadialColumnSeriesComponent.prototype.createImplementation = function () {
        return new RadialColumnSeries();
    };
    Object.defineProperty(IgxRadialColumnSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRadialColumnSeriesComponent.prototype, "radiusX", {
        /**
         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
        */
        get: function () {
            return this.i.ov;
        },
        set: function (v) {
            this.i.ov = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRadialColumnSeriesComponent.prototype, "radiusY", {
        /**
         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
        */
        get: function () {
            return this.i.ow;
        },
        set: function (v) {
            this.i.ow = +v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * When overridden in a derived class, is invoked whenever application code or internal processes
     * call ApplyTemplate.
    
    */
    IgxRadialColumnSeriesComponent.prototype.onApplyTemplate = function () {
        this.i.ac();
    };
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    IgxRadialColumnSeriesComponent.prototype.getItemSpan = function () {
        var iv = this.i.eg();
        return (iv);
    };
    var IgxRadialColumnSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRadialColumnSeriesComponent.prototype, "radiusX", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRadialColumnSeriesComponent.prototype, "radiusY", null);
    IgxRadialColumnSeriesComponent = IgxRadialColumnSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-radial-column-series',
            template: "",
            providers: [{ provide: IgxAnchoredRadialSeriesComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent_1; }) }, { provide: IgxRadialBaseComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent_1; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxRadialColumnSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxRadialColumnSeriesComponent);
    return IgxRadialColumnSeriesComponent;
}(IgxAnchoredRadialSeriesComponent));
export { IgxRadialColumnSeriesComponent };
//# sourceMappingURL=igx-radial-column-series-component.js.map