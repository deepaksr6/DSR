import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxBrushScaleComponent } from "./igx-brush-scale-component";
import { ValueBrushScale } from "./ValueBrushScale";
import { ensureBool } from "igniteui-angular-core";
/**
 * Represents a brush scale that uses value-based brush selection.
*/
export var IgxValueBrushScaleComponent_PROVIDERS = [{ provide: IgxBrushScaleComponent, useExisting: forwardRef(function () { return IgxValueBrushScaleComponent; }) }];
var IgxValueBrushScaleComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxValueBrushScaleComponent, _super);
    function IgxValueBrushScaleComponent() {
        return _super.call(this) || this;
    }
    IgxValueBrushScaleComponent_1 = IgxValueBrushScaleComponent;
    IgxValueBrushScaleComponent.prototype.createImplementation = function () {
        return new ValueBrushScale();
    };
    Object.defineProperty(IgxValueBrushScaleComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxValueBrushScaleComponent.prototype, "minimumValue", {
        /**
         * Gets or sets the minimum value for this scale.
        */
        get: function () {
            return this.i.minimumValue;
        },
        set: function (v) {
            this.i.minimumValue = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxValueBrushScaleComponent.prototype, "maximumValue", {
        /**
         * Gets or sets the maximum value for this scale.
        */
        get: function () {
            return this.i.maximumValue;
        },
        set: function (v) {
            this.i.maximumValue = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxValueBrushScaleComponent.prototype, "isLogarithmic", {
        /**
         * Gets or sets whether the scale is logarithmic.
        */
        get: function () {
            return this.i.isLogarithmic;
        },
        set: function (v) {
            this.i.isLogarithmic = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxValueBrushScaleComponent.prototype, "logarithmBase", {
        /**
         * Gets or sets the logarithm base for this scale.
        */
        get: function () {
            return this.i.logarithmBase;
        },
        set: function (v) {
            this.i.logarithmBase = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxValueBrushScaleComponent.prototype, "isReady", {
        /**
         * Checks if the value brush scale is ready for usage in the chart
        */
        get: function () {
            return this.i.isReady;
        },
        enumerable: true,
        configurable: true
    });
    var IgxValueBrushScaleComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxValueBrushScaleComponent.prototype, "minimumValue", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxValueBrushScaleComponent.prototype, "maximumValue", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], IgxValueBrushScaleComponent.prototype, "isLogarithmic", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxValueBrushScaleComponent.prototype, "logarithmBase", null);
    IgxValueBrushScaleComponent = IgxValueBrushScaleComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-value-brush-scale',
            template: "",
            providers: [{ provide: IgxBrushScaleComponent, useExisting: forwardRef(function () { return IgxValueBrushScaleComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxValueBrushScaleComponent);
    return IgxValueBrushScaleComponent;
}(IgxBrushScaleComponent));
export { IgxValueBrushScaleComponent };
//# sourceMappingURL=igx-value-brush-scale-component.js.map