import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxStyle } from "igniteui-angular-core";
import { IgxShapeSeriesBaseComponent } from "./igx-shape-series-base-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ScatterPolylineSeries } from "./ScatterPolylineSeries";
/**
 * Series class used for displaying multiple polylines for datasources which contain multiple lists of points.
*/
export var IgxScatterPolylineSeriesComponent_PROVIDERS = [{ provide: IgxShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxScatterPolylineSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxScatterPolylineSeriesComponent; }) }];
var IgxScatterPolylineSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxScatterPolylineSeriesComponent, _super);
    function IgxScatterPolylineSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxScatterPolylineSeriesComponent_1 = IgxScatterPolylineSeriesComponent;
    IgxScatterPolylineSeriesComponent.prototype.createImplementation = function () {
        return new ScatterPolylineSeries();
    };
    Object.defineProperty(IgxScatterPolylineSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxScatterPolylineSeriesComponent.prototype, "shapeStyle", {
        /**
         * The default style to apply to all Shapes in the series.
        */
        get: function () {
            if (this.i.ni == null) {
                return null;
            }
            if (!this.i.ni.externalObject) {
                var e = new IgxStyle();
                e._implementation = this.i.ni;
                this.i.ni.externalObject = e;
            }
            return this.i.ni.externalObject;
        },
        set: function (v) {
            v == null ? this.i.ni = null : this.i.ni = v.i;
        },
        enumerable: true,
        configurable: true
    });
    IgxScatterPolylineSeriesComponent.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.shapeStyle && this.shapeStyle.name && this.shapeStyle.name == name) {
            return this.shapeStyle;
        }
        return null;
    };
    var IgxScatterPolylineSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", IgxStyle),
        tslib_1.__metadata("design:paramtypes", [IgxStyle])
    ], IgxScatterPolylineSeriesComponent.prototype, "shapeStyle", null);
    IgxScatterPolylineSeriesComponent = IgxScatterPolylineSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-scatter-polyline-series',
            template: "",
            providers: [{ provide: IgxShapeSeriesBaseComponent, useExisting: forwardRef(function () { return IgxScatterPolylineSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxScatterPolylineSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxScatterPolylineSeriesComponent);
    return IgxScatterPolylineSeriesComponent;
}(IgxShapeSeriesBaseComponent));
export { IgxScatterPolylineSeriesComponent };
//# sourceMappingURL=igx-scatter-polyline-series-component.js.map