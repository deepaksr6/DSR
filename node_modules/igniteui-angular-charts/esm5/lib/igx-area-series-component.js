import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { UnknownValuePlotting, UnknownValuePlotting_$type } from "igniteui-angular-core";
import { IgxHorizontalAnchoredCategorySeriesComponent } from "./igx-horizontal-anchored-category-series-component";
import { IgxAnchoredCategorySeriesComponent } from "./igx-anchored-category-series-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { AreaSeries } from "./AreaSeries";
import { ensureEnum } from "igniteui-angular-core";
/**
 * Represents a IgxDataChartComponent area series.
 * Displays trend over time or ordered categories.Useful when there are many data points and the order is important.
*
* The `IgxAreaSeriesComponent` class represents a IgxDataChartComponent area series.Displays trend over time or ordered categories.
*
* Useful when there are many data points and the order is important.
*
* ```html
* <igx-data-chart #chart
*     [dataSource]="data">
*     <igx-category-x-axis
*         label="label"
*         #xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
*         #yAxis>
*     </igx-numeric-y-axis>
*     <igx-area-series
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
*         valueMemberPath="value"  >
*     </igx-area-series>
* </igx-data-chart>
* ```
*
* ```ts
* let series: IgxAreaSeriesComponent = new IgxAreaSeriesComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.valueMemberPath = "Value";
* this.chart.series.add(series);
* ```
*/
export var IgxAreaSeriesComponent_PROVIDERS = [{ provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent; }) }];
var IgxAreaSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxAreaSeriesComponent, _super);
    function IgxAreaSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxAreaSeriesComponent_1 = IgxAreaSeriesComponent;
    IgxAreaSeriesComponent.prototype.createImplementation = function () {
        return new AreaSeries();
    };
    Object.defineProperty(IgxAreaSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAreaSeriesComponent.prototype, "isAreaOrLine", {
        /**
         * Gets whether the current series shows an area or line shape.
        *
        * The `isAreaOrLine` is used to check if the current series shows an area or line shape.
        *
        * ```ts
        * let series: IgxAreaSeriesComponent = new IgxAreaSeriesComponent();
        * let x= series.isAreaOrLine;
        * ```
        */
        get: function () {
            return this.i.ck;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAreaSeriesComponent.prototype, "unknownValuePlotting", {
        /**
         * Determines how unknown values will be plotted on the chart.
         * Null and Double.NaN are two examples of unknown values.
        *
        * The `unknownValuePlotting` property is used to determines how unknown values will be plotted on the chart.
        *
        * Null and Double.NaN are two examples of unknown values.
        *
        * ```html
        * <igx-data-chart #chart
        *     [dataSource]="data">
        *     <igx-category-x-axis
        *         label="label"
        *         #xAxis>
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        *         #yAxis>
        *     </igx-numeric-y-axis>
        *     <igx-area-series
        *         [xAxis]="xAxis"
        *         [yAxis]="yAxis"
        *         valueMemberPath="value"
        * 		unknownValuePlotting="DontPlot"  >
        *     </igx-area-series>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * series.unknownValuePlotting = UnknownValuePlotting.LinearInterpolate;
        * ```
        */
        get: function () {
            return this.i.unknownValuePlotting;
        },
        set: function (v) {
            this.i.unknownValuePlotting = ensureEnum(UnknownValuePlotting_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    var IgxAreaSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxAreaSeriesComponent.prototype, "unknownValuePlotting", null);
    IgxAreaSeriesComponent = IgxAreaSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-area-series',
            template: "",
            providers: [{ provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent_1; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent_1; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent_1; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxAreaSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxAreaSeriesComponent);
    return IgxAreaSeriesComponent;
}(IgxHorizontalAnchoredCategorySeriesComponent));
export { IgxAreaSeriesComponent };
//# sourceMappingURL=igx-area-series-component.js.map