import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxVerticalStackedSeriesBaseComponent } from "./igx-vertical-stacked-series-base-component";
import { IgxStackedSeriesBaseComponent } from "./igx-stacked-series-base-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { StackedBarSeries } from "./StackedBarSeries";
import { toPoint } from "igniteui-angular-core";
/**
 * Represents a IgxDataChartComponent stacked bar series.
*/
export var IgxStackedBarSeriesComponent_PROVIDERS = [{ provide: IgxVerticalStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent; }) }, { provide: IgxStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent; }) }];
var IgxStackedBarSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxStackedBarSeriesComponent, _super);
    function IgxStackedBarSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxStackedBarSeriesComponent_1 = IgxStackedBarSeriesComponent;
    IgxStackedBarSeriesComponent.prototype.createImplementation = function () {
        return new StackedBarSeries();
    };
    Object.defineProperty(IgxStackedBarSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxStackedBarSeriesComponent.prototype, "radiusX", {
        /**
         * Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.
        */
        get: function () {
            return this.i.p7;
        },
        set: function (v) {
            this.i.p7 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxStackedBarSeriesComponent.prototype, "radiusY", {
        /**
         * Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.
        */
        get: function () {
            return this.i.p8;
        },
        set: function (v) {
            this.i.p8 = +v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Scrolls the series to display the item for the specified data item.
     * The series is scrolled by the minimum amount required to place the specified data item within
     * the central 80% of the visible axis.
    
    * @param item  * The data item (item) to scroll to.
    */
    IgxStackedBarSeriesComponent.prototype.scrollIntoView = function (item) {
        var iv = this.i.c9(item);
        return (iv);
    };
    /**
     * Gets the index of the item that resides at the provided world coordinates.
    
    * @param world  * The world coordinates of the requested item.
    */
    IgxStackedBarSeriesComponent.prototype.getItemIndex = function (world) {
        var iv = this.i.e8(toPoint(world));
        return (iv);
    };
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    IgxStackedBarSeriesComponent.prototype.getItem = function (world) {
        var iv = this.i.fp(toPoint(world));
        return (iv);
    };
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    IgxStackedBarSeriesComponent.prototype.getItemSpan = function () {
        var iv = this.i.eg();
        return (iv);
    };
    var IgxStackedBarSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxStackedBarSeriesComponent.prototype, "radiusX", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxStackedBarSeriesComponent.prototype, "radiusY", null);
    IgxStackedBarSeriesComponent = IgxStackedBarSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-stacked-bar-series',
            template: "",
            providers: [{ provide: IgxVerticalStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent_1; }) }, { provide: IgxStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent_1; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent_1; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxStackedBarSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxStackedBarSeriesComponent);
    return IgxStackedBarSeriesComponent;
}(IgxVerticalStackedSeriesBaseComponent));
export { IgxStackedBarSeriesComponent };
//# sourceMappingURL=igx-stacked-bar-series-component.js.map