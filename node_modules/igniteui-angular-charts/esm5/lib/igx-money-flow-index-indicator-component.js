import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { MoneyFlowIndexIndicator } from "./MoneyFlowIndexIndicator";
/**
 * Represents a IgxDataChartComponent Money Flow Index indicator series.
 * Default required members: Close, Low, High, Volume
*
* Represents a Ignite UIDataChart Money Flow Index indicator series.
*
* Example:
*
* ```html
* <igx-data-chart
*     [dataSource]="data">
* 	<igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
* 	<igx-money-flow-index-indicator
*         #series
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
* 		openMemberPath="open"
*         highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close"
* 		volumeMemberPath="volume">
*     </igx-money-flow-index-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxMoneyFlowIndexIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath="open"
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath="close"
* series.volumeMemberPath= "volume";
* this.chart.series.add(series);
* ```
*/
export var IgxMoneyFlowIndexIndicatorComponent_PROVIDERS = [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent; }) }];
var IgxMoneyFlowIndexIndicatorComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxMoneyFlowIndexIndicatorComponent, _super);
    function IgxMoneyFlowIndexIndicatorComponent() {
        return _super.call(this) || this;
    }
    IgxMoneyFlowIndexIndicatorComponent_1 = IgxMoneyFlowIndexIndicatorComponent;
    IgxMoneyFlowIndexIndicatorComponent.prototype.createImplementation = function () {
        return new MoneyFlowIndexIndicator();
    };
    Object.defineProperty(IgxMoneyFlowIndexIndicatorComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxMoneyFlowIndexIndicatorComponent.prototype, "period", {
        /**
         * Gets or sets the moving average period for the current MoneyFlowIndexIndicator object.
         * The typical, and initial, value for MoneyFlowIndexIndicator periods is 14.
        *
        * Gets or sets the moving average period for the current MoneyFlowIndexIndicator object.
        *
        * Example:
        *
        * ```html
        * <igx-data-chart
        *     [dataSource]="data">
        * 	<igx-category-x-axis
        * 		label="label"
        * 		#xAxis>
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        * 		#yAxis>
        *     </igx-numeric-y-axis>
        * 	<igx-money-flow-index-indicator
        *         #series
        *         [xAxis]="xAxis"
        *         [yAxis]="yAxis"
        * 		openMemberPath="open"
        *         highMemberPath="high"
        * 		lowMemberPath="low"
        * 		closeMemberPath="close"
        * 		volumeMemberPath="volume"
        * 		period="14">
        *     </igx-money-flow-index-indicator>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * this.series.period = 14;
        * ```
        */
        get: function () {
            return this.i.qy;
        },
        set: function (v) {
            this.i.qy = +v;
        },
        enumerable: true,
        configurable: true
    });
    var IgxMoneyFlowIndexIndicatorComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxMoneyFlowIndexIndicatorComponent.prototype, "period", null);
    IgxMoneyFlowIndexIndicatorComponent = IgxMoneyFlowIndexIndicatorComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-money-flow-index-indicator',
            template: "",
            providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent_1; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent_1; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxMoneyFlowIndexIndicatorComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxMoneyFlowIndexIndicatorComponent);
    return IgxMoneyFlowIndexIndicatorComponent;
}(IgxStrategyBasedIndicatorComponent));
export { IgxMoneyFlowIndexIndicatorComponent };
//# sourceMappingURL=igx-money-flow-index-indicator-component.js.map