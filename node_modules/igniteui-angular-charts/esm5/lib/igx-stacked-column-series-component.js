import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxHorizontalStackedSeriesBaseComponent } from "./igx-horizontal-stacked-series-base-component";
import { IgxStackedSeriesBaseComponent } from "./igx-stacked-series-base-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { StackedColumnSeries } from "./StackedColumnSeries";
/**
 * Represents a IgxDataChartComponent stacked column series.
*/
export var IgxStackedColumnSeriesComponent_PROVIDERS = [{ provide: IgxHorizontalStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent; }) }, { provide: IgxStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent; }) }];
var IgxStackedColumnSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxStackedColumnSeriesComponent, _super);
    function IgxStackedColumnSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxStackedColumnSeriesComponent_1 = IgxStackedColumnSeriesComponent;
    IgxStackedColumnSeriesComponent.prototype.createImplementation = function () {
        return new StackedColumnSeries();
    };
    Object.defineProperty(IgxStackedColumnSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxStackedColumnSeriesComponent.prototype, "radiusX", {
        /**
         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
        */
        get: function () {
            return this.i.p7;
        },
        set: function (v) {
            this.i.p7 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxStackedColumnSeriesComponent.prototype, "radiusY", {
        /**
         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
        */
        get: function () {
            return this.i.p8;
        },
        set: function (v) {
            this.i.p8 = +v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    IgxStackedColumnSeriesComponent.prototype.getItemSpan = function () {
        var iv = this.i.eg();
        return (iv);
    };
    var IgxStackedColumnSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxStackedColumnSeriesComponent.prototype, "radiusX", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxStackedColumnSeriesComponent.prototype, "radiusY", null);
    IgxStackedColumnSeriesComponent = IgxStackedColumnSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-stacked-column-series',
            template: "",
            providers: [{ provide: IgxHorizontalStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent_1; }) }, { provide: IgxStackedSeriesBaseComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent_1; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent_1; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxStackedColumnSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxStackedColumnSeriesComponent);
    return IgxStackedColumnSeriesComponent;
}(IgxHorizontalStackedSeriesBaseComponent));
export { IgxStackedColumnSeriesComponent };
//# sourceMappingURL=igx-stacked-column-series-component.js.map