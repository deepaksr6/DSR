import * as tslib_1 from "tslib";
import { forwardRef, Input } from '@angular/core';
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
/**
 * Represents the base class for all IgxDataChartComponent ranged category/value series.
*
* The `IgxRangeCategorySeriesComponent` represents the base class for all IgxDataChartComponent ranged category/value series.
*
* ```html
* <igx-data-chart  #chart
*     [dataSource]="data">
*     <igx-category-x-axis
*     label="label"
*     #xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
*     minimumValue="0"
*     #yAxis>
*     </igx-numeric-y-axis>
*     <igx-range-column-series
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     highMemberPath="high"
*     lowMemberPath="low">
* </igx-range-column-series>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxRangeColumnSeriesComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* this.chart.series.add(series);
* ```
*/
export var IgxRangeCategorySeriesComponent_PROVIDERS = [{ provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxRangeCategorySeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxRangeCategorySeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxRangeCategorySeriesComponent; }) }];
var IgxRangeCategorySeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxRangeCategorySeriesComponent, _super);
    function IgxRangeCategorySeriesComponent() {
        return _super.call(this) || this;
    }
    Object.defineProperty(IgxRangeCategorySeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRangeCategorySeriesComponent.prototype, "lowMemberPath", {
        /**
         * Gets or sets the value mapping property for the current series object.
        *
        * The `lowMemberPath` is used for low mapping property of the current series object.
        *
        * ```html
        * <igx-data-chart  #chart
        *     [dataSource]="data">
        *     <igx-category-x-axis
        *     label="label"
        *     #xAxis>
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        *     minimumValue="0"
        *     #yAxis>
        *     </igx-numeric-y-axis>
        *     <igx-range-column-series
        *     [xAxis]="xAxis"
        *     [yAxis]="yAxis"
        *     highMemberPath="high"
        *     lowMemberPath="low">
        * </igx-range-column-series>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * let series = new IgxRangeColumnSeriesComponent();
        * series.xAxis = this.xAxis;
        * series.yAxis = this.yAxis;
        * series.highMemberPath = "high";
        * series.lowMemberPath = "low";
        * this.chart.series.add(series);
        * ```
        */
        get: function () {
            return this.i.pa;
        },
        set: function (v) {
            this.i.pa = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRangeCategorySeriesComponent.prototype, "highMemberPath", {
        /**
         * Gets or sets the value mapping property for the current series object.
        *
        * Use `highMemberPath` propert for high mapping of the current series object.
        *
        * ```html
        * <igx-data-chart  #chart
        *     [dataSource]="data">
        *     <igx-category-x-axis
        *     label="label"
        *     #xAxis>
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        *     minimumValue="0"
        *     #yAxis>
        *     </igx-numeric-y-axis>
        *     <igx-range-column-series
        *     [xAxis]="xAxis"
        *     [yAxis]="yAxis"
        *     highMemberPath="high"
        *     lowMemberPath="low">
        * </igx-range-column-series>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * series.highMemberPath = "high";
        * ```
        */
        get: function () {
            return this.i.o7;
        },
        set: function (v) {
            this.i.o7 = v;
        },
        enumerable: true,
        configurable: true
    });
    IgxRangeCategorySeriesComponent.prototype.getItemValue = function (item, memberPathName) {
        var iv = this.i.fs(item, memberPathName);
        return (iv);
    };
    /**
     * Scrolls the series to display the item for the specified data item.
     * The series is scrolled by the minimum amount required to place the specified data item within
     * the central 80% of the visible axis.
    
    * @param item  * The data item (item) to scroll to.
    *
    * `scrollIntoView` method Scrolls the series to display the item for the specified data item.
    */
    IgxRangeCategorySeriesComponent.prototype.scrollIntoView = function (item) {
        var iv = this.i.c9(item);
        return (iv);
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRangeCategorySeriesComponent.prototype, "lowMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRangeCategorySeriesComponent.prototype, "highMemberPath", null);
    return IgxRangeCategorySeriesComponent;
}(IgxCategorySeriesComponent));
export { IgxRangeCategorySeriesComponent };
//# sourceMappingURL=igx-range-category-series-component.js.map