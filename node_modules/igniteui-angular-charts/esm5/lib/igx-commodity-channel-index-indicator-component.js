import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { CommodityChannelIndexIndicator } from "./CommodityChannelIndexIndicator";
/**
 * Represents a IgxDataChartComponent Commodity Channel Index indicator series.
 * Default required members: High, Low, Close
*
* `IgxCommodityChannelIndexIndicatorComponent` class specify the series as Commodity Channel Index Indicator series.
*
* ```html
* <igx-data-chart [dataSource]="data">
*   <igx-category-x-axis #xAxis
*     label="time">
*   </igx-category-x-axis>
*   <igx-numeric-y-axis #yAxis>
*   </igx-numeric-y-axis>
*
*   <igx-commodity-channel-index-indicator
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     openMemberPath="open"
*     highMemberPath="high"
*     lowMemberPath="low"
*     closeMemberPath="close"
*     volumeMemberPath="volume"
*     longPeriod="30" >
*   </igx-commodity-channel-index-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxCommodityChannelIndexIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export var IgxCommodityChannelIndexIndicatorComponent_PROVIDERS = [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }];
var IgxCommodityChannelIndexIndicatorComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxCommodityChannelIndexIndicatorComponent, _super);
    function IgxCommodityChannelIndexIndicatorComponent() {
        return _super.call(this) || this;
    }
    IgxCommodityChannelIndexIndicatorComponent_1 = IgxCommodityChannelIndexIndicatorComponent;
    IgxCommodityChannelIndexIndicatorComponent.prototype.createImplementation = function () {
        return new CommodityChannelIndexIndicator();
    };
    Object.defineProperty(IgxCommodityChannelIndexIndicatorComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxCommodityChannelIndexIndicatorComponent.prototype, "period", {
        /**
         * Gets or sets the moving average period for the current CCISeries object.
         * The typical, and initial, value for CCI periods is 20.
        *
        * ```html
        * <igx-data-chart [dataSource]="data">
        *   <igx-category-x-axis #xAxis
        *     label="time">
        *   </igx-category-x-axis>
        *   <igx-numeric-y-axis #yAxis>
        *   </igx-numeric-y-axis>
        *   <igx-commodity-channel-index-indicator
        *     [xAxis]="xAxis"
        *     [yAxis]="yAxis"
        *     openMemberPath="open"
        *     highMemberPath="high"
        *     lowMemberPath="low"
        *     closeMemberPath="close"
        *     volumeMemberPath="volume"
        *     period="30" >
        *   </igx-commodity-channel-index-indicator>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * this.series.period = 30;
        * ```
        */
        get: function () {
            return this.i.qy;
        },
        set: function (v) {
            this.i.qy = +v;
        },
        enumerable: true,
        configurable: true
    });
    var IgxCommodityChannelIndexIndicatorComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxCommodityChannelIndexIndicatorComponent.prototype, "period", null);
    IgxCommodityChannelIndexIndicatorComponent = IgxCommodityChannelIndexIndicatorComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-commodity-channel-index-indicator',
            template: "",
            providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent_1; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent_1; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxCommodityChannelIndexIndicatorComponent);
    return IgxCommodityChannelIndexIndicatorComponent;
}(IgxStrategyBasedIndicatorComponent));
export { IgxCommodityChannelIndexIndicatorComponent };
//# sourceMappingURL=igx-commodity-channel-index-indicator-component.js.map