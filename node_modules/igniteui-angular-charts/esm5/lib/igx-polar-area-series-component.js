import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { UnknownValuePlotting, UnknownValuePlotting_$type } from "igniteui-angular-core";
import { IgxPolarLineSeriesBaseComponent } from "./igx-polar-line-series-base-component";
import { IgxPolarBaseComponent } from "./igx-polar-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { PolarAreaSeries } from "./PolarAreaSeries";
import { ensureEnum } from "igniteui-angular-core";
/**
 * Represents a IgxDataChartComponent polar area series.
*/
export var IgxPolarAreaSeriesComponent_PROVIDERS = [{ provide: IgxPolarLineSeriesBaseComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent; }) }, { provide: IgxPolarBaseComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent; }) }];
var IgxPolarAreaSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxPolarAreaSeriesComponent, _super);
    function IgxPolarAreaSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxPolarAreaSeriesComponent_1 = IgxPolarAreaSeriesComponent;
    IgxPolarAreaSeriesComponent.prototype.createImplementation = function () {
        return new PolarAreaSeries();
    };
    Object.defineProperty(IgxPolarAreaSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxPolarAreaSeriesComponent.prototype, "unknownValuePlotting", {
        /**
         * Determines how unknown values will be plotted on the chart.
         * Null and Double.NaN are two examples of unknown values.
        */
        get: function () {
            return this.i.pi;
        },
        set: function (v) {
            this.i.pi = ensureEnum(UnknownValuePlotting_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    var IgxPolarAreaSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxPolarAreaSeriesComponent.prototype, "unknownValuePlotting", null);
    IgxPolarAreaSeriesComponent = IgxPolarAreaSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-polar-area-series',
            template: "",
            providers: [{ provide: IgxPolarLineSeriesBaseComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent_1; }) }, { provide: IgxPolarBaseComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent_1; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxPolarAreaSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxPolarAreaSeriesComponent);
    return IgxPolarAreaSeriesComponent;
}(IgxPolarLineSeriesBaseComponent));
export { IgxPolarAreaSeriesComponent };
//# sourceMappingURL=igx-polar-area-series-component.js.map