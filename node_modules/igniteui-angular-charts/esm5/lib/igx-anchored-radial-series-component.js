import * as tslib_1 from "tslib";
import { forwardRef, Input } from '@angular/core';
import { TrendLineType, TrendLineType_$type } from "igniteui-angular-core";
import { IgxRadialBaseComponent } from "./igx-radial-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ensureEnum, brushToString, stringToBrush, toPoint, fromPoint } from "igniteui-angular-core";
/**
 * Represents the base class for all IgxDataChartComponent anchored radial category series.
*/
export var IgxAnchoredRadialSeriesComponent_PROVIDERS = [{ provide: IgxRadialBaseComponent, useExisting: forwardRef(function () { return IgxAnchoredRadialSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxAnchoredRadialSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxAnchoredRadialSeriesComponent; }) }];
var IgxAnchoredRadialSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxAnchoredRadialSeriesComponent, _super);
    function IgxAnchoredRadialSeriesComponent() {
        return _super.call(this) || this;
    }
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "valueMemberPath", {
        /**
         * Gets or sets the item path that provides the values for the current series.
        */
        get: function () {
            return this.i.oc;
        },
        set: function (v) {
            this.i.oc = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "trendLineType", {
        /**
         * Gets or sets the trend type for the current series object.
        */
        get: function () {
            return this.i.ny;
        },
        set: function (v) {
            this.i.ny = ensureEnum(TrendLineType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "trendLineBrush", {
        /**
         * Gets or sets the brush that specifies how to the current series
         * object's Trend line is drawn.
        */
        get: function () {
            return brushToString(this.i.oq);
        },
        set: function (v) {
            this.i.oq = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "actualTrendLineBrush", {
        /**
         * Gets the effective TrendLineBrush for this series.
        */
        get: function () {
            return brushToString(this.i.op);
        },
        set: function (v) {
            this.i.op = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "trendLineThickness", {
        /**
         * Gets or sets the thickness of the current series object's trend line.
        */
        get: function () {
            return this.i.n8;
        },
        set: function (v) {
            this.i.n8 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "trendLinePeriod", {
        /**
         * Gets or sets the trend line period for the current series.
         * The typical, and initial, value for bollinger band periods is 20.
        */
        get: function () {
            return this.i.n9;
        },
        set: function (v) {
            this.i.n9 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxAnchoredRadialSeriesComponent.prototype, "trendLineZIndex", {
        /**
         * Sets or Gets the Z index of the trendline.
        */
        get: function () {
            return this.i.oa;
        },
        set: function (v) {
            this.i.oa = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgxAnchoredRadialSeriesComponent.prototype.getItemValue = function (item, memberPathName) {
        var iv = this.i.fs(item, memberPathName);
        return (iv);
    };
    IgxAnchoredRadialSeriesComponent.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {
        var iv = this.i.fe(toPoint(world), skipUnknowns);
        return (iv);
    };
    IgxAnchoredRadialSeriesComponent.prototype.getNextOrExactIndex = function (world, skipUnknowns) {
        var iv = this.i.fc(toPoint(world), skipUnknowns);
        return (iv);
    };
    IgxAnchoredRadialSeriesComponent.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {
        var iv = this.i.en(toPoint(world), useInterpolation, skipUnknowns);
        return (iv);
    };
    IgxAnchoredRadialSeriesComponent.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {
        var iv = this.i.lm(toPoint(world), useInterpolation, skipUnknowns);
        return fromPoint(iv);
    };
    /**
     * Returns the offset value for this series if grouped on a category axis.
    
    */
    IgxAnchoredRadialSeriesComponent.prototype.getOffsetValue = function () {
        var iv = this.i.getOffsetValue();
        return (iv);
    };
    /**
     * Returns the width of the category grouping this series is in.
    
    */
    IgxAnchoredRadialSeriesComponent.prototype.getCategoryWidth = function () {
        var iv = this.i.getCategoryWidth();
        return (iv);
    };
    /**
     * Scrolls the specified item into the view.
    
    * @param item  * The item to scroll into view.
    */
    IgxAnchoredRadialSeriesComponent.prototype.scrollIntoView = function (item) {
        var iv = this.i.c9(item);
        return (iv);
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxAnchoredRadialSeriesComponent.prototype, "valueMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxAnchoredRadialSeriesComponent.prototype, "trendLineType", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxAnchoredRadialSeriesComponent.prototype, "trendLineBrush", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxAnchoredRadialSeriesComponent.prototype, "actualTrendLineBrush", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxAnchoredRadialSeriesComponent.prototype, "trendLineThickness", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxAnchoredRadialSeriesComponent.prototype, "trendLinePeriod", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxAnchoredRadialSeriesComponent.prototype, "trendLineZIndex", null);
    return IgxAnchoredRadialSeriesComponent;
}(IgxRadialBaseComponent));
export { IgxAnchoredRadialSeriesComponent };
//# sourceMappingURL=igx-anchored-radial-series-component.js.map