import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { ConsolidatedItemsPosition, ConsolidatedItemsPosition_$type } from "./ConsolidatedItemsPosition";
import { IgxHorizontalAnchoredCategorySeriesComponent } from "./igx-horizontal-anchored-category-series-component";
import { IgxAnchoredCategorySeriesComponent } from "./igx-anchored-category-series-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ColumnSeries } from "./ColumnSeries";
import { ensureEnum, toPoint, fromRect } from "igniteui-angular-core";
/**
 * Represents a IgxDataChartComponent column series.
 * Compare values across categories by using vertical rectangles.Use it when the order of categories is not important or for displaying
 * item counts such as a histogram.
*
* ```html
*     <igx-data-chart [dataSource]="data" >
*       <igx-category-x-axis
*         label="label"
*         #xAxis>
*       </igx-category-x-axis>
*       <igx-numeric-y-axis #yAxis>
*       </igx-numeric-y-axis>
*       <igx-column-series
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
*         valueMemberPath="value" >
*       </igx-column-series>
*     </igx-data-chart>
* ```
*/
export var IgxColumnSeriesComponent_PROVIDERS = [{ provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent; }) }];
var IgxColumnSeriesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxColumnSeriesComponent, _super);
    function IgxColumnSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxColumnSeriesComponent_1 = IgxColumnSeriesComponent;
    IgxColumnSeriesComponent.prototype.createImplementation = function () {
        return new ColumnSeries();
    };
    Object.defineProperty(IgxColumnSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxColumnSeriesComponent.prototype, "radiusX", {
        /**
         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
        */
        get: function () {
            return this.i.qp;
        },
        set: function (v) {
            this.i.qp = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxColumnSeriesComponent.prototype, "radiusY", {
        /**
         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
        */
        get: function () {
            return this.i.qq;
        },
        set: function (v) {
            this.i.qq = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxColumnSeriesComponent.prototype, "consolidatedColumnVerticalPosition", {
        /**
         * The positioning logic to use for columns which have been consolidated into a single visual element.
        */
        get: function () {
            return this.i.qn;
        },
        set: function (v) {
            this.i.qn = ensureEnum(ConsolidatedItemsPosition_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.
    
    * @param world  * The world coordinate for which to get a value bounding box for
    */
    IgxColumnSeriesComponent.prototype.getSeriesValueBoundingBox = function (world) {
        var iv = this.i.lv(toPoint(world));
        return fromRect(iv);
    };
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    IgxColumnSeriesComponent.prototype.getItemSpan = function () {
        var iv = this.i.eg();
        return (iv);
    };
    var IgxColumnSeriesComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxColumnSeriesComponent.prototype, "radiusX", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxColumnSeriesComponent.prototype, "radiusY", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxColumnSeriesComponent.prototype, "consolidatedColumnVerticalPosition", null);
    IgxColumnSeriesComponent = IgxColumnSeriesComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-column-series',
            template: "",
            providers: [{ provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent_1; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent_1; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent_1; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxColumnSeriesComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxColumnSeriesComponent);
    return IgxColumnSeriesComponent;
}(IgxHorizontalAnchoredCategorySeriesComponent));
export { IgxColumnSeriesComponent };
//# sourceMappingURL=igx-column-series-component.js.map