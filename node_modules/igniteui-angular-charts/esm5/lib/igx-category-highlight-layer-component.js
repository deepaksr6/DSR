import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxCategoryAxisBaseComponent } from "./igx-category-axis-base-component";
import { IgxAnnotationLayerComponent } from "./igx-annotation-layer-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { CategoryHighlightLayer } from "./CategoryHighlightLayer";
import { ensureBool } from "igniteui-angular-core";
/**
 * Represents an annotation layer that targets a category axis, or all category axes in the chart.
 * If the axis contains any series that are aligned between major gridlines of the axis (column, waterfall, etc) this will render a shape that fills the current category.
 * Otherwise it will render a band with an adjustable thickness at the closest gridline to the pointer position.
 * Setting UseIterpolation to true will cause the x position in the latter case to become affixed to the x position of the pointer.
*/
export var IgxCategoryHighlightLayerComponent_PROVIDERS = [{ provide: IgxAnnotationLayerComponent, useExisting: forwardRef(function () { return IgxCategoryHighlightLayerComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxCategoryHighlightLayerComponent; }) }];
var IgxCategoryHighlightLayerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxCategoryHighlightLayerComponent, _super);
    function IgxCategoryHighlightLayerComponent() {
        return _super.call(this) || this;
    }
    IgxCategoryHighlightLayerComponent_1 = IgxCategoryHighlightLayerComponent;
    IgxCategoryHighlightLayerComponent.prototype.createImplementation = function () {
        return new CategoryHighlightLayer();
    };
    Object.defineProperty(IgxCategoryHighlightLayerComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxCategoryHighlightLayerComponent.prototype, "targetAxis", {
        /**
         * Gets or sets the axis to target this annotation to. If null, this annotation targets all category axes simultaneously.
        */
        get: function () {
            if (this.i.m5 == null) {
                return null;
            }
            if (!this.i.m5.externalObject) {
                var e = IgxCategoryAxisBaseComponent._createFromInternal(this.i.m5);
                if (e) {
                    e._implementation = this.i.m5;
                }
                this.i.m5.externalObject = e;
            }
            return this.i.m5.externalObject;
        },
        set: function (v) {
            if (v != null && this._stylingContainer && v._styling)
                v._styling(this._stylingContainer, this, this);
            v == null ? this.i.m5 = null : this.i.m5 = v.i;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxCategoryHighlightLayerComponent.prototype, "useInterpolation", {
        /**
         * Gets or sets whether to use value interpolation when drawing a line through the best value for the pointer position.
        */
        get: function () {
            return this.i.m8;
        },
        set: function (v) {
            this.i.m8 = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxCategoryHighlightLayerComponent.prototype, "bandHighlightWidth", {
        /**
         * Gets or sets the width to use for the highlight region if drawing a band rather than filling a category.
        */
        get: function () {
            return this.i.m9;
        },
        set: function (v) {
            this.i.m9 = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgxCategoryHighlightLayerComponent.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.targetAxis && this.targetAxis.name && this.targetAxis.name == name) {
            return this.targetAxis;
        }
        return null;
    };
    IgxCategoryHighlightLayerComponent.prototype._styling = function (container, component, parent) {
        _super.prototype._styling.call(this, container, component, parent);
        this._inStyling = true;
        if (this.targetAxis && this.targetAxis._styling) {
            this.targetAxis._styling(container, component, this);
        }
        this._inStyling = false;
    };
    var IgxCategoryHighlightLayerComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", IgxCategoryAxisBaseComponent),
        tslib_1.__metadata("design:paramtypes", [IgxCategoryAxisBaseComponent])
    ], IgxCategoryHighlightLayerComponent.prototype, "targetAxis", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], IgxCategoryHighlightLayerComponent.prototype, "useInterpolation", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxCategoryHighlightLayerComponent.prototype, "bandHighlightWidth", null);
    IgxCategoryHighlightLayerComponent = IgxCategoryHighlightLayerComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-category-highlight-layer',
            template: "",
            providers: [{ provide: IgxAnnotationLayerComponent, useExisting: forwardRef(function () { return IgxCategoryHighlightLayerComponent_1; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxCategoryHighlightLayerComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxCategoryHighlightLayerComponent);
    return IgxCategoryHighlightLayerComponent;
}(IgxAnnotationLayerComponent));
export { IgxCategoryHighlightLayerComponent };
//# sourceMappingURL=igx-category-highlight-layer-component.js.map