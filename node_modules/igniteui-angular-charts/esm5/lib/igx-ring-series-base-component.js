import * as tslib_1 from "tslib";
import { EventEmitter, Output, Input, TemplateRef } from '@angular/core';
import { delegateCombine } from "igniteui-angular-core";
import { LabelsPosition, LabelsPosition_$type } from "./LabelsPosition";
import { Visibility, Visibility_$type } from "igniteui-angular-core";
import { Style } from "igniteui-angular-core";
import { LeaderLineType, LeaderLineType_$type } from "./LeaderLineType";
import { OthersCategoryType, OthersCategoryType_$type } from "./OthersCategoryType";
import { IgxPropertyUpdatedEventArgs } from "igniteui-angular-core";
import { ensureEnum, arrayFindByName, toBrushCollection, fromBrushCollection, ensureBool, toSpinal, initializePropertiesFromCss, NamePatcher, brushToString, stringToBrush } from "igniteui-angular-core";
import { TypeRegistrar } from "igniteui-angular-core";
/**
 * Represents a IgxRingSeriesBaseComponent base series.
*/
export var IgxRingSeriesBaseComponent_PROVIDERS = [];
var IgxRingSeriesBaseComponent = /** @class */ (function () {
    function IgxRingSeriesBaseComponent() {
        //
        this._dataSource = null;
        this._tooltipTemplate = null;
        this._tooltipContent = null;
        this._tooltipContainerTemplate = null;
        this._showDefaultTooltip = false;
        this.__p = null;
        this._hasUserValues = new Set();
        this._stylingContainer = null;
        this._stylingParent = null;
        this._inStyling = false;
        this._propertyUpdated = null;
        this._zoneRunner = null;
        if (this._styling) {
            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));
        }
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgxRingSeriesBaseComponent.prototype.createImplementation = function () {
        return null;
    };
    IgxRingSeriesBaseComponent.prototype.ngOnInit = function () {
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "dataSource", {
        get: function () {
            return this._dataSource;
        },
        set: function (value) {
            this._dataSource = value;
            this.bindData();
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.bindData = function () {
        if (this.i != null && this.i !== undefined) {
            this.i.itemsSource = this._dataSource;
        }
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "i", {
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.onImplementationCreated = function () {
    };
    IgxRingSeriesBaseComponent._createFromInternal = function (internal) {
        if (!internal) {
            return null;
        }
        if (!internal.$type) {
            return null;
        }
        var name = internal.$type.name;
        var externalName = "Igx" + name + "Component";
        if (!TypeRegistrar.isRegistered(externalName)) {
            return null;
        }
        return TypeRegistrar.create(externalName);
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "legend", {
        get: function () {
            if (this.i.legend != null)
                return this.i.legend.externalObject;
        },
        set: function (v) {
            if (v != undefined && v != null)
                this.i.legend = v.i;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "tooltipTemplate", {
        get: function () {
            return this._tooltipTemplate;
        },
        set: function (value) {
            this._tooltipTemplate = value;
            if (value == null) {
                if (this._tooltipContent !== null) {
                    this._tooltipContent.destroy();
                    this._tooltipContent = null;
                }
            }
            if (this._tooltipContent != null) {
                this._tooltipContent.instance.template = this._tooltipTemplate;
            }
            else {
                if (this.owner != null) {
                    this.owner._ensureTooltipCreated(this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "tooltipContainerTemplate", {
        get: function () {
            return this._tooltipContainerTemplate;
        },
        set: function (value) {
            this._tooltipContainerTemplate = value;
            if (this._tooltipContent != null) {
                this._tooltipContent.instance.containerTemplate = this._tooltipContainerTemplate;
            }
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype._ensureTooltipCreated = function (createTooltip, createWrapper) {
        if (this._tooltipTemplate == null) {
            this.i.toolTip = null;
        }
        if (this._tooltipContent == null && this._tooltipTemplate != null) {
            var tooltip = createTooltip();
            if (tooltip == null) {
                return;
            }
            this._tooltipContent = tooltip;
            tooltip.instance.template = this._tooltipTemplate;
            this.i.toolTip = createWrapper(tooltip.location.nativeElement);
        }
    };
    IgxRingSeriesBaseComponent.prototype._ensureTooltipDestroyed = function () {
        if (this._tooltipContent !== null) {
            this._tooltipContent.destroy();
            this._tooltipContent = null;
        }
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "showDefaultTooltip", {
        /**
         * Gets or sets whether default tooltip will be shown.
        */
        get: function () {
            return this._showDefaultTooltip;
        },
        set: function (v) {
            this._showDefaultTooltip = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.sychronizeCollections = function () { };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "valueMemberPath", {
        /**
     * Gets or Sets the property name that contains the values.
    */
        get: function () {
            return this.i.cp;
        },
        set: function (v) {
            this.i.cp = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "labelMemberPath", {
        /**
         * Gets or sets the property name that contains the labels.
        */
        get: function () {
            return this.i.bn;
        },
        set: function (v) {
            this.i.bn = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "legendLabelMemberPath", {
        /**
         * Gets or sets the property name that contains the legend labels.
        */
        get: function () {
            return this.i.b1;
        },
        set: function (v) {
            this.i.b1 = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "labelsPosition", {
        /**
         * Gets or sets the position of chart labels.
        */
        get: function () {
            return this.i.an;
        },
        set: function (v) {
            this.i.an = ensureEnum(LabelsPosition_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "leaderLineVisibility", {
        /**
         * Gets or sets whether the leader lines are visible.
        */
        get: function () {
            return this.i.ek;
        },
        set: function (v) {
            this.i.ek = ensureEnum(Visibility_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "leaderLineFill", {
        /**
         * Gets or sets the fill brush.
        */
        get: function () {
            return this.i.ef ? this.i.ef.fill : null;
        },
        set: function (v) {
            this.ensureLeaderLineStyle();
            this.i.ef.fill = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "leaderLineStroke", {
        /**
         * Gets or sets the stroke brush.
        */
        get: function () {
            return this.i.ef ? this.i.ef.stroke : null;
        },
        set: function (v) {
            this.ensureLeaderLineStyle();
            this.i.ef.stroke = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "leaderLineStrokeThickness", {
        /**
         * Gets or sets the stroke thickness.
        */
        get: function () {
            return this.i.ef ? this.i.ef.strokeThickness : NaN;
        },
        set: function (v) {
            this.ensureLeaderLineStyle();
            this.i.ef.strokeThickness = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "leaderLineOpacity", {
        /**
         * Gets or sets the opacity.
        */
        get: function () {
            return this.i.ef ? this.i.ef.opacity : NaN;
        },
        set: function (v) {
            this.ensureLeaderLineStyle();
            this.i.ef.opacity = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.ensureLeaderLineStyle = function () {
        if (this.i.ef) {
            return;
        }
        this.i.ef = new Style();
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "leaderLineType", {
        /**
         * Gets or sets what type of leader lines will be used for the outside end labels.
        */
        get: function () {
            return this.i.ao;
        },
        set: function (v) {
            this.i.ao = ensureEnum(LeaderLineType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "leaderLineMargin", {
        /**
         * Gets or sets the margin between a label and its leader line. The default is 6 pixels.
        */
        get: function () {
            return this.i.a5;
        },
        set: function (v) {
            this.i.a5 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersCategoryThreshold", {
        /**
         * Gets or sets the threshold value that determines if slices are grouped into the Others slice.
        */
        get: function () {
            return this.i.a6;
        },
        set: function (v) {
            this.i.a6 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersCategoryType", {
        /**
         * Gets or sets whether to use numeric or percent-based threshold value.
        */
        get: function () {
            return this.i.ap;
        },
        set: function (v) {
            this.i.ap = ensureEnum(OthersCategoryType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersCategoryText", {
        /**
         * Gets or sets the label of the Others slice.
        */
        get: function () {
            return this.i.b8;
        },
        set: function (v) {
            this.i.b8 = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "formatLabel", {
        /**
         * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.
        */
        get: function () {
            return this.i.aq;
        },
        set: function (v) {
            this.i.aq = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "formatLegendLabel", {
        /**
         * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart's legend.
        */
        get: function () {
            return this.i.ar;
        },
        set: function (v) {
            this.i.ar = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "labelFormat", {
        /**
         * Gets or sets the label format string to use for the label.
        */
        get: function () {
            return this.i.bj;
        },
        set: function (v) {
            this.i.bj = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "labelFormatSpecifiers", {
        /**
         * Gets or sets the format specifiers to use with the LabelFormat string.
        */
        get: function () {
            return this.i.ag;
        },
        set: function (v) {
            this.i.ag = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersLabelFormat", {
        /**
         * Gets or sets the label format string to use for the label.
        */
        get: function () {
            return this.i.cc;
        },
        set: function (v) {
            this.i.cc = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersLabelFormatSpecifiers", {
        /**
         * Gets or sets the format specifiers to use with the OthersLabelFormat string.
        */
        get: function () {
            return this.i.aj;
        },
        set: function (v) {
            this.i.aj = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "legendLabelFormat", {
        /**
         * Gets or sets the label format string to use for the label.
        */
        get: function () {
            return this.i.by;
        },
        set: function (v) {
            this.i.by = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "legendLabelFormatSpecifiers", {
        /**
         * Gets or sets the format specifiers to use with the LegendLabelFormat string.
        */
        get: function () {
            return this.i.ah;
        },
        set: function (v) {
            this.i.ah = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "legendOthersLabelFormat", {
        /**
         * Gets or sets the label format string to use for the label.
        */
        get: function () {
            return this.i.b3;
        },
        set: function (v) {
            this.i.b3 = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "legendOthersLabelFormatSpecifiers", {
        /**
         * Gets or sets the format specifiers to use with the LegendOthersLabelFormat string.
        */
        get: function () {
            return this.i.ai;
        },
        set: function (v) {
            this.i.ai = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "labelExtent", {
        /**
         * Gets or sets the pixel amount by which the labels are offset from the edge of the slices.
        */
        get: function () {
            return this.i.a4;
        },
        set: function (v) {
            this.i.a4 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "startAngle", {
        /**
         * Gets or sets the starting angle of the chart.
         * The default zero value is equivalent to 3 o'clock.
        */
        get: function () {
            return this.i.a8;
        },
        set: function (v) {
            this.i.a8 = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersCategoryFill", {
        /**
         * Gets or sets the fill brush.
        */
        get: function () {
            return this.i.eg ? this.i.eg.fill : null;
        },
        set: function (v) {
            this.ensureOthersCategoryStyle();
            this.i.eg.fill = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersCategoryStroke", {
        /**
         * Gets or sets the stroke brush.
        */
        get: function () {
            return this.i.eg ? this.i.eg.stroke : null;
        },
        set: function (v) {
            this.ensureOthersCategoryStyle();
            this.i.eg.stroke = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersCategoryStrokeThickness", {
        /**
         * Gets or sets the stroke thickness.
        */
        get: function () {
            return this.i.eg ? this.i.eg.strokeThickness : NaN;
        },
        set: function (v) {
            this.ensureOthersCategoryStyle();
            this.i.eg.strokeThickness = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "othersCategoryOpacity", {
        /**
         * Gets or sets the opacity.
        */
        get: function () {
            return this.i.eg ? this.i.eg.opacity : NaN;
        },
        set: function (v) {
            this.ensureOthersCategoryStyle();
            this.i.eg.opacity = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.ensureOthersCategoryStyle = function () {
        if (this.i.eg) {
            return;
        }
        this.i.eg = new Style();
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "selectedSliceFill", {
        /**
         * Gets or sets the fill brush.
        */
        get: function () {
            return this.i.eh ? this.i.eh.fill : null;
        },
        set: function (v) {
            this.ensureSelectedStyle();
            this.i.eh.fill = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "selectedSliceStroke", {
        /**
         * Gets or sets the stroke brush.
        */
        get: function () {
            return this.i.eh ? this.i.eh.stroke : null;
        },
        set: function (v) {
            this.ensureSelectedStyle();
            this.i.eh.stroke = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "selectedSliceStrokeThickness", {
        /**
         * Gets or sets the stroke thickness.
        */
        get: function () {
            return this.i.eh ? this.i.eh.strokeThickness : NaN;
        },
        set: function (v) {
            this.ensureSelectedStyle();
            this.i.eh.strokeThickness = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "selectedSliceOpacity", {
        /**
         * Gets or sets the opacity.
        */
        get: function () {
            return this.i.eh ? this.i.eh.opacity : NaN;
        },
        set: function (v) {
            this.ensureSelectedStyle();
            this.i.eh.opacity = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.ensureSelectedStyle = function () {
        if (this.i.eh) {
            return;
        }
        this.i.eh = new Style();
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "brushes", {
        /**
         * Gets or sets the palette of brushes to use for coloring the slices.
        */
        get: function () {
            return fromBrushCollection(this.i.ak);
        },
        set: function (v) {
            this.i.ak = toBrushCollection(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "outlines", {
        /**
         * Gets or sets the palette of brushes to use for outlines on the slices.
        */
        get: function () {
            return fromBrushCollection(this.i.al);
        },
        set: function (v) {
            this.i.al = toBrushCollection(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "labelOuterColor", {
        /**
         * Gets or sets the color for labels rendered outside of the pie chart.
        */
        get: function () {
            return brushToString(this.i.ed);
        },
        set: function (v) {
            this.i.ed = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "labelInnerColor", {
        /**
         * Gets or sets the color for labels rendered inside of the pie chart.
        */
        get: function () {
            return brushToString(this.i.ec);
        },
        set: function (v) {
            this.i.ec = stringToBrush(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "isSurfaceInteractionDisabled", {
        /**
         * Gets or sets whether all surface interactions with the plot area should be disabled.
        */
        get: function () {
            return this.i.a1;
        },
        set: function (v) {
            this.i.a1 = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "radiusFactor", {
        /**
         * Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.
        */
        get: function () {
            return this.i.a7;
        },
        set: function (v) {
            this.i.a7 = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.findByName = function (name) {
        if (this.legend && this.legend.name && this.legend.name == name) {
            return this.legend;
        }
        if (this.labelFormatSpecifiers != null && arrayFindByName(this.labelFormatSpecifiers, name)) {
            return arrayFindByName(this.labelFormatSpecifiers, name);
        }
        if (this.othersLabelFormatSpecifiers != null && arrayFindByName(this.othersLabelFormatSpecifiers, name)) {
            return arrayFindByName(this.othersLabelFormatSpecifiers, name);
        }
        if (this.legendLabelFormatSpecifiers != null && arrayFindByName(this.legendLabelFormatSpecifiers, name)) {
            return arrayFindByName(this.legendLabelFormatSpecifiers, name);
        }
        if (this.legendOthersLabelFormatSpecifiers != null && arrayFindByName(this.legendOthersLabelFormatSpecifiers, name)) {
            return arrayFindByName(this.legendOthersLabelFormatSpecifiers, name);
        }
        return null;
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "hasUserValues", {
        get: function () {
            return this._hasUserValues;
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype.__m = function (propertyName) {
        if (!this._inStyling) {
            this._hasUserValues.add(propertyName);
        }
    };
    IgxRingSeriesBaseComponent.prototype._styling = function (container, component, parent) {
        if (this._inStyling) {
            return;
        }
        this._inStyling = true;
        this._stylingContainer = container;
        this._stylingParent = component;
        var genericPrefix = "";
        var typeName = this.i.$type.name;
        if (typeName.indexOf("Xam") === 0) {
            typeName = typeName.substring(3);
        }
        genericPrefix = toSpinal("RingSeriesBaseComponent");
        var additionalPrefixes = [];
        var prefix = toSpinal(typeName);
        additionalPrefixes.push(prefix + "-");
        var b = this.i.$type.baseType;
        while (b && b.name != "Object" &&
            b.name != "Base" &&
            b.name != "Control" &&
            b.Name != "DependencyObject" &&
            b.Name != "FrameworkElement") {
            typeName = b.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            var basePrefix = toSpinal(typeName);
            additionalPrefixes.push(basePrefix + "-");
            b = b.baseType;
        }
        if (parent) {
            var parentTypeName = parent.i.$type.name;
            if (parentTypeName.indexOf("Xam") === 0) {
                parentTypeName = parentTypeName.substring(3);
            }
            var parentPrefix = toSpinal(parentTypeName);
            additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
            additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
        }
        initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
        if (this._otherStyling) {
            this._otherStyling(container, component, parent);
        }
        this._inStyling = false;
    };
    /**
 * Called by the UI framework to provide a UI container for rendering this control.

* @param container  * The UI container element.
*/
    IgxRingSeriesBaseComponent.prototype.provideContainer = function (container) {
        this.i.c2(container);
    };
    Object.defineProperty(IgxRingSeriesBaseComponent.prototype, "propertyUpdated", {
        /**
         * Event raised when a property (including "effective" and non-dependency property) value changes.
        */
        get: function () {
            var _this = this;
            if (this._propertyUpdated == null) {
                this._propertyUpdated = new EventEmitter();
                this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, function (o, e) {
                    _this._runInZone(function () {
                        var outerArgs = new IgxPropertyUpdatedEventArgs();
                        outerArgs._provideImplementation(e);
                        if (_this.beforePropertyUpdated) {
                            _this.beforePropertyUpdated(_this, outerArgs);
                        }
                        _this._propertyUpdated.emit({
                            sender: _this,
                            args: outerArgs
                        });
                    });
                });
            }
            return this._propertyUpdated;
        },
        enumerable: true,
        configurable: true
    });
    IgxRingSeriesBaseComponent.prototype._runInZone = function (act) {
        if (this._zoneRunner != null) {
            this._zoneRunner(act);
        }
        else {
            act();
        }
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], IgxRingSeriesBaseComponent.prototype, "dataSource", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], IgxRingSeriesBaseComponent.prototype, "legend", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", TemplateRef),
        tslib_1.__metadata("design:paramtypes", [TemplateRef])
    ], IgxRingSeriesBaseComponent.prototype, "tooltipTemplate", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", TemplateRef),
        tslib_1.__metadata("design:paramtypes", [TemplateRef])
    ], IgxRingSeriesBaseComponent.prototype, "tooltipContainerTemplate", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], IgxRingSeriesBaseComponent.prototype, "showDefaultTooltip", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "valueMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "labelMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "legendLabelMemberPath", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "labelsPosition", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "leaderLineVisibility", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "leaderLineFill", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "leaderLineStroke", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "leaderLineStrokeThickness", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "leaderLineOpacity", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "leaderLineType", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "leaderLineMargin", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "othersCategoryThreshold", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "othersCategoryType", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "othersCategoryText", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Function])
    ], IgxRingSeriesBaseComponent.prototype, "formatLabel", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Function])
    ], IgxRingSeriesBaseComponent.prototype, "formatLegendLabel", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "labelFormat", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], IgxRingSeriesBaseComponent.prototype, "labelFormatSpecifiers", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "othersLabelFormat", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], IgxRingSeriesBaseComponent.prototype, "othersLabelFormatSpecifiers", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "legendLabelFormat", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], IgxRingSeriesBaseComponent.prototype, "legendLabelFormatSpecifiers", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "legendOthersLabelFormat", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], IgxRingSeriesBaseComponent.prototype, "legendOthersLabelFormatSpecifiers", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "labelExtent", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "startAngle", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "othersCategoryFill", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "othersCategoryStroke", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "othersCategoryStrokeThickness", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "othersCategoryOpacity", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "selectedSliceFill", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "selectedSliceStroke", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "selectedSliceStrokeThickness", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "selectedSliceOpacity", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], IgxRingSeriesBaseComponent.prototype, "brushes", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], IgxRingSeriesBaseComponent.prototype, "outlines", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "labelOuterColor", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxRingSeriesBaseComponent.prototype, "labelInnerColor", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], IgxRingSeriesBaseComponent.prototype, "isSurfaceInteractionDisabled", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxRingSeriesBaseComponent.prototype, "radiusFactor", null);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxRingSeriesBaseComponent.prototype, "propertyUpdated", null);
    return IgxRingSeriesBaseComponent;
}());
export { IgxRingSeriesBaseComponent };
//# sourceMappingURL=igx-ring-series-base-component.js.map