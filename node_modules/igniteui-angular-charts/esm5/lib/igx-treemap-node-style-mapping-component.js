import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { TreemapNodeStyleMappingTargetType, TreemapNodeStyleMappingTargetType_$type } from "./TreemapNodeStyleMappingTargetType";
import { TreemapValueMappingMode, TreemapValueMappingMode_$type } from "./TreemapValueMappingMode";
import { IgxTreemapNodeStyleComponent } from "./igx-treemap-node-style-component";
import { TreemapNodeStyleMapping } from "./TreemapNodeStyleMapping";
import { ensureEnum } from "igniteui-angular-core";
/**
 * Represents a style to apply to a set of nodes in the treemap.
*/
export var IgxTreemapNodeStyleMappingComponent_PROVIDERS = [{ provide: IgxTreemapNodeStyleComponent, useExisting: forwardRef(function () { return IgxTreemapNodeStyleMappingComponent; }) }];
var IgxTreemapNodeStyleMappingComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxTreemapNodeStyleMappingComponent, _super);
    function IgxTreemapNodeStyleMappingComponent() {
        return _super.call(this) || this;
    }
    IgxTreemapNodeStyleMappingComponent_1 = IgxTreemapNodeStyleMappingComponent;
    IgxTreemapNodeStyleMappingComponent.prototype.createImplementation = function () {
        return new TreemapNodeStyleMapping();
    };
    Object.defineProperty(IgxTreemapNodeStyleMappingComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTreemapNodeStyleMappingComponent.prototype, "targetType", {
        /**
         * Gets or sets the unique name of the mapping.
        */
        get: function () {
            return this.i.bf;
        },
        set: function (v) {
            this.i.bf = ensureEnum(TreemapNodeStyleMappingTargetType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTreemapNodeStyleMappingComponent.prototype, "name", {
        /**
         * Gets or sets the unique name of the mapping.
        */
        get: function () {
            return this.i.bs;
        },
        set: function (v) {
            this.i.bs = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTreemapNodeStyleMappingComponent.prototype, "minimumValue", {
        /**
         * Gets or sets the minimum value to which the mapping applies.
        */
        get: function () {
            return this.i.bl;
        },
        set: function (v) {
            this.i.bl = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTreemapNodeStyleMappingComponent.prototype, "maximumValue", {
        /**
         * Gets or sets the maximum value to which the mapping applies.
        */
        get: function () {
            return this.i.bk;
        },
        set: function (v) {
            this.i.bk = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTreemapNodeStyleMappingComponent.prototype, "value", {
        /**
         * Gets or sets the value to which the mapping applies.
        */
        get: function () {
            return this.i.bn;
        },
        set: function (v) {
            this.i.bn = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxTreemapNodeStyleMappingComponent.prototype, "mappingMode", {
        /**
         * Gets or sets the mapping mode to use to evaluate whether the mapping applies.
        */
        get: function () {
            return this.i.bh;
        },
        set: function (v) {
            this.i.bh = ensureEnum(TreemapValueMappingMode_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    var IgxTreemapNodeStyleMappingComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxTreemapNodeStyleMappingComponent.prototype, "targetType", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], IgxTreemapNodeStyleMappingComponent.prototype, "name", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxTreemapNodeStyleMappingComponent.prototype, "minimumValue", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxTreemapNodeStyleMappingComponent.prototype, "maximumValue", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], IgxTreemapNodeStyleMappingComponent.prototype, "value", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], IgxTreemapNodeStyleMappingComponent.prototype, "mappingMode", null);
    IgxTreemapNodeStyleMappingComponent = IgxTreemapNodeStyleMappingComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'igx-treemap-node-style-mapping',
            template: "",
            providers: [{ provide: IgxTreemapNodeStyleComponent, useExisting: forwardRef(function () { return IgxTreemapNodeStyleMappingComponent_1; }) }],
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], IgxTreemapNodeStyleMappingComponent);
    return IgxTreemapNodeStyleMappingComponent;
}(IgxTreemapNodeStyleComponent));
export { IgxTreemapNodeStyleMappingComponent };
//# sourceMappingURL=igx-treemap-node-style-mapping-component.js.map