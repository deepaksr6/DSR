var IgxOnBalanceVolumeIndicatorComponent_1;
import * as tslib_1 from "tslib";
import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { OnBalanceVolumeIndicator } from "./OnBalanceVolumeIndicator";
/**
 * Represents a IgxDataChartComponent On Balance Bolume indicator series.
 * Default required members: Close, Volume
*
* You can use the `IgxOnBalanceVolumeIndicatorComponent` to calculate a running total of sales volume for a stock.
*
* ```html
* <igx-data-chart
* 	#chart
*     [dataSource]="data" >
*     <igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
*     <igx-on-balance-volume-indicator
* 		[xAxis]="xAxis"
* 		[yAxis]="yAxis"
* 		openMemberPath="open"
* 		highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close">
*     </igx-on-balance-volume-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxOnBalanceVolumeIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export const IgxOnBalanceVolumeIndicatorComponent_PROVIDERS = [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent) }];
let IgxOnBalanceVolumeIndicatorComponent = IgxOnBalanceVolumeIndicatorComponent_1 = class IgxOnBalanceVolumeIndicatorComponent extends IgxStrategyBasedIndicatorComponent {
    constructor() {
        super();
    }
    createImplementation() {
        return new OnBalanceVolumeIndicator();
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
};
IgxOnBalanceVolumeIndicatorComponent = IgxOnBalanceVolumeIndicatorComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'igx-on-balance-volume-indicator',
        template: ``,
        providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent_1) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent_1) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent_1) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxOnBalanceVolumeIndicatorComponent_1) }],
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [])
], IgxOnBalanceVolumeIndicatorComponent);
export { IgxOnBalanceVolumeIndicatorComponent };
//# sourceMappingURL=igx-on-balance-volume-indicator-component.js.map