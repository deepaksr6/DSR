var IgxPriceChannelOverlayComponent_1;
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxFinancialOverlayComponent } from "./igx-financial-overlay-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { PriceChannelOverlay } from "./PriceChannelOverlay";
import { toPoint } from "igniteui-angular-core";
/**
 * Represents a IgxDataChartComponent Financial Price Channel Overlay series.
 * Default required members: High, Low
*
* You can use the `IgxPriceChannelOverlayComponent` to display price volatility.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
*     <igx-price-channel-overlay
* 		[xAxis]="xAxis"
* 		[yAxis]="yAxis"
* 		openMemberPath="open"
* 		highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close">
*     </igx-price-channel-overlay>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxPriceChannelOverlayComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export const IgxPriceChannelOverlayComponent_PROVIDERS = [{ provide: IgxFinancialOverlayComponent, useExisting: forwardRef(() => IgxPriceChannelOverlayComponent) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxPriceChannelOverlayComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxPriceChannelOverlayComponent) }];
let IgxPriceChannelOverlayComponent = IgxPriceChannelOverlayComponent_1 = class IgxPriceChannelOverlayComponent extends IgxFinancialOverlayComponent {
    constructor() {
        super();
    }
    createImplementation() {
        return new PriceChannelOverlay();
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    /**
     * Gets or sets the moving average period for the current PriceChannelOverlay object.
     * The typical, and initial, value for Bollinger band periods is 14.
    *
    * You can use the `period` to set the moving average.
    *
    * ```html
    * <igx-data-chart
    *     [dataSource]="data" >
    *     <igx-category-x-axis
    * 		label="label"
    * 		#xAxis>
    *     </igx-category-x-axis>
    *     <igx-numeric-y-axis
    * 		#yAxis>
    *     </igx-numeric-y-axis>
    *     <igx-price-channel-overlay
    * 		#series
    * 		[xAxis]="xAxis"
    * 		[yAxis]="yAxis"
    * 		openMemberPath="open"
    * 		highMemberPath="high"
    * 		lowMemberPath="low"
    * 		closeMemberPath="close"
    * 		period="14">
    *     </igx-price-channel-overlay>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * this.series.period = 14;
    * ```
    */
    get period() {
        return this.i.pr;
    }
    set period(v) {
        this.i.pr = +v;
    }
    getSeriesValue(world, useInterpolation, skipUnknowns) {
        let iv = this.i.en(toPoint(world), useInterpolation, skipUnknowns);
        return (iv);
    }
    getNextOrExactIndex(world, skipUnknowns) {
        let iv = this.i.fc(toPoint(world), skipUnknowns);
        return (iv);
    }
    getPreviousOrExactIndex(world, skipUnknowns) {
        let iv = this.i.fe(toPoint(world), skipUnknowns);
        return (iv);
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], IgxPriceChannelOverlayComponent.prototype, "period", null);
IgxPriceChannelOverlayComponent = IgxPriceChannelOverlayComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'igx-price-channel-overlay',
        template: ``,
        providers: [{ provide: IgxFinancialOverlayComponent, useExisting: forwardRef(() => IgxPriceChannelOverlayComponent_1) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxPriceChannelOverlayComponent_1) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxPriceChannelOverlayComponent_1) }],
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [])
], IgxPriceChannelOverlayComponent);
export { IgxPriceChannelOverlayComponent };
//# sourceMappingURL=igx-price-channel-overlay-component.js.map