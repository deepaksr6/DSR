var IgxNumericYAxisComponent_1;
import * as tslib_1 from "tslib";
import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxStraightNumericAxisBaseComponent } from "./igx-straight-numeric-axis-base-component";
import { IgxNumericAxisBaseComponent } from "./igx-numeric-axis-base-component";
import { IgxAxisComponent } from "./igx-axis-component";
import { NumericYAxis } from "./NumericYAxis";
/**
 * Represents a IgxDataChartComponent numeric Y axis.
*
* The `IgxNumericYAxisComponent` treats the data as continuously varying numerical data items. Labels on this axis are placed along the Y-axis. Location of labels varies according to the value in a data column that is mapped using the `YMemberPath` property for Scatter Series or `ValueMemberPath` property for Category Series.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis
*         label="label"
*         #xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
*         #yAxis>
*     </igx-numeric-y-axis>
*     <igx-column-series
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
*         valueMemberPath="value">
*     </igx-column-series>
* </igx-data-chart>
* ```
*/
export const IgxNumericYAxisComponent_PROVIDERS = [{ provide: IgxStraightNumericAxisBaseComponent, useExisting: forwardRef(() => IgxNumericYAxisComponent) }, { provide: IgxNumericAxisBaseComponent, useExisting: forwardRef(() => IgxNumericYAxisComponent) }, { provide: IgxAxisComponent, useExisting: forwardRef(() => IgxNumericYAxisComponent) }];
let IgxNumericYAxisComponent = IgxNumericYAxisComponent_1 = class IgxNumericYAxisComponent extends IgxStraightNumericAxisBaseComponent {
    constructor() {
        super();
    }
    createImplementation() {
        return new NumericYAxis();
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    /**
     * Gets if the current axis is of vertical axis
    */
    get isVertical() {
        return this.i.ch;
    }
    scrollRangeIntoView(minimum, maximum) {
        this.i.l2(minimum, maximum);
    }
};
IgxNumericYAxisComponent = IgxNumericYAxisComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'igx-numeric-y-axis',
        template: ``,
        providers: [{ provide: IgxStraightNumericAxisBaseComponent, useExisting: forwardRef(() => IgxNumericYAxisComponent_1) }, { provide: IgxNumericAxisBaseComponent, useExisting: forwardRef(() => IgxNumericYAxisComponent_1) }, { provide: IgxAxisComponent, useExisting: forwardRef(() => IgxNumericYAxisComponent_1) }],
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [])
], IgxNumericYAxisComponent);
export { IgxNumericYAxisComponent };
//# sourceMappingURL=igx-numeric-y-axis-component.js.map