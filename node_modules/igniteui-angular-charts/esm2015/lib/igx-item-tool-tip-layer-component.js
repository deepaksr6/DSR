var IgxItemToolTipLayerComponent_1;
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxSeriesComponent } from "./igx-series-component";
import { IgxAnnotationLayerComponent } from "./igx-annotation-layer-component";
import { ItemToolTipLayer } from "./ItemToolTipLayer";
import { ensureBool } from "igniteui-angular-core";
/**
 * Represents an annotation layer that displays tooltips for all target series individually.
*/
export const IgxItemToolTipLayerComponent_PROVIDERS = [{ provide: IgxAnnotationLayerComponent, useExisting: forwardRef(() => IgxItemToolTipLayerComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxItemToolTipLayerComponent) }];
let IgxItemToolTipLayerComponent = IgxItemToolTipLayerComponent_1 = class IgxItemToolTipLayerComponent extends IgxAnnotationLayerComponent {
    constructor() {
        super();
    }
    createImplementation() {
        return new ItemToolTipLayer();
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    /**
     * Gets whether the default tooltip behaviors for the chart are disabled if this layer is present.
    */
    get isDefaultTooltipBehaviorDisabled() {
        return this.i.cn;
    }
    /**
     * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
    */
    get targetSeries() {
        if (this.i.m6 == null) {
            return null;
        }
        if (!this.i.m6.externalObject) {
            let e = IgxSeriesComponent._createFromInternal(this.i.m6);
            if (e) {
                e._implementation = this.i.m6;
            }
            this.i.m6.externalObject = e;
        }
        return this.i.m6.externalObject;
    }
    set targetSeries(v) {
        if (v != null && this._stylingContainer && v._styling)
            v._styling(this._stylingContainer, this, this);
        v == null ? this.i.m6 = null : this.i.m6 = v.i;
    }
    /**
     * Gets or sets whether to use value interpolation when drawing the tooltips.
    */
    get useInterpolation() {
        return this.i.m9;
    }
    set useInterpolation(v) {
        this.i.m9 = ensureBool(v);
    }
    /**
     * Gets or sets whether to skip past unknown values when searching for series values.
    */
    get skipUnknownValues() {
        return this.i.m8;
    }
    set skipUnknownValues(v) {
        this.i.m8 = ensureBool(v);
    }
    findByName(name) {
        var baseResult = super.findByName(name);
        if (baseResult) {
            return baseResult;
        }
        if (this.targetSeries && this.targetSeries.name && this.targetSeries.name == name) {
            return this.targetSeries;
        }
        return null;
    }
    _styling(container, component, parent) {
        super._styling(container, component, parent);
        this._inStyling = true;
        if (this.targetSeries && this.targetSeries._styling) {
            this.targetSeries._styling(container, component, this);
        }
        this._inStyling = false;
    }
    /**
     * Hides any tooltips presented by the layer, if any.
    
    */
    hideToolTips() {
        this.i.ib();
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", IgxSeriesComponent),
    tslib_1.__metadata("design:paramtypes", [IgxSeriesComponent])
], IgxItemToolTipLayerComponent.prototype, "targetSeries", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], IgxItemToolTipLayerComponent.prototype, "useInterpolation", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], IgxItemToolTipLayerComponent.prototype, "skipUnknownValues", null);
IgxItemToolTipLayerComponent = IgxItemToolTipLayerComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'igx-item-tool-tip-layer',
        template: ``,
        providers: [{ provide: IgxAnnotationLayerComponent, useExisting: forwardRef(() => IgxItemToolTipLayerComponent_1) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxItemToolTipLayerComponent_1) }],
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [])
], IgxItemToolTipLayerComponent);
export { IgxItemToolTipLayerComponent };
//# sourceMappingURL=igx-item-tool-tip-layer-component.js.map