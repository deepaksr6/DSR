var IgxColumnFragmentComponent_1;
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxCategoryAxisBaseComponent } from "./igx-category-axis-base-component";
import { IgxNumericAxisBaseComponent } from "./igx-numeric-axis-base-component";
import { IgxFragmentBaseComponent } from "./igx-fragment-base-component";
import { IgxHorizontalAnchoredCategorySeriesComponent } from "./igx-horizontal-anchored-category-series-component";
import { IgxAnchoredCategorySeriesComponent } from "./igx-anchored-category-series-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ColumnFragment } from "./ColumnFragment";
import { toPoint, fromRect } from "igniteui-angular-core";
/**
 * Represents one part of a StackedColumnSeries.
*/
export const IgxColumnFragmentComponent_PROVIDERS = [{ provide: IgxFragmentBaseComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent) }, { provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent) }];
let IgxColumnFragmentComponent = IgxColumnFragmentComponent_1 = class IgxColumnFragmentComponent extends IgxFragmentBaseComponent {
    constructor() {
        super();
    }
    createImplementation() {
        return new ColumnFragment();
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    /**
     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
    */
    get radiusX() {
        return this.i.qx;
    }
    set radiusX(v) {
        this.i.qx = +v;
    }
    /**
     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
    */
    get radiusY() {
        return this.i.qy;
    }
    set radiusY(v) {
        this.i.qy = +v;
    }
    /**
     * Gets or sets the effective x-axis for this series.
    */
    get fragmentXAxis() {
        if (this.i.fragmentXAxis == null) {
            return null;
        }
        if (!this.i.fragmentXAxis.externalObject) {
            let e = IgxCategoryAxisBaseComponent._createFromInternal(this.i.fragmentXAxis);
            if (e) {
                e._implementation = this.i.fragmentXAxis;
            }
            this.i.fragmentXAxis.externalObject = e;
        }
        return this.i.fragmentXAxis.externalObject;
    }
    /**
     * Gets or sets the effective y-axis for this series.
    */
    get fragmentYAxis() {
        if (this.i.fragmentYAxis == null) {
            return null;
        }
        if (!this.i.fragmentYAxis.externalObject) {
            let e = IgxNumericAxisBaseComponent._createFromInternal(this.i.fragmentYAxis);
            if (e) {
                e._implementation = this.i.fragmentYAxis;
            }
            this.i.fragmentYAxis.externalObject = e;
        }
        return this.i.fragmentYAxis.externalObject;
    }
    _styling(container, component, parent) {
        super._styling(container, component, parent);
        this._inStyling = true;
        if (this.fragmentXAxis && this.fragmentXAxis._styling) {
            this.fragmentXAxis._styling(container, component, this);
        }
        if (this.fragmentYAxis && this.fragmentYAxis._styling) {
            this.fragmentYAxis._styling(container, component, this);
        }
        this._inStyling = false;
    }
    /**
     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.
    
    * @param world  * The world coordinate for which to get a value bounding box for
    */
    getSeriesValueBoundingBox(world) {
        let iv = this.i.lv(toPoint(world));
        return fromRect(iv);
    }
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    getItem(world) {
        let iv = this.i.fp(toPoint(world));
        return (iv);
    }
    /**
     * Gets the index of the item that resides at the provided world coordinates.
    
    * @param world  * The world coordinates of the requested item.
    */
    getItemIndex(world) {
        let iv = this.i.e8(toPoint(world));
        return (iv);
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], IgxColumnFragmentComponent.prototype, "radiusX", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], IgxColumnFragmentComponent.prototype, "radiusY", null);
IgxColumnFragmentComponent = IgxColumnFragmentComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'igx-column-fragment',
        template: ``,
        providers: [{ provide: IgxFragmentBaseComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent_1) }, { provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent_1) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent_1) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent_1) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent_1) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxColumnFragmentComponent_1) }],
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [])
], IgxColumnFragmentComponent);
export { IgxColumnFragmentComponent };
//# sourceMappingURL=igx-column-fragment-component.js.map