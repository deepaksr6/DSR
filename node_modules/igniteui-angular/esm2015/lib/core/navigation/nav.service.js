import { Injectable } from '@angular/core';
/**
 * Common service to be injected between components where those implementing common
 * ToggleView interface can register and toggle directives can call their methods.
 * TODO: Track currently active? Events?
 */
export class IgxNavigationService {
    constructor() {
        this.navs = {};
    }
    add(id, navItem) {
        this.navs[id] = navItem;
    }
    remove(id) {
        delete this.navs[id];
    }
    get(id) {
        if (id) {
            return this.navs[id];
        }
    }
    toggle(id, ...args) {
        if (this.navs[id]) {
            return this.navs[id].toggle(...args);
        }
    }
    open(id, ...args) {
        if (this.navs[id]) {
            return this.navs[id].open(...args);
        }
    }
    close(id, ...args) {
        if (this.navs[id]) {
            return this.navs[id].close(...args);
        }
    }
}
IgxNavigationService.decorators = [
    { type: Injectable }
];
IgxNavigationService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvaWduaXRldWktYW5ndWxhci9pZ25pdGV1aS1hbmd1bGFyL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjLyIsInNvdXJjZXMiOlsibGliL2NvcmUvbmF2aWdhdGlvbi9uYXYuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDOzs7O0dBSUc7QUFFSCxNQUFNLE9BQU8sb0JBQW9CO0lBRzdCO1FBQ0ksSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUVNLEdBQUcsQ0FBQyxFQUFVLEVBQUUsT0FBb0I7UUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUM7SUFDNUIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxFQUFVO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRU0sR0FBRyxDQUFDLEVBQVU7UUFDakIsSUFBSSxFQUFFLEVBQUU7WUFDSixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDeEI7SUFDTCxDQUFDO0lBRU0sTUFBTSxDQUFDLEVBQVUsRUFBRSxHQUFHLElBQUk7UUFDN0IsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ2YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ3hDO0lBQ0wsQ0FBQztJQUNNLElBQUksQ0FBQyxFQUFVLEVBQUUsR0FBRyxJQUFJO1FBQzNCLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztTQUN0QztJQUNMLENBQUM7SUFDTSxLQUFLLENBQUMsRUFBVSxFQUFFLEdBQUcsSUFBSTtRQUM1QixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDZixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7U0FDdkM7SUFDTCxDQUFDOzs7WUFwQ0osVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElUb2dnbGVWaWV3IH0gZnJvbSAnLi9JVG9nZ2xlVmlldyc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQ29tbW9uIHNlcnZpY2UgdG8gYmUgaW5qZWN0ZWQgYmV0d2VlbiBjb21wb25lbnRzIHdoZXJlIHRob3NlIGltcGxlbWVudGluZyBjb21tb25cbiAqIFRvZ2dsZVZpZXcgaW50ZXJmYWNlIGNhbiByZWdpc3RlciBhbmQgdG9nZ2xlIGRpcmVjdGl2ZXMgY2FuIGNhbGwgdGhlaXIgbWV0aG9kcy5cbiAqIFRPRE86IFRyYWNrIGN1cnJlbnRseSBhY3RpdmU/IEV2ZW50cz9cbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIElneE5hdmlnYXRpb25TZXJ2aWNlIHtcbiAgICBwcml2YXRlIG5hdnM6IHsgW2lkOiBzdHJpbmddOiBJVG9nZ2xlVmlldzsgfTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm5hdnMgPSB7fTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkKGlkOiBzdHJpbmcsIG5hdkl0ZW06IElUb2dnbGVWaWV3KSB7XG4gICAgICAgIHRoaXMubmF2c1tpZF0gPSBuYXZJdGVtO1xuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmUoaWQ6IHN0cmluZykge1xuICAgICAgICBkZWxldGUgdGhpcy5uYXZzW2lkXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0KGlkOiBzdHJpbmcpOiBJVG9nZ2xlVmlldyB7XG4gICAgICAgIGlmIChpZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF2c1tpZF07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgdG9nZ2xlKGlkOiBzdHJpbmcsIC4uLmFyZ3MpIHtcbiAgICAgICAgaWYgKHRoaXMubmF2c1tpZF0pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hdnNbaWRdLnRvZ2dsZSguLi5hcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgb3BlbihpZDogc3RyaW5nLCAuLi5hcmdzKSB7XG4gICAgICAgIGlmICh0aGlzLm5hdnNbaWRdKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uYXZzW2lkXS5vcGVuKC4uLmFyZ3MpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHB1YmxpYyBjbG9zZShpZDogc3RyaW5nLCAuLi5hcmdzKSB7XG4gICAgICAgIGlmICh0aGlzLm5hdnNbaWRdKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uYXZzW2lkXS5jbG9zZSguLi5hcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==