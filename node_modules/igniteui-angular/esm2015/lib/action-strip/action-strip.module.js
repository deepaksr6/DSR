import { NgModule } from '@angular/core';
import { IgxActionStripComponent, IgxActionStripMenuItemDirective } from './action-strip.component';
import { IgxGridPinningActionsComponent } from './grid-actions/grid-pinning-actions.component';
import { IgxGridEditingActionsComponent } from './grid-actions/grid-editing-actions.component';
import { IgxGridActionsBaseDirective } from './grid-actions/grid-actions-base.directive';
import { CommonModule } from '@angular/common';
import { IgxDropDownModule } from '../drop-down/public_api';
import { IgxToggleModule } from '../directives/toggle/toggle.directive';
import { IgxButtonModule } from '../directives/button/button.directive';
import { IgxIconModule } from '../icon/public_api';
import { IgxRippleModule } from '../directives/ripple/ripple.directive';
import { IgxGridActionButtonComponent } from './grid-actions/grid-action-button.component';
/**
 * @hidden
 */
export class IgxActionStripModule {
}
IgxActionStripModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IgxActionStripComponent,
                    IgxActionStripMenuItemDirective,
                    IgxGridPinningActionsComponent,
                    IgxGridEditingActionsComponent,
                    IgxGridActionsBaseDirective,
                    IgxGridActionButtonComponent
                ],
                entryComponents: [],
                exports: [
                    IgxActionStripComponent,
                    IgxActionStripMenuItemDirective,
                    IgxGridPinningActionsComponent,
                    IgxGridEditingActionsComponent,
                    IgxGridActionsBaseDirective,
                    IgxGridActionButtonComponent
                ],
                imports: [CommonModule, IgxDropDownModule, IgxToggleModule, IgxButtonModule, IgxIconModule, IgxRippleModule]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLXN0cmlwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9pZ25pdGV1aS1hbmd1bGFyL2lnbml0ZXVpLWFuZ3VsYXIvcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvIiwic291cmNlcyI6WyJsaWIvYWN0aW9uLXN0cmlwL2FjdGlvbi1zdHJpcC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsK0JBQStCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNwRyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUMvRixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUMvRixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUN6RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBRTNGOztHQUVHO0FBc0JILE1BQU0sT0FBTyxvQkFBb0I7OztZQXJCaEMsUUFBUSxTQUFDO2dCQUNOLFlBQVksRUFBRTtvQkFDVix1QkFBdUI7b0JBQ3ZCLCtCQUErQjtvQkFDL0IsOEJBQThCO29CQUM5Qiw4QkFBOEI7b0JBQzlCLDJCQUEyQjtvQkFDM0IsNEJBQTRCO2lCQUMvQjtnQkFDRCxlQUFlLEVBQUUsRUFDaEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLHVCQUF1QjtvQkFDdkIsK0JBQStCO29CQUMvQiw4QkFBOEI7b0JBQzlCLDhCQUE4QjtvQkFDOUIsMkJBQTJCO29CQUMzQiw0QkFBNEI7aUJBQy9CO2dCQUNELE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLGFBQWEsRUFBRSxlQUFlLENBQUM7YUFDL0ciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4QWN0aW9uU3RyaXBDb21wb25lbnQsIElneEFjdGlvblN0cmlwTWVudUl0ZW1EaXJlY3RpdmUgfSBmcm9tICcuL2FjdGlvbi1zdHJpcC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4R3JpZFBpbm5pbmdBY3Rpb25zQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLWFjdGlvbnMvZ3JpZC1waW5uaW5nLWFjdGlvbnMuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRFZGl0aW5nQWN0aW9uc0NvbXBvbmVudCB9IGZyb20gJy4vZ3JpZC1hY3Rpb25zL2dyaWQtZWRpdGluZy1hY3Rpb25zLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hHcmlkQWN0aW9uc0Jhc2VEaXJlY3RpdmUgfSBmcm9tICcuL2dyaWQtYWN0aW9ucy9ncmlkLWFjdGlvbnMtYmFzZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IElneERyb3BEb3duTW9kdWxlIH0gZnJvbSAnLi4vZHJvcC1kb3duL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgSWd4VG9nZ2xlTW9kdWxlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy90b2dnbGUvdG9nZ2xlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hCdXR0b25Nb2R1bGUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL2J1dHRvbi9idXR0b24uZGlyZWN0aXZlJztcbmltcG9ydCB7IElneEljb25Nb2R1bGUgfSBmcm9tICcuLi9pY29uL3B1YmxpY19hcGknO1xuaW1wb3J0IHsgSWd4UmlwcGxlTW9kdWxlIH0gZnJvbSAnLi4vZGlyZWN0aXZlcy9yaXBwbGUvcmlwcGxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJZ3hHcmlkQWN0aW9uQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLWFjdGlvbnMvZ3JpZC1hY3Rpb24tYnV0dG9uLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBJZ3hBY3Rpb25TdHJpcENvbXBvbmVudCxcbiAgICAgICAgSWd4QWN0aW9uU3RyaXBNZW51SXRlbURpcmVjdGl2ZSxcbiAgICAgICAgSWd4R3JpZFBpbm5pbmdBY3Rpb25zQ29tcG9uZW50LFxuICAgICAgICBJZ3hHcmlkRWRpdGluZ0FjdGlvbnNDb21wb25lbnQsXG4gICAgICAgIElneEdyaWRBY3Rpb25zQmFzZURpcmVjdGl2ZSxcbiAgICAgICAgSWd4R3JpZEFjdGlvbkJ1dHRvbkNvbXBvbmVudFxuICAgIF0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIElneEFjdGlvblN0cmlwQ29tcG9uZW50LFxuICAgICAgICBJZ3hBY3Rpb25TdHJpcE1lbnVJdGVtRGlyZWN0aXZlLFxuICAgICAgICBJZ3hHcmlkUGlubmluZ0FjdGlvbnNDb21wb25lbnQsXG4gICAgICAgIElneEdyaWRFZGl0aW5nQWN0aW9uc0NvbXBvbmVudCxcbiAgICAgICAgSWd4R3JpZEFjdGlvbnNCYXNlRGlyZWN0aXZlLFxuICAgICAgICBJZ3hHcmlkQWN0aW9uQnV0dG9uQ29tcG9uZW50XG4gICAgXSxcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBJZ3hEcm9wRG93bk1vZHVsZSwgSWd4VG9nZ2xlTW9kdWxlLCBJZ3hCdXR0b25Nb2R1bGUsIElneEljb25Nb2R1bGUsIElneFJpcHBsZU1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgSWd4QWN0aW9uU3RyaXBNb2R1bGUgeyB9XG4iXX0=