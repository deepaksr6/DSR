import { ExcelFileTypes, ExcelFolderTypes } from './excel-enums';
import { AppFile, ContentTypesFile, CoreFile, RootRelsFile, SharedStringsFile, StyleFile, TablesFile, ThemeFile, WorkbookFile, WorkbookRelsFile, WorksheetFile, WorksheetRelsFile } from './excel-files';
import { DocPropsExcelFolder, RootExcelFolder, RootRelsExcelFolder, TablesExcelFolder, ThemeExcelFolder, WorksheetsExcelFolder, WorksheetsRelsExcelFolder, XLExcelFolder, XLRelsExcelFolder } from './excel-folders';
/** @hidden */
export class ExcelElementsFactory {
    static getExcelFolder(type) {
        switch (type) {
            case ExcelFolderTypes.RootExcelFolder:
                return new RootExcelFolder();
            case ExcelFolderTypes.RootRelsExcelFolder:
                return new RootRelsExcelFolder();
            case ExcelFolderTypes.DocPropsExcelFolder:
                return new DocPropsExcelFolder();
            case ExcelFolderTypes.XLExcelFolder:
                return new XLExcelFolder();
            case ExcelFolderTypes.XLRelsExcelFolder:
                return new XLRelsExcelFolder();
            case ExcelFolderTypes.ThemeExcelFolder:
                return new ThemeExcelFolder();
            case ExcelFolderTypes.WorksheetsExcelFolder:
                return new WorksheetsExcelFolder();
            case ExcelFolderTypes.WorksheetsRelsExcelFolder:
                return new WorksheetsRelsExcelFolder();
            case ExcelFolderTypes.TablesExcelFolder:
                return new TablesExcelFolder();
            default:
                throw new Error('Unknown excel folder type!');
        }
    }
    static getExcelFile(type) {
        switch (type) {
            case ExcelFileTypes.RootRelsFile:
                return new RootRelsFile();
            case ExcelFileTypes.AppFile:
                return new AppFile();
            case ExcelFileTypes.CoreFile:
                return new CoreFile();
            case ExcelFileTypes.WorkbookRelsFile:
                return new WorkbookRelsFile();
            case ExcelFileTypes.ThemeFile:
                return new ThemeFile();
            case ExcelFileTypes.WorksheetFile:
                return new WorksheetFile();
            case ExcelFileTypes.StyleFile:
                return new StyleFile();
            case ExcelFileTypes.WorkbookFile:
                return new WorkbookFile();
            case ExcelFileTypes.ContentTypesFile:
                return new ContentTypesFile();
            case ExcelFileTypes.SharedStringsFile:
                return new SharedStringsFile();
            case ExcelFileTypes.WorksheetRelsFile:
                return new WorksheetRelsFile();
            case ExcelFileTypes.TablesFile:
                return new TablesFile();
            default:
                throw Error('Unknown excel file type!');
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtZWxlbWVudHMtZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9pZ25pdGV1aS1hbmd1bGFyL2lnbml0ZXVpLWFuZ3VsYXIvcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvZXhjZWwvZXhjZWwtZWxlbWVudHMtZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsY0FBYyxFQUNkLGdCQUFnQixFQUNuQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQ0gsT0FBTyxFQUNQLGdCQUFnQixFQUNoQixRQUFRLEVBQ1IsWUFBWSxFQUNaLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsVUFBVSxFQUNWLFNBQVMsRUFDVCxZQUFZLEVBQ1osZ0JBQWdCLEVBQ2hCLGFBQWEsRUFDYixpQkFBaUIsRUFDcEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUNILG1CQUFtQixFQUNuQixlQUFlLEVBQ2YsbUJBQW1CLEVBQ25CLGlCQUFpQixFQUNqQixnQkFBZ0IsRUFDaEIscUJBQXFCLEVBQ3JCLHlCQUF5QixFQUN6QixhQUFhLEVBQ2IsaUJBQWlCLEVBQ3BCLE1BQU0saUJBQWlCLENBQUM7QUFPekIsY0FBYztBQUNkLE1BQU0sT0FBTyxvQkFBb0I7SUFFdEIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFzQjtRQUMvQyxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssZ0JBQWdCLENBQUMsZUFBZTtnQkFDakMsT0FBTyxJQUFJLGVBQWUsRUFBRSxDQUFDO1lBQ2pDLEtBQUssZ0JBQWdCLENBQUMsbUJBQW1CO2dCQUNyQyxPQUFPLElBQUksbUJBQW1CLEVBQUUsQ0FBQztZQUNyQyxLQUFLLGdCQUFnQixDQUFDLG1CQUFtQjtnQkFDckMsT0FBTyxJQUFJLG1CQUFtQixFQUFFLENBQUM7WUFDckMsS0FBSyxnQkFBZ0IsQ0FBQyxhQUFhO2dCQUMvQixPQUFPLElBQUksYUFBYSxFQUFFLENBQUM7WUFDL0IsS0FBSyxnQkFBZ0IsQ0FBQyxpQkFBaUI7Z0JBQ25DLE9BQU8sSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1lBQ25DLEtBQUssZ0JBQWdCLENBQUMsZ0JBQWdCO2dCQUNsQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztZQUNsQyxLQUFLLGdCQUFnQixDQUFDLHFCQUFxQjtnQkFDdkMsT0FBUSxJQUFJLHFCQUFxQixFQUFFLENBQUM7WUFDeEMsS0FBSyxnQkFBZ0IsQ0FBQyx5QkFBeUI7Z0JBQzNDLE9BQU8sSUFBSSx5QkFBeUIsRUFBRSxDQUFDO1lBQzNDLEtBQUssZ0JBQWdCLENBQUMsaUJBQWlCO2dCQUNuQyxPQUFPLElBQUksaUJBQWlCLEVBQUUsQ0FBQztZQUNuQztnQkFDSSxNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7U0FDckQ7SUFDTCxDQUFDO0lBRU0sTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFvQjtRQUMzQyxRQUFRLElBQUksRUFBRTtZQUNWLEtBQUssY0FBYyxDQUFDLFlBQVk7Z0JBQzVCLE9BQVEsSUFBSSxZQUFZLEVBQUUsQ0FBQztZQUMvQixLQUFLLGNBQWMsQ0FBQyxPQUFPO2dCQUN2QixPQUFRLElBQUksT0FBTyxFQUFFLENBQUM7WUFDMUIsS0FBSyxjQUFjLENBQUMsUUFBUTtnQkFDeEIsT0FBTyxJQUFJLFFBQVEsRUFBRSxDQUFDO1lBQzFCLEtBQUssY0FBYyxDQUFDLGdCQUFnQjtnQkFDaEMsT0FBTyxJQUFJLGdCQUFnQixFQUFFLENBQUM7WUFDbEMsS0FBSyxjQUFjLENBQUMsU0FBUztnQkFDekIsT0FBTyxJQUFJLFNBQVMsRUFBRSxDQUFDO1lBQzNCLEtBQUssY0FBYyxDQUFDLGFBQWE7Z0JBQzdCLE9BQU8sSUFBSSxhQUFhLEVBQUUsQ0FBQztZQUMvQixLQUFLLGNBQWMsQ0FBQyxTQUFTO2dCQUN6QixPQUFPLElBQUksU0FBUyxFQUFFLENBQUM7WUFDM0IsS0FBSyxjQUFjLENBQUMsWUFBWTtnQkFDNUIsT0FBTyxJQUFJLFlBQVksRUFBRSxDQUFDO1lBQzlCLEtBQUssY0FBYyxDQUFDLGdCQUFnQjtnQkFDaEMsT0FBTyxJQUFJLGdCQUFnQixFQUFFLENBQUM7WUFDbEMsS0FBSyxjQUFjLENBQUMsaUJBQWlCO2dCQUNqQyxPQUFPLElBQUksaUJBQWlCLEVBQUUsQ0FBQztZQUNuQyxLQUFLLGNBQWMsQ0FBQyxpQkFBaUI7Z0JBQ2pDLE9BQU8sSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1lBQ25DLEtBQUssY0FBYyxDQUFDLFVBQVU7Z0JBQzFCLE9BQU8sSUFBSSxVQUFVLEVBQUUsQ0FBQztZQUM1QjtnQkFDSSxNQUFNLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1NBQy9DO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBFeGNlbEZpbGVUeXBlcyxcbiAgICBFeGNlbEZvbGRlclR5cGVzXG59IGZyb20gJy4vZXhjZWwtZW51bXMnO1xuXG5pbXBvcnQge1xuICAgIEFwcEZpbGUsXG4gICAgQ29udGVudFR5cGVzRmlsZSxcbiAgICBDb3JlRmlsZSxcbiAgICBSb290UmVsc0ZpbGUsXG4gICAgU2hhcmVkU3RyaW5nc0ZpbGUsXG4gICAgU3R5bGVGaWxlLFxuICAgIFRhYmxlc0ZpbGUsXG4gICAgVGhlbWVGaWxlLFxuICAgIFdvcmtib29rRmlsZSxcbiAgICBXb3JrYm9va1JlbHNGaWxlLFxuICAgIFdvcmtzaGVldEZpbGUsXG4gICAgV29ya3NoZWV0UmVsc0ZpbGVcbn0gZnJvbSAnLi9leGNlbC1maWxlcyc7XG5cbmltcG9ydCB7XG4gICAgRG9jUHJvcHNFeGNlbEZvbGRlcixcbiAgICBSb290RXhjZWxGb2xkZXIsXG4gICAgUm9vdFJlbHNFeGNlbEZvbGRlcixcbiAgICBUYWJsZXNFeGNlbEZvbGRlcixcbiAgICBUaGVtZUV4Y2VsRm9sZGVyLFxuICAgIFdvcmtzaGVldHNFeGNlbEZvbGRlcixcbiAgICBXb3Jrc2hlZXRzUmVsc0V4Y2VsRm9sZGVyLFxuICAgIFhMRXhjZWxGb2xkZXIsXG4gICAgWExSZWxzRXhjZWxGb2xkZXJcbn0gZnJvbSAnLi9leGNlbC1mb2xkZXJzJztcblxuaW1wb3J0IHtcbiAgICBJRXhjZWxGaWxlLFxuICAgIElFeGNlbEZvbGRlclxufSBmcm9tICcuL2V4Y2VsLWludGVyZmFjZXMnO1xuXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IGNsYXNzIEV4Y2VsRWxlbWVudHNGYWN0b3J5IHtcblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RXhjZWxGb2xkZXIodHlwZTogRXhjZWxGb2xkZXJUeXBlcyk6IElFeGNlbEZvbGRlciB7XG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlJvb3RFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJvb3RFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlJvb3RSZWxzRXhjZWxGb2xkZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSb290UmVsc0V4Y2VsRm9sZGVyKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRm9sZGVyVHlwZXMuRG9jUHJvcHNFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IERvY1Byb3BzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5YTEV4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgWExFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlhMUmVsc0V4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgWExSZWxzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5UaGVtZUV4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVGhlbWVFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLldvcmtzaGVldHNFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gIG5ldyBXb3Jrc2hlZXRzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5Xb3Jrc2hlZXRzUmVsc0V4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgV29ya3NoZWV0c1JlbHNFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLlRhYmxlc0V4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVGFibGVzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGV4Y2VsIGZvbGRlciB0eXBlIScpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRFeGNlbEZpbGUodHlwZTogRXhjZWxGaWxlVHlwZXMpOiBJRXhjZWxGaWxlIHtcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlJvb3RSZWxzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gIG5ldyBSb290UmVsc0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuQXBwRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gIG5ldyBBcHBGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLkNvcmVGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ29yZUZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuV29ya2Jvb2tSZWxzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmtib29rUmVsc0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuVGhlbWVGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVGhlbWVGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLldvcmtzaGVldEZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBXb3Jrc2hlZXRGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlN0eWxlRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFN0eWxlRmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5Xb3JrYm9va0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBXb3JrYm9va0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuQ29udGVudFR5cGVzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENvbnRlbnRUeXBlc0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuU2hhcmVkU3RyaW5nc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTaGFyZWRTdHJpbmdzRmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5Xb3Jrc2hlZXRSZWxzRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmtzaGVldFJlbHNGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlRhYmxlc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBUYWJsZXNGaWxlKCk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKCdVbmtub3duIGV4Y2VsIGZpbGUgdHlwZSEnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==