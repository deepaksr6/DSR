import { Directive, HostBinding, TemplateRef } from '@angular/core';
// tslint:disable-next-line: directive-selector
export class IgxExcelTextDirective {
}
IgxExcelTextDirective.decorators = [
    { type: Directive, args: [{ selector: '[excelText],excel-text' },] }
];
// tslint:disable-next-line: directive-selector
export class IgxCSVTextDirective {
}
IgxCSVTextDirective.decorators = [
    { type: Directive, args: [{ selector: '[csvText],csv-text' },] }
];
/**
 * Provides a way to template the title portion of the toolbar in the grid.
 *
 * @igxModule IgxGridToolbarModule
 * @igxParent IgxGridToolbarComponent
 *
 * @example
 * ```html
 * <igx-grid-toolbar-title>My custom title</igx-grid-toolbar-title>
 * ```
 */
export class IgxGridToolbarTitleDirective {
    constructor() {
        /**
         * Host `class.igx-grid-toolbar__title` binding.
         * @hidden
         * @internal
         */
        this.cssClass = 'igx-grid-toolbar__title';
    }
}
IgxGridToolbarTitleDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxGridToolbarTitle],igx-grid-toolbar-title' },] }
];
IgxGridToolbarTitleDirective.propDecorators = {
    cssClass: [{ type: HostBinding, args: ['class.igx-grid-toolbar__title',] }]
};
/**
 * Provides a way to template the action portion of the toolbar in the grid.
 *
 * @igxModule IgxGridToolbarModule
 * @igxParent IgxGridToolbarComponent
 *
 * @example
 * ```html
 * <igx-grid-toolbar-actions>
 *  <some-toolbar-action-here />
 * </igx-grid-toolbar-actions>
 * ```
 */
export class IgxGridToolbarActionsDirective {
    constructor() {
        /**
         * Host `class.igx-grid-toolbar__actions` binding.
         * @hidden
         * @internal
         */
        this.cssClass = 'igx-grid-toolbar__actions';
    }
}
IgxGridToolbarActionsDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxGridToolbarActions],igx-grid-toolbar-actions' },] }
];
IgxGridToolbarActionsDirective.propDecorators = {
    cssClass: [{ type: HostBinding, args: ['class.igx-grid-toolbar__actions',] }]
};
export class IgxGridToolbarDirective {
    constructor(template) {
        this.template = template;
    }
}
IgxGridToolbarDirective.decorators = [
    { type: Directive, args: [{ selector: '[igxGridToolbar]' },] }
];
IgxGridToolbarDirective.ctorParameters = () => [
    { type: TemplateRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2lnbml0ZXVpLWFuZ3VsYXIvaWduaXRldWktYW5ndWxhci9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9ncmlkcy90b29sYmFyL2NvbW1vbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJcEUsK0NBQStDO0FBRS9DLE1BQU0sT0FBTyxxQkFBcUI7OztZQURqQyxTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsd0JBQXdCLEVBQUU7O0FBSWpELCtDQUErQztBQUUvQyxNQUFNLE9BQU8sbUJBQW1COzs7WUFEL0IsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLG9CQUFvQixFQUFFOztBQUc3Qzs7Ozs7Ozs7OztHQVVHO0FBRUgsTUFBTSxPQUFPLDRCQUE0QjtJQUR6QztRQUVJOzs7O1dBSUc7UUFFSSxhQUFRLEdBQUcseUJBQXlCLENBQUM7SUFDaEQsQ0FBQzs7O1lBVEEsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLDhDQUE4QyxFQUFFOzs7dUJBT2xFLFdBQVcsU0FBQywrQkFBK0I7O0FBSWhEOzs7Ozs7Ozs7Ozs7R0FZRztBQUVILE1BQU0sT0FBTyw4QkFBOEI7SUFEM0M7UUFFSTs7OztXQUlHO1FBRUksYUFBUSxHQUFHLDJCQUEyQixDQUFDO0lBQ2pELENBQUM7OztZQVRELFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxrREFBa0QsRUFBRTs7O3VCQU90RSxXQUFXLFNBQUMsaUNBQWlDOztBQVNsRCxNQUFNLE9BQU8sdUJBQXVCO0lBQ2hDLFlBQW1CLFFBQW9EO1FBQXBELGFBQVEsR0FBUixRQUFRLENBQTRDO0lBQUcsQ0FBQzs7O1lBRjlFLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxrQkFBa0IsRUFBQzs7O1lBL0RULFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4SGllcmFyY2hpY2FsR3JpZENvbXBvbmVudCB9IGZyb20gJy4uL2hpZXJhcmNoaWNhbC1ncmlkL2hpZXJhcmNoaWNhbC1ncmlkLmNvbXBvbmVudCc7XG5cblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBkaXJlY3RpdmUtc2VsZWN0b3JcbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tleGNlbFRleHRdLGV4Y2VsLXRleHQnIH0pXG5leHBvcnQgY2xhc3MgSWd4RXhjZWxUZXh0RGlyZWN0aXZlIHsgfVxuXG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogZGlyZWN0aXZlLXNlbGVjdG9yXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbY3N2VGV4dF0sY3N2LXRleHQnIH0pXG5leHBvcnQgY2xhc3MgSWd4Q1NWVGV4dERpcmVjdGl2ZSB7IH1cblxuLyoqXG4gKiBQcm92aWRlcyBhIHdheSB0byB0ZW1wbGF0ZSB0aGUgdGl0bGUgcG9ydGlvbiBvZiB0aGUgdG9vbGJhciBpbiB0aGUgZ3JpZC5cbiAqXG4gKiBAaWd4TW9kdWxlIElneEdyaWRUb29sYmFyTW9kdWxlXG4gKiBAaWd4UGFyZW50IElneEdyaWRUb29sYmFyQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxpZ3gtZ3JpZC10b29sYmFyLXRpdGxlPk15IGN1c3RvbSB0aXRsZTwvaWd4LWdyaWQtdG9vbGJhci10aXRsZT5cbiAqIGBgYFxuICovXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbaWd4R3JpZFRvb2xiYXJUaXRsZV0saWd4LWdyaWQtdG9vbGJhci10aXRsZScgfSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkVG9vbGJhclRpdGxlRGlyZWN0aXZlIHtcbiAgICAvKipcbiAgICAgKiBIb3N0IGBjbGFzcy5pZ3gtZ3JpZC10b29sYmFyX190aXRsZWAgYmluZGluZy5cbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtZ3JpZC10b29sYmFyX190aXRsZScpXG4gICAgcHVibGljIGNzc0NsYXNzID0gJ2lneC1ncmlkLXRvb2xiYXJfX3RpdGxlJztcbn1cblxuLyoqXG4gKiBQcm92aWRlcyBhIHdheSB0byB0ZW1wbGF0ZSB0aGUgYWN0aW9uIHBvcnRpb24gb2YgdGhlIHRvb2xiYXIgaW4gdGhlIGdyaWQuXG4gKlxuICogQGlneE1vZHVsZSBJZ3hHcmlkVG9vbGJhck1vZHVsZVxuICogQGlneFBhcmVudCBJZ3hHcmlkVG9vbGJhckNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8aWd4LWdyaWQtdG9vbGJhci1hY3Rpb25zPlxuICogIDxzb21lLXRvb2xiYXItYWN0aW9uLWhlcmUgLz5cbiAqIDwvaWd4LWdyaWQtdG9vbGJhci1hY3Rpb25zPlxuICogYGBgXG4gKi9cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tpZ3hHcmlkVG9vbGJhckFjdGlvbnNdLGlneC1ncmlkLXRvb2xiYXItYWN0aW9ucycgfSlcbmV4cG9ydCBjbGFzcyBJZ3hHcmlkVG9vbGJhckFjdGlvbnNEaXJlY3RpdmUge1xuICAgIC8qKlxuICAgICAqIEhvc3QgYGNsYXNzLmlneC1ncmlkLXRvb2xiYXJfX2FjdGlvbnNgIGJpbmRpbmcuXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWdyaWQtdG9vbGJhcl9fYWN0aW9ucycpXG4gICAgcHVibGljIGNzc0NsYXNzID0gJ2lneC1ncmlkLXRvb2xiYXJfX2FjdGlvbnMnO1xuIH1cblxuZXhwb3J0IGludGVyZmFjZSBJZ3hHcmlkVG9vbGJhclRlbXBsYXRlQ29udGV4dCB7XG4gICAgJGltcGxpY2l0OiBJZ3hIaWVyYXJjaGljYWxHcmlkQ29tcG9uZW50O1xufVxuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbaWd4R3JpZFRvb2xiYXJdJ30pXG5leHBvcnQgY2xhc3MgSWd4R3JpZFRvb2xiYXJEaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8SWd4R3JpZFRvb2xiYXJUZW1wbGF0ZUNvbnRleHQ+KSB7fVxufVxuIl19