import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';
import { IgxTreeGridComponent } from './tree-grid.component';
import { IgxTreeGridRowComponent } from './tree-grid-row.component';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxTreeGridHierarchizingPipe, IgxTreeGridNormalizeRecordsPipe } from './tree-grid.pipes';
import { IgxTreeGridFlatteningPipe, IgxTreeGridSortingPipe, IgxTreeGridPagingPipe, IgxTreeGridTransactionPipe } from './tree-grid.pipes';
import { IgxTreeGridCellComponent } from './tree-cell.component';
import { IgxTreeGridFilteringPipe } from './tree-grid.filtering.pipe';
import { IgxTreeGridSummaryPipe } from './tree-grid.summary.pipe';
import { IgxRowLoadingIndicatorTemplateDirective } from './tree-grid.directives';
/**
 * @hidden
 */
export class IgxTreeGridModule {
}
IgxTreeGridModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IgxTreeGridComponent,
                    IgxTreeGridRowComponent,
                    IgxTreeGridCellComponent,
                    IgxTreeGridHierarchizingPipe,
                    IgxTreeGridFlatteningPipe,
                    IgxTreeGridSortingPipe,
                    IgxTreeGridFilteringPipe,
                    IgxTreeGridPagingPipe,
                    IgxTreeGridTransactionPipe,
                    IgxTreeGridSummaryPipe,
                    IgxRowLoadingIndicatorTemplateDirective,
                    IgxTreeGridNormalizeRecordsPipe
                ],
                exports: [
                    IgxTreeGridComponent,
                    IgxTreeGridRowComponent,
                    IgxTreeGridCellComponent,
                    IgxRowLoadingIndicatorTemplateDirective,
                    IgxGridCommonModule
                ],
                imports: [
                    IgxGridCommonModule,
                ],
                schemas: [CUSTOM_ELEMENTS_SCHEMA]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ncmlkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9pZ25pdGV1aS1hbmd1bGFyL2lnbml0ZXVpLWFuZ3VsYXIvcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvIiwic291cmNlcyI6WyJsaWIvZ3JpZHMvdHJlZS1ncmlkL3RyZWUtZ3JpZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsc0JBQXNCLEVBQUUscUJBQXFCLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN6SSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsdUNBQXVDLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNqRjs7R0FFRztBQTRCSCxNQUFNLE9BQU8saUJBQWlCOzs7WUEzQjdCLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osb0JBQW9CO29CQUNwQix1QkFBdUI7b0JBQ3ZCLHdCQUF3QjtvQkFDeEIsNEJBQTRCO29CQUM1Qix5QkFBeUI7b0JBQ3pCLHNCQUFzQjtvQkFDdEIsd0JBQXdCO29CQUN4QixxQkFBcUI7b0JBQ3JCLDBCQUEwQjtvQkFDMUIsc0JBQXNCO29CQUN0Qix1Q0FBdUM7b0JBQ3ZDLCtCQUErQjtpQkFDaEM7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLG9CQUFvQjtvQkFDcEIsdUJBQXVCO29CQUN2Qix3QkFBd0I7b0JBQ3hCLHVDQUF1QztvQkFDdkMsbUJBQW1CO2lCQUNwQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsbUJBQW1CO2lCQUNwQjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQzthQUNsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBDVVNUT01fRUxFTUVOVFNfU0NIRU1BIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZENvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZFJvd0NvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1ncmlkLXJvdy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4R3JpZENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2dyaWQtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZEhpZXJhcmNoaXppbmdQaXBlLCBJZ3hUcmVlR3JpZE5vcm1hbGl6ZVJlY29yZHNQaXBlIH0gZnJvbSAnLi90cmVlLWdyaWQucGlwZXMnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRGbGF0dGVuaW5nUGlwZSwgSWd4VHJlZUdyaWRTb3J0aW5nUGlwZSwgSWd4VHJlZUdyaWRQYWdpbmdQaXBlLCBJZ3hUcmVlR3JpZFRyYW5zYWN0aW9uUGlwZSB9IGZyb20gJy4vdHJlZS1ncmlkLnBpcGVzJztcbmltcG9ydCB7IElneFRyZWVHcmlkQ2VsbENvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZEZpbHRlcmluZ1BpcGUgfSBmcm9tICcuL3RyZWUtZ3JpZC5maWx0ZXJpbmcucGlwZSc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZFN1bW1hcnlQaXBlIH0gZnJvbSAnLi90cmVlLWdyaWQuc3VtbWFyeS5waXBlJztcbmltcG9ydCB7IElneFJvd0xvYWRpbmdJbmRpY2F0b3JUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vdHJlZS1ncmlkLmRpcmVjdGl2ZXMnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIElneFRyZWVHcmlkQ29tcG9uZW50LFxuICAgIElneFRyZWVHcmlkUm93Q29tcG9uZW50LFxuICAgIElneFRyZWVHcmlkQ2VsbENvbXBvbmVudCxcbiAgICBJZ3hUcmVlR3JpZEhpZXJhcmNoaXppbmdQaXBlLFxuICAgIElneFRyZWVHcmlkRmxhdHRlbmluZ1BpcGUsXG4gICAgSWd4VHJlZUdyaWRTb3J0aW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZEZpbHRlcmluZ1BpcGUsXG4gICAgSWd4VHJlZUdyaWRQYWdpbmdQaXBlLFxuICAgIElneFRyZWVHcmlkVHJhbnNhY3Rpb25QaXBlLFxuICAgIElneFRyZWVHcmlkU3VtbWFyeVBpcGUsXG4gICAgSWd4Um93TG9hZGluZ0luZGljYXRvclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIElneFRyZWVHcmlkTm9ybWFsaXplUmVjb3Jkc1BpcGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIElneFRyZWVHcmlkQ29tcG9uZW50LFxuICAgIElneFRyZWVHcmlkUm93Q29tcG9uZW50LFxuICAgIElneFRyZWVHcmlkQ2VsbENvbXBvbmVudCxcbiAgICBJZ3hSb3dMb2FkaW5nSW5kaWNhdG9yVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgSWd4R3JpZENvbW1vbk1vZHVsZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgSWd4R3JpZENvbW1vbk1vZHVsZSxcbiAgXSxcbiAgc2NoZW1hczogW0NVU1RPTV9FTEVNRU5UU19TQ0hFTUFdXG59KVxuZXhwb3J0IGNsYXNzIElneFRyZWVHcmlkTW9kdWxlIHtcbn1cbiJdfQ==