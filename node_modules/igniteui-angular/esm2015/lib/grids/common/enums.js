import { mkenum } from '../../core/utils';
export const FilterMode = mkenum({
    quickFilter: 'quickFilter',
    excelStyleFilter: 'excelStyleFilter'
});
export const GridSummaryPosition = mkenum({
    top: 'top',
    bottom: 'bottom'
});
export const GridSummaryCalculationMode = mkenum({
    rootLevelOnly: 'rootLevelOnly',
    childLevelsOnly: 'childLevelsOnly',
    rootAndChildLevels: 'rootAndChildLevels'
});
export const GridSelectionMode = mkenum({
    none: 'none',
    single: 'single',
    multiple: 'multiple'
});
export const ColumnDisplayOrder = mkenum({
    Alphabetical: 'Alphabetical',
    DisplayOrder: 'DisplayOrder'
});
export var ColumnPinningPosition;
(function (ColumnPinningPosition) {
    ColumnPinningPosition[ColumnPinningPosition["Start"] = 0] = "Start";
    ColumnPinningPosition[ColumnPinningPosition["End"] = 1] = "End";
})(ColumnPinningPosition || (ColumnPinningPosition = {}));
export var RowPinningPosition;
(function (RowPinningPosition) {
    RowPinningPosition[RowPinningPosition["Top"] = 0] = "Top";
    RowPinningPosition[RowPinningPosition["Bottom"] = 1] = "Bottom";
})(RowPinningPosition || (RowPinningPosition = {}));
export var GridPagingMode;
(function (GridPagingMode) {
    GridPagingMode[GridPagingMode["local"] = 0] = "local";
    GridPagingMode[GridPagingMode["remote"] = 1] = "remote";
})(GridPagingMode || (GridPagingMode = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bXMuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvaWduaXRldWktYW5ndWxhci9pZ25pdGV1aS1hbmd1bGFyL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjLyIsInNvdXJjZXMiOlsibGliL2dyaWRzL2NvbW1vbi9lbnVtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDMUMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQztJQUM3QixXQUFXLEVBQUUsYUFBYTtJQUMxQixnQkFBZ0IsRUFBRSxrQkFBa0I7Q0FDdkMsQ0FBQyxDQUFDO0FBR0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsTUFBTSxDQUFDO0lBQ3RDLEdBQUcsRUFBRSxLQUFLO0lBQ1YsTUFBTSxFQUFFLFFBQVE7Q0FDbkIsQ0FBQyxDQUFDO0FBR0gsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsTUFBTSxDQUFDO0lBQzdDLGFBQWEsRUFBRSxlQUFlO0lBQzlCLGVBQWUsRUFBRSxpQkFBaUI7SUFDbEMsa0JBQWtCLEVBQUUsb0JBQW9CO0NBQzNDLENBQUMsQ0FBQztBQVdILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQztJQUNwQyxJQUFJLEVBQUUsTUFBTTtJQUNaLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFFBQVEsRUFBRSxVQUFVO0NBQ3ZCLENBQUMsQ0FBQztBQUdILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLE1BQU0sQ0FBQztJQUNyQyxZQUFZLEVBQUUsY0FBYztJQUM1QixZQUFZLEVBQUUsY0FBYztDQUMvQixDQUFDLENBQUM7QUFHSCxNQUFNLENBQU4sSUFBWSxxQkFHWDtBQUhELFdBQVkscUJBQXFCO0lBQzdCLG1FQUFLLENBQUE7SUFDTCwrREFBRyxDQUFBO0FBQ1AsQ0FBQyxFQUhXLHFCQUFxQixLQUFyQixxQkFBcUIsUUFHaEM7QUFFRCxNQUFNLENBQU4sSUFBWSxrQkFHWDtBQUhELFdBQVksa0JBQWtCO0lBQzFCLHlEQUFHLENBQUE7SUFDSCwrREFBTSxDQUFBO0FBQ1YsQ0FBQyxFQUhXLGtCQUFrQixLQUFsQixrQkFBa0IsUUFHN0I7QUFFRCxNQUFNLENBQU4sSUFBWSxjQUdYO0FBSEQsV0FBWSxjQUFjO0lBQ3RCLHFEQUFLLENBQUE7SUFDTCx1REFBTSxDQUFBO0FBQ1YsQ0FBQyxFQUhXLGNBQWMsS0FBZCxjQUFjLFFBR3pCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBta2VudW0gfSBmcm9tICcuLi8uLi9jb3JlL3V0aWxzJztcbmV4cG9ydCBjb25zdCBGaWx0ZXJNb2RlID0gbWtlbnVtKHtcbiAgICBxdWlja0ZpbHRlcjogJ3F1aWNrRmlsdGVyJyxcbiAgICBleGNlbFN0eWxlRmlsdGVyOiAnZXhjZWxTdHlsZUZpbHRlcidcbn0pO1xuZXhwb3J0IHR5cGUgRmlsdGVyTW9kZSA9ICh0eXBlb2YgRmlsdGVyTW9kZSlba2V5b2YgdHlwZW9mIEZpbHRlck1vZGVdO1xuXG5leHBvcnQgY29uc3QgR3JpZFN1bW1hcnlQb3NpdGlvbiA9IG1rZW51bSh7XG4gICAgdG9wOiAndG9wJyxcbiAgICBib3R0b206ICdib3R0b20nXG59KTtcbmV4cG9ydCB0eXBlIEdyaWRTdW1tYXJ5UG9zaXRpb24gPSAodHlwZW9mIEdyaWRTdW1tYXJ5UG9zaXRpb24pW2tleW9mIHR5cGVvZiBHcmlkU3VtbWFyeVBvc2l0aW9uXTtcblxuZXhwb3J0IGNvbnN0IEdyaWRTdW1tYXJ5Q2FsY3VsYXRpb25Nb2RlID0gbWtlbnVtKHtcbiAgICByb290TGV2ZWxPbmx5OiAncm9vdExldmVsT25seScsXG4gICAgY2hpbGRMZXZlbHNPbmx5OiAnY2hpbGRMZXZlbHNPbmx5JyxcbiAgICByb290QW5kQ2hpbGRMZXZlbHM6ICdyb290QW5kQ2hpbGRMZXZlbHMnXG59KTtcbmV4cG9ydCB0eXBlIEdyaWRTdW1tYXJ5Q2FsY3VsYXRpb25Nb2RlID0gKHR5cGVvZiBHcmlkU3VtbWFyeUNhbGN1bGF0aW9uTW9kZSlba2V5b2YgdHlwZW9mIEdyaWRTdW1tYXJ5Q2FsY3VsYXRpb25Nb2RlXTtcblxuZXhwb3J0IHR5cGUgR3JpZEtleWRvd25UYXJnZXRUeXBlID1cbiAgICAnZGF0YUNlbGwnIHxcbiAgICAnc3VtbWFyeUNlbGwnIHxcbiAgICAnZ3JvdXBSb3cnIHxcbiAgICAnaGllcmFyY2hpY2FsUm93JyB8XG4gICAgJ2hlYWRlckNlbGwnIHxcbiAgICAnbWFzdGVyRGV0YWlsUm93JztcblxuZXhwb3J0IGNvbnN0IEdyaWRTZWxlY3Rpb25Nb2RlID0gbWtlbnVtKHtcbiAgICBub25lOiAnbm9uZScsXG4gICAgc2luZ2xlOiAnc2luZ2xlJyxcbiAgICBtdWx0aXBsZTogJ211bHRpcGxlJ1xufSk7XG5leHBvcnQgdHlwZSBHcmlkU2VsZWN0aW9uTW9kZSA9ICh0eXBlb2YgR3JpZFNlbGVjdGlvbk1vZGUpW2tleW9mIHR5cGVvZiBHcmlkU2VsZWN0aW9uTW9kZV07XG5cbmV4cG9ydCBjb25zdCBDb2x1bW5EaXNwbGF5T3JkZXIgPSBta2VudW0oe1xuICAgIEFscGhhYmV0aWNhbDogJ0FscGhhYmV0aWNhbCcsXG4gICAgRGlzcGxheU9yZGVyOiAnRGlzcGxheU9yZGVyJ1xufSk7XG5leHBvcnQgdHlwZSBDb2x1bW5EaXNwbGF5T3JkZXIgPSAodHlwZW9mIENvbHVtbkRpc3BsYXlPcmRlcilba2V5b2YgdHlwZW9mIENvbHVtbkRpc3BsYXlPcmRlcl07XG5cbmV4cG9ydCBlbnVtIENvbHVtblBpbm5pbmdQb3NpdGlvbiB7XG4gICAgU3RhcnQsXG4gICAgRW5kXG59XG5cbmV4cG9ydCBlbnVtIFJvd1Bpbm5pbmdQb3NpdGlvbiB7XG4gICAgVG9wLFxuICAgIEJvdHRvbVxufVxuXG5leHBvcnQgZW51bSBHcmlkUGFnaW5nTW9kZSB7XG4gICAgbG9jYWwsXG4gICAgcmVtb3RlXG59XG4iXX0=