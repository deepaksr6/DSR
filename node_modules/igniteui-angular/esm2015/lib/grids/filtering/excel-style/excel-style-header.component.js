import { Component, Input } from '@angular/core';
import { IgxGridExcelStyleFilteringComponent } from './grid.excel-style-filtering.component';
/**
 * A component used for presenting Excel style header UI.
 */
export class IgxExcelStyleHeaderComponent {
    constructor(esf) {
        this.esf = esf;
    }
}
IgxExcelStyleHeaderComponent.decorators = [
    { type: Component, args: [{
                preserveWhitespaces: false,
                selector: 'igx-excel-style-header',
                template: "<header *ngIf=\"esf.column\"\r\n        class=\"igx-excel-filter__menu-header\">\r\n    <h4>{{ esf.column.header || esf.column.field }}</h4>\r\n    <div class=\"igx-excel-filter__menu-header-actions\">\r\n        <button *ngIf=\"showSelecting\"\r\n            igxButton=\"icon\"\r\n            (click)=\"esf.onSelect()\"\r\n            [ngClass]=\"esf.selectedClass()\"\r\n        >\r\n            <igx-icon fontSet=\"material\">done</igx-icon>\r\n        </button>\r\n        <button *ngIf=\"showPinning\"\r\n            igxButton=\"icon\"\r\n            (click)=\"esf.onPin()\"\r\n        >\r\n            <igx-icon fontSet=\"imx-icons\" [name]=\"esf.column.pinned ? 'unpin-left' : 'pin-left'\"></igx-icon>\r\n        </button>\r\n        <button *ngIf=\"showHiding\"\r\n            igxButton=\"icon\"\r\n            (click)=\"esf.onHideToggle()\"\r\n        >\r\n            <igx-icon>{{ esf.column.hidden ? 'visibility' : 'visibility_off' }}</igx-icon>\r\n        </button>\r\n    </div>\r\n</header>\r\n"
            },] }
];
IgxExcelStyleHeaderComponent.ctorParameters = () => [
    { type: IgxGridExcelStyleFilteringComponent }
];
IgxExcelStyleHeaderComponent.propDecorators = {
    showPinning: [{ type: Input }],
    showSelecting: [{ type: Input }],
    showHiding: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtc3R5bGUtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9pZ25pdGV1aS1hbmd1bGFyL2lnbml0ZXVpLWFuZ3VsYXIvcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvIiwic291cmNlcyI6WyJsaWIvZ3JpZHMvZmlsdGVyaW5nL2V4Y2VsLXN0eWxlL2V4Y2VsLXN0eWxlLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFFN0Y7O0dBRUc7QUFNSCxNQUFNLE9BQU8sNEJBQTRCO0lBQ3JDLFlBQW1CLEdBQXdDO1FBQXhDLFFBQUcsR0FBSCxHQUFHLENBQXFDO0lBQUksQ0FBQzs7O1lBTm5FLFNBQVMsU0FBQztnQkFDUCxtQkFBbUIsRUFBRSxLQUFLO2dCQUMxQixRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyw0L0JBQWtEO2FBQ3JEOzs7WUFUUSxtQ0FBbUM7OzswQkFzQnZDLEtBQUs7NEJBWUwsS0FBSzt5QkFZTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJZ3hHcmlkRXhjZWxTdHlsZUZpbHRlcmluZ0NvbXBvbmVudCB9IGZyb20gJy4vZ3JpZC5leGNlbC1zdHlsZS1maWx0ZXJpbmcuY29tcG9uZW50JztcclxuXHJcbi8qKlxyXG4gKiBBIGNvbXBvbmVudCB1c2VkIGZvciBwcmVzZW50aW5nIEV4Y2VsIHN0eWxlIGhlYWRlciBVSS5cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXHJcbiAgICBzZWxlY3RvcjogJ2lneC1leGNlbC1zdHlsZS1oZWFkZXInLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2V4Y2VsLXN0eWxlLWhlYWRlci5jb21wb25lbnQuaHRtbCdcclxufSlcclxuZXhwb3J0IGNsYXNzIElneEV4Y2VsU3R5bGVIZWFkZXJDb21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHVibGljIGVzZjogSWd4R3JpZEV4Y2VsU3R5bGVGaWx0ZXJpbmdDb21wb25lbnQpIHsgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB3aGV0aGVyIHRoZSBjb2x1bW4gcGlubmluZyBpY29uIHNob3VsZCBiZSBzaG93biBpbiB0aGUgaGVhZGVyLlxyXG4gICAgICogRGVmYXVsdCB2YWx1ZSBpcyBgZmFsc2VgLlxyXG4gICAgICpcclxuICAgICAqIEBleGFtcGxlXHJcbiAgICAgKiBgYGBodG1sXHJcbiAgICAgKiA8aWd4LWV4Y2VsLXN0eWxlLWhlYWRlciBbc2hvd1Bpbm5pbmddPVwidHJ1ZVwiPjwvaWd4LWV4Y2VsLXN0eWxlLWhlYWRlcj5cclxuICAgICAqIGBgYFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2hvd1Bpbm5pbmc6IGJvb2xlYW47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHdoZXRoZXIgdGhlIGNvbHVtbiBzZWxlY3RpbmcgaWNvbiBzaG91bGQgYmUgc2hvd24gaW4gdGhlIGhlYWRlci5cclxuICAgICAqIERlZmF1bHQgdmFsdWUgaXMgYGZhbHNlYC5cclxuICAgICAqXHJcbiAgICAgKiBAZXhhbXBsZVxyXG4gICAgICogYGBgaHRtbFxyXG4gICAgICogPGlneC1leGNlbC1zdHlsZS1oZWFkZXIgW3Nob3dTZWxlY3RpbmddPVwidHJ1ZVwiPjwvaWd4LWV4Y2VsLXN0eWxlLWhlYWRlcj5cclxuICAgICAqIGBgYFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2hvd1NlbGVjdGluZzogYm9vbGVhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgd2hldGhlciB0aGUgY29sdW1uIGhpZGluZyBpY29uIHNob3VsZCBiZSBzaG93biBpbiB0aGUgaGVhZGVyLlxyXG4gICAgICogRGVmYXVsdCB2YWx1ZSBpcyBgZmFsc2VgLlxyXG4gICAgICpcclxuICAgICAqIEBleGFtcGxlXHJcbiAgICAgKiBgYGBodG1sXHJcbiAgICAgKiA8aWd4LWV4Y2VsLXN0eWxlLWhlYWRlciBbc2hvd0hpZGluZ109XCJ0cnVlXCI+PC9pZ3gtZXhjZWwtc3R5bGUtaGVhZGVyPlxyXG4gICAgICogYGBgXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpXHJcbiAgICBzaG93SGlkaW5nOiBib29sZWFuO1xyXG59XHJcbiJdfQ==