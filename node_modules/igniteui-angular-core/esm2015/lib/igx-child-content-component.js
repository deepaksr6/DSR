/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Component, ChangeDetectionStrategy, TemplateRef, ChangeDetectorRef, Input, ViewContainerRef, Renderer2 } from '@angular/core';
let IgxChildContentComponent = class IgxChildContentComponent {
    constructor(_changeDetectorRef, renderer, viewContainer) {
        this._changeDetectorRef = _changeDetectorRef;
        this.renderer = renderer;
        this.viewContainer = viewContainer;
        this._display = "inline-block";
        this._flexDirection = "row";
        this._alignItems = "center";
        this._template = null;
    }
    get display() {
        return this._display;
    }
    set display(value) {
        this._display = value;
        var ele = this.viewContainer.element.nativeElement;
        this.renderer.setStyle(ele, "display", this._display);
        //this.style.display = value;
    }
    get flexDirection() {
        return this._flexDirection;
    }
    set flexDirection(value) {
        this._flexDirection = value;
        var ele = this.viewContainer.element.nativeElement;
        this.renderer.setStyle(ele, "flex-direction", this._flexDirection);
        //this.style.flexDirection = value;
    }
    get alignItems() {
        return this._alignItems;
    }
    set alignItems(value) {
        this._alignItems = value;
        var ele = this.viewContainer.element.nativeElement;
        this.renderer.setStyle(ele, "align-items", this._alignItems);
        //this.style.flexDirection = value;
    }
    set template(value) {
        this._template = value;
        this._changeDetectorRef.detectChanges();
        // if (this._context != null) {
        //     
        // }
    }
    get template() {
        return this._template;
    }
    markChanged() {
        this._changeDetectorRef.detectChanges();
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", TemplateRef),
    tslib_1.__metadata("design:paramtypes", [TemplateRef])
], IgxChildContentComponent.prototype, "template", null);
IgxChildContentComponent = tslib_1.__decorate([
    Component({
        selector: 'igx-child-content',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: `
    <ng-template #defaultTemplate>
        <div></div>
    </ng-template>
    <ng-container *ngTemplateOutlet="template ? template : defaultTemplate;">
    </ng-container>
  `,
        host: { class: "ig-child-content igx-child-content" },
        styles: [`
`]
    }),
    tslib_1.__metadata("design:paramtypes", [ChangeDetectorRef, Renderer2, ViewContainerRef])
], IgxChildContentComponent);
export { IgxChildContentComponent };
//# sourceMappingURL=igx-child-content-component.js.map